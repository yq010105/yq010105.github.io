<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>体育锻炼相关</title>
      <link href="/2020/05/17/yq-sports/"/>
      <url>/2020/05/17/yq-sports/</url>
      
        <content type="html"><![CDATA[<h1 id="1-万恶之源——太极拳"><a href="#1-万恶之源——太极拳" class="headerlink" title="1 万恶之源——太极拳"></a>1 万恶之源——太极拳</h1><p><strong>分解8段</strong></p><p>共24式</p><h2 id="1-‘3’"><a href="#1-‘3’" class="headerlink" title="1 ‘3’"></a>1 ‘3’</h2><ul><li>起势       </li><li>左右野马分鬃*3 左右左</li><li>白鹤亮翅</li></ul><h2 id="2-‘6’"><a href="#2-‘6’" class="headerlink" title="2 ‘6’"></a>2 ‘6’</h2><ul><li>搂膝拗步*3 左右左</li><li>手挥琵琶</li><li>左右倒转肱*4 右左右左</li></ul><h2 id="3-‘8’"><a href="#3-‘8’" class="headerlink" title="3 ‘8’"></a>3 ‘8’</h2><ul><li>左揽雀尾</li><li>右揽雀尾</li></ul><h2 id="4-‘11’"><a href="#4-‘11’" class="headerlink" title="4 ‘11’"></a>4 ‘11’</h2><ul><li>单鞭</li><li>云手</li><li>单鞭</li></ul><h2 id="5-‘14’"><a href="#5-‘14’" class="headerlink" title="5 ‘14’"></a>5 ‘14’</h2><ul><li>高探马</li><li>右蹬脚 </li><li>双峰贯耳</li></ul><h2 id="6-‘17’"><a href="#6-‘17’" class="headerlink" title="6 ‘17’"></a>6 ‘17’</h2><ul><li>转身左蹬脚</li><li>左下势独立</li><li>右下势独立</li></ul><h2 id="7-‘20’"><a href="#7-‘20’" class="headerlink" title="7 ‘20’"></a>7 ‘20’</h2><ul><li>左右穿梭*2 右穿左穿</li><li>海底针</li><li>闪通臂</li></ul><h2 id="8-‘24’"><a href="#8-‘24’" class="headerlink" title="8 ‘24’"></a>8 ‘24’</h2><ul><li>转身搬拦捶</li><li>如封似闭</li><li>十字手</li><li>收势</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>VB的作业和复习</title>
      <link href="/2020/05/07/review-vb/"/>
      <url>/2020/05/07/review-vb/</url>
      
        <content type="html"><![CDATA[<h1 id="1-学习作业"><a href="#1-学习作业" class="headerlink" title="1. 学习作业"></a>1. 学习作业</h1><h2 id="1-1-第一次作业"><a href="#1-1-第一次作业" class="headerlink" title="1.1 第一次作业"></a>1.1 第一次作业</h2><h3 id="1-倒计时控件"><a href="#1-倒计时控件" class="headerlink" title="1. 倒计时控件"></a>1. 倒计时控件</h3><p><img src="/img/VB/zy/zy1_1.png" alt="第一次作业"></p><p><strong>作业代码</strong></p><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command1_Click()</span><br><span class="line">    Timer1.Interval = <span class="number">50</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command2_Click()</span><br><span class="line">    <span class="keyword">End</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Timer1_Timer()</span><br><span class="line">    Text2.<span class="keyword">Text</span> = Format(Now(), <span class="string">"yyyy/MM/dd hh:mm:ss"</span>)</span><br><span class="line">    Text3.<span class="keyword">Text</span> = <span class="meta">#10/1/2020# - Date &amp; "天"</span></span><br><span class="line">    Text1.<span class="keyword">Text</span> = <span class="string">"2020-10-01"</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></tbody></table></figure><p>剩下的随便改改 bg，caption，font 等等的</p><p>小知识点：</p><ul><li>Access Key: 再名称前加&amp;  <code>即&amp;s</code></li><li>关于日期的格式，参考<a href="https://blog.csdn.net/bigheadsheep/article/details/12013267" target="_blank" rel="noopener">Format 函数</a>这篇文章</li></ul><p>小问题：</p><ul><li>怎么把输入的日期格式化为计算数据,不会更高级的输入转化，只能先死输入</li></ul><p>解决：</p><ul><li>使用 CDate 函数将字符串转化为日期</li></ul><p>新的问题：</p><ul><li>在重新输到<code>2020-10-</code> 的时候会报错</li></ul><p>解决：</p><ul><li>添加一行代码</li></ul><p>完全版代码</p><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command1_Click()</span><br><span class="line">    Timer1.Interval = <span class="number">50</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command2_Click()</span><br><span class="line">    <span class="keyword">End</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Text1_Click()</span><br><span class="line">    Text1 = <span class="string">""</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Timer1_Timer()</span><br><span class="line">    Text2.<span class="keyword">Text</span> = Format(Now(), <span class="string">"yyyy/MM/dd hh:mm:ss"</span>)</span><br><span class="line">    yy = Val(Left$(Text1.<span class="keyword">Text</span>$, <span class="number">4</span>))   <span class="comment">'  text1中的年</span></span><br><span class="line">    mon = Val(<span class="keyword">Mid</span>$(Text1.<span class="keyword">Text</span>$, <span class="number">6</span>, <span class="number">2</span>)) <span class="comment">'          月</span></span><br><span class="line">    dday = Val(Right$(Text1.<span class="keyword">Text</span>$, <span class="number">2</span>))  <span class="comment">'         日</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">If</span> Text1.<span class="keyword">Text</span> = <span class="string">""</span> <span class="keyword">Then</span></span><br><span class="line">        Text3.<span class="keyword">Text</span> = <span class="string">""</span></span><br><span class="line">    <span class="keyword">Else</span>                      <span class="comment">' 加入判断 让到 - 的时候自动补全</span></span><br><span class="line">        <span class="keyword">If</span> Text1.<span class="keyword">Text</span> = yy &amp; <span class="string">"-"</span> &amp; mon &amp; <span class="string">"-"</span> <span class="keyword">Then</span></span><br><span class="line">            t1 = Text1.<span class="keyword">Text</span> &amp; <span class="string">"01"</span></span><br><span class="line">            Text3.<span class="keyword">Text</span> = <span class="built_in">CDate</span>(t1) - <span class="built_in">Date</span> &amp; <span class="string">"天"</span></span><br><span class="line">        <span class="keyword">Else</span></span><br><span class="line">            Text3.<span class="keyword">Text</span> = <span class="built_in">CDate</span>(Text1.<span class="keyword">Text</span>) - <span class="built_in">Date</span> &amp; <span class="string">"天"</span></span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></tbody></table></figure><h3 id="2-加法运算器"><a href="#2-加法运算器" class="headerlink" title="2. 加法运算器"></a>2. 加法运算器</h3><p><img src="/img/VB/zy/zy1_2.png" alt="第一次作业2"></p><p><strong>作业代码</strong></p><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command1_Click(Index <span class="keyword">As</span> <span class="built_in">Integer</span>)</span><br><span class="line">    Text3.<span class="keyword">Text</span> = Val(Text1.<span class="keyword">Text</span>) + Val(Text2.<span class="keyword">Text</span>)</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command2_Click(Index <span class="keyword">As</span> <span class="built_in">Integer</span>)</span><br><span class="line">    Text1.<span class="keyword">Text</span> = <span class="string">""</span></span><br><span class="line">    Text2.<span class="keyword">Text</span> = <span class="string">""</span></span><br><span class="line">    Text3.<span class="keyword">Text</span> = <span class="string">""</span></span><br><span class="line">    Text1.SetFocus</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command3_Click()</span><br><span class="line">    <span class="keyword">End</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></tbody></table></figure><p>小知识点：</p><ul><li><code>Text1.SetFocus</code>按下按钮后将鼠标指针重新指回<code>Text1</code>的位置，即使焦点回到加数 A 框</li><li>val 将字符型数据转换为数值型数据，str 将数值型转换为字符型</li></ul><h2 id="1-2-第二次作业"><a href="#1-2-第二次作业" class="headerlink" title="1.2 第二次作业"></a>1.2 第二次作业</h2><h3 id="1-华氏度与摄氏度的转换"><a href="#1-华氏度与摄氏度的转换" class="headerlink" title="1. 华氏度与摄氏度的转换"></a>1. 华氏度与摄氏度的转换</h3><p><img src="/img/VB/zy/zy2_1.png" alt="第二次作业1"></p><p><strong>作业代码</strong></p><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Option</span> <span class="keyword">Explicit</span></span><br><span class="line">Dim C As Variant, F As Variant, CI As Double, FI As Double</span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Form_Load()</span><br><span class="line">    Label4.Enabled = <span class="literal">False</span></span><br><span class="line">    Timer1.Interval = <span class="number">50</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> label3_click()</span><br><span class="line">    C = Text1.<span class="keyword">Text</span></span><br><span class="line">    <span class="keyword">If</span> IsNumeric(C) <span class="keyword">Then</span></span><br><span class="line">        CI = Val(C)</span><br><span class="line">        FI = Round(<span class="number">9</span> / <span class="number">5</span> * CI + <span class="number">32</span>, <span class="number">1</span>)</span><br><span class="line">        Text2.<span class="keyword">Text</span> = FI</span><br><span class="line">    <span class="keyword">Else</span></span><br><span class="line">        MsgBox <span class="string">"摄氏度不是数"</span></span><br><span class="line">        Text1.<span class="keyword">Text</span> = <span class="string">""</span></span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Label4_Click()</span><br><span class="line">    F = Text2.<span class="keyword">Text</span></span><br><span class="line">    <span class="keyword">If</span> IsNumeric(F) <span class="keyword">Then</span></span><br><span class="line">        FI = Val(F)</span><br><span class="line">        CI = Round(<span class="number">5</span> / <span class="number">9</span> * (FI - <span class="number">32</span>), <span class="number">1</span>)</span><br><span class="line">        Text1.<span class="keyword">Text</span> = CI</span><br><span class="line">    <span class="keyword">Else</span></span><br><span class="line">        MsgBox <span class="string">"华氏度不是数"</span></span><br><span class="line">        Text2.<span class="keyword">Text</span> = <span class="string">""</span></span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Text1_Click()</span><br><span class="line">    Label3.Enabled = <span class="literal">True</span>: Label4.Enabled = <span class="literal">False</span></span><br><span class="line">    Text1.<span class="keyword">Text</span> = <span class="string">""</span>: Text2.<span class="keyword">Text</span> = <span class="string">""</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Text1_KeyPress(KeyAscii <span class="keyword">As</span> <span class="built_in">Integer</span>)</span><br><span class="line">    <span class="keyword">If</span> KeyAscii = <span class="number">13</span> <span class="keyword">Then</span> label3_click</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Text2_Click()</span><br><span class="line">    Label4.Enabled = <span class="literal">True</span>: Label3.Enabled = <span class="literal">False</span></span><br><span class="line">    Text1.<span class="keyword">Text</span> = <span class="string">""</span>: Text2.<span class="keyword">Text</span> = <span class="string">""</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Text2_KeyPress(KeyAscii <span class="keyword">As</span> <span class="built_in">Integer</span>)</span><br><span class="line">    <span class="keyword">If</span> KeyAscii = <span class="number">13</span> <span class="keyword">Then</span> Label4_Click</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Timer1_Timer()</span><br><span class="line">    C = Text1.<span class="keyword">Text</span>: F = Text2.<span class="keyword">Text</span></span><br><span class="line">    <span class="keyword">If</span> C &lt;&gt; <span class="string">""</span> <span class="keyword">Or</span> F &lt;&gt; <span class="string">""</span> <span class="keyword">Then</span></span><br><span class="line">        label3_click</span><br><span class="line">        Label4_Click</span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></tbody></table></figure><p>小知识点：</p><ul><li>VB 中的不等于<code>&lt;&gt;</code></li><li>enabled 可以让控件是否响应用户，如正向转换时，关闭逆向开关；逆向转换时，关闭正向开关</li></ul><h3 id="2-二次方程根的求解"><a href="#2-二次方程根的求解" class="headerlink" title="2. 二次方程根的求解"></a>2. 二次方程根的求解</h3><p><img src="/img/VB/zy/zy2_2.png" alt="第二次作业2"></p><p><strong>作业代码</strong></p><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Option</span> <span class="keyword">Explicit</span></span><br><span class="line">Dim a As Variant, b As Variant, c As Variant, x1 As Variant, x2 As Variant</span><br><span class="line"><span class="keyword">Dim</span> ai <span class="keyword">As</span> <span class="built_in">Double</span>, bi <span class="keyword">As</span> <span class="built_in">Double</span>, ci <span class="keyword">As</span> <span class="built_in">Double</span>, dta <span class="keyword">As</span> <span class="built_in">Double</span>, xs1 <span class="keyword">As</span> <span class="built_in">Double</span>, xs2 <span class="keyword">As</span> <span class="built_in">Double</span>, xx1 <span class="keyword">As</span> <span class="built_in">Double</span>, xx2 <span class="keyword">As</span> <span class="built_in">Double</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command1_Click()</span><br><span class="line">    a = Text1.<span class="keyword">Text</span>: b = Text2.<span class="keyword">Text</span>: c = Text3.<span class="keyword">Text</span></span><br><span class="line">    <span class="keyword">If</span> IsNumeric(a) <span class="keyword">And</span> IsNumeric(b) <span class="keyword">And</span> IsNumeric(c) <span class="keyword">Then</span></span><br><span class="line">        ai = Val(a): bi = Val(b): ci = Val(c)</span><br><span class="line">        dta = bi ^ <span class="number">2</span> - <span class="number">4</span> * ai * ci</span><br><span class="line">        <span class="keyword">If</span> dta &gt; <span class="number">0</span> <span class="keyword">Then</span></span><br><span class="line">            x1 = (-bi + Sqr(dta)) / (<span class="number">2</span> * ai)</span><br><span class="line">            x2 = (-bi - Sqr(dta)) / (<span class="number">2</span> * ai)</span><br><span class="line">            Text4.<span class="keyword">Text</span> = x1</span><br><span class="line">            Text5.<span class="keyword">Text</span> = x2</span><br><span class="line">        <span class="keyword">ElseIf</span> dta = <span class="number">0</span> <span class="keyword">Then</span></span><br><span class="line">            x1 = (-bi) / (<span class="number">2</span> * ai)</span><br><span class="line">            x2 = (-bi) / (<span class="number">2</span> * ai)</span><br><span class="line">            Text4.<span class="keyword">Text</span> = x1</span><br><span class="line">            Text5.<span class="keyword">Text</span> = x2</span><br><span class="line">        <span class="keyword">Else</span></span><br><span class="line">            xs1 = Round((-bi) / (<span class="number">2</span> * ai), <span class="number">2</span>)</span><br><span class="line">            xx1 = Round(Sqr(-dta) / (<span class="number">2</span> * ai), <span class="number">2</span>)</span><br><span class="line">            Text4.<span class="keyword">Text</span> = Str(xs1) &amp; <span class="string">"+"</span> &amp; Str(xx1) &amp; <span class="string">"i"</span></span><br><span class="line">            xs2 = Round((-bi) / (<span class="number">2</span> * ai), <span class="number">2</span>)</span><br><span class="line">            xx2 = Round(Sqr(-dta) / (<span class="number">2</span> * ai), <span class="number">2</span>)</span><br><span class="line">            Text5.<span class="keyword">Text</span> = Str(xs2) &amp; <span class="string">"-"</span> &amp; Str(xx2) &amp; <span class="string">"i"</span></span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">    <span class="keyword">Else</span></span><br><span class="line">        MsgBox <span class="string">"abc不全是数字"</span></span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command2_Click()</span><br><span class="line">    Text1.<span class="keyword">Text</span> = <span class="string">""</span></span><br><span class="line">    Text2.<span class="keyword">Text</span> = <span class="string">""</span></span><br><span class="line">    Text3.<span class="keyword">Text</span> = <span class="string">""</span></span><br><span class="line">    Text4.<span class="keyword">Text</span> = <span class="string">""</span></span><br><span class="line">    Text5.<span class="keyword">Text</span> = <span class="string">""</span></span><br><span class="line">    Text1.SetFocus</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command3_Click()</span><br><span class="line">    <span class="keyword">End</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Text1_KeyPress(KeyAscii <span class="keyword">As</span> <span class="built_in">Integer</span>)</span><br><span class="line">    <span class="keyword">If</span> KeyAscii = <span class="number">13</span> <span class="keyword">Then</span> Command1_Click</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Text2_KeyPress(KeyAscii <span class="keyword">As</span> <span class="built_in">Integer</span>)</span><br><span class="line">    <span class="keyword">If</span> KeyAscii = <span class="number">13</span> <span class="keyword">Then</span> Command1_Click</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Text3_KeyPress(KeyAscii <span class="keyword">As</span> <span class="built_in">Integer</span>)</span><br><span class="line">    <span class="keyword">If</span> KeyAscii = <span class="number">13</span> <span class="keyword">Then</span> Command1_Click</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></tbody></table></figure><p>小知识点：</p><ul><li>Dim 声明</li><li>ElseIf 的使用</li><li>MsgBox 的使用 <code>MsgBox "提示信息"</code></li><li>Round(x,2) 约到小数点后几位</li><li>keypress 的应用，可以执行事件</li></ul><h2 id="1-3-第三次作业"><a href="#1-3-第三次作业" class="headerlink" title="1.3 第三次作业"></a>1.3 第三次作业</h2><h3 id="所有水仙花数"><a href="#所有水仙花数" class="headerlink" title="所有水仙花数"></a>所有水仙花数</h3><p><img src="/img/VB/zy/zy3.png" alt="第三次作业"></p><p><strong>作业代码</strong></p><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Option</span> <span class="keyword">Explicit</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command1_Click()</span><br><span class="line">    <span class="keyword">Dim</span> a, b, c, num</span><br><span class="line">    <span class="keyword">For</span> num = <span class="number">100</span> <span class="keyword">To</span> <span class="number">999</span></span><br><span class="line">        a = num <span class="keyword">Mod</span> <span class="number">10</span></span><br><span class="line">        b = num \ <span class="number">10</span> <span class="keyword">Mod</span> <span class="number">10</span></span><br><span class="line">        c = num \ <span class="number">100</span></span><br><span class="line">        <span class="keyword">If</span> a ^ <span class="number">3</span> + b ^ <span class="number">3</span> + c ^ <span class="number">3</span> = num <span class="keyword">Then</span> Print num</span><br><span class="line">    <span class="keyword">Next</span> num</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></tbody></table></figure><p>小知识点：</p><ul><li><code>15 mod 10</code>取余数 5</li><li><code>15 \ 10</code>整数相除得整数 1</li></ul><h2 id="1-4-第四次作业"><a href="#1-4-第四次作业" class="headerlink" title="1.4 第四次作业"></a>1.4 第四次作业</h2><h3 id="1-sub-子过程计算和"><a href="#1-sub-子过程计算和" class="headerlink" title="1. sub 子过程计算和"></a>1. sub 子过程计算和</h3><p><img src="/img/VB/zy/zy4_1.png" alt="第四次作业1"></p><p><strong>作业代码</strong></p><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Option</span> <span class="keyword">Explicit</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command1_Click()</span><br><span class="line">    <span class="keyword">Dim</span> sr <span class="keyword">As</span> <span class="built_in">Integer</span>, j <span class="keyword">As</span> <span class="built_in">Integer</span>, s <span class="keyword">As</span> <span class="built_in">Long</span>, f <span class="keyword">As</span> <span class="built_in">Long</span></span><br><span class="line">    sr = Text1.<span class="keyword">Text</span></span><br><span class="line">    s = <span class="number">0</span></span><br><span class="line">    <span class="keyword">For</span> j = <span class="number">1</span> <span class="keyword">To</span> sr</span><br><span class="line">        <span class="keyword">Call</span> Tim(j, f)</span><br><span class="line">        s = s + f</span><br><span class="line">    <span class="keyword">Next</span> j</span><br><span class="line">    Text2.<span class="keyword">Text</span> = s</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Sub</span> Tim(k <span class="keyword">As</span> <span class="built_in">Integer</span>, f <span class="keyword">As</span> <span class="built_in">Long</span>)</span><br><span class="line">    <span class="keyword">Dim</span> i <span class="keyword">As</span> <span class="built_in">Integer</span></span><br><span class="line">        f = <span class="number">0</span></span><br><span class="line">        <span class="keyword">For</span> i = <span class="number">1</span> <span class="keyword">To</span> k</span><br><span class="line">            f = f + i</span><br><span class="line">        <span class="keyword">Next</span> i</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></tbody></table></figure><p>小知识点：</p><ul><li>sub 子过程的编写和调用：call 函数名(参数，返回结果)</li></ul><h3 id="2-奖学金等级"><a href="#2-奖学金等级" class="headerlink" title="2. 奖学金等级"></a>2. 奖学金等级</h3><p><img src="/img/VB/zy/zy4_2.png" alt="第四次作业2"></p><p><strong>作业代码</strong></p><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Option</span> <span class="keyword">Explicit</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command1_Click()</span><br><span class="line">    <span class="keyword">Dim</span> m1 <span class="keyword">As</span> <span class="built_in">Long</span>, m2 <span class="keyword">As</span> <span class="built_in">Long</span>, m3 <span class="keyword">As</span> <span class="built_in">Long</span>, jg <span class="keyword">As</span> <span class="built_in">Long</span></span><br><span class="line">    m1 = Text1.<span class="keyword">Text</span>: m2 = Text2.<span class="keyword">Text</span>: m3 = Text3.<span class="keyword">Text</span></span><br><span class="line">    <span class="keyword">Call</span> pd(m1, m2, m3, jg)</span><br><span class="line">    <span class="keyword">If</span> jg = <span class="number">1</span> <span class="keyword">Then</span></span><br><span class="line">        Text4.<span class="keyword">Text</span> = <span class="string">"一等奖"</span></span><br><span class="line">    <span class="keyword">ElseIf</span> jg = <span class="number">2</span> <span class="keyword">Then</span></span><br><span class="line">        Text4.<span class="keyword">Text</span> = <span class="string">"二等奖"</span></span><br><span class="line">    <span class="keyword">ElseIf</span> jg = <span class="number">3</span> <span class="keyword">Then</span></span><br><span class="line">        Text4.<span class="keyword">Text</span> = <span class="string">"三等奖"</span></span><br><span class="line">    <span class="keyword">Else</span></span><br><span class="line">        Text4.<span class="keyword">Text</span> = <span class="string">"没有奖"</span></span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Sub</span> pd(f1 <span class="keyword">As</span> <span class="built_in">Long</span>, f2 <span class="keyword">As</span> <span class="built_in">Long</span>, f3 <span class="keyword">As</span> <span class="built_in">Long</span>, jg <span class="keyword">As</span> <span class="built_in">Long</span>)</span><br><span class="line">    <span class="keyword">Dim</span> fpj <span class="keyword">As</span> <span class="built_in">Long</span>, p1 <span class="keyword">As</span> <span class="built_in">Integer</span>, p2 <span class="keyword">As</span> <span class="built_in">Integer</span>, p3 <span class="keyword">As</span> <span class="built_in">Integer</span></span><br><span class="line">    Dim f(1 To 3) As Integer, i As Variant</span><br><span class="line">    fpj = (f1 + f2 + f3) / <span class="number">3</span></span><br><span class="line">    f(<span class="number">1</span>) = f1: f(<span class="number">2</span>) = f2: f(<span class="number">3</span>) = f3</span><br><span class="line">    p1 = <span class="number">0</span>: p2 = <span class="number">0</span>: p3 = <span class="number">0</span></span><br><span class="line">    <span class="keyword">For</span> <span class="keyword">Each</span> i <span class="keyword">In</span> f</span><br><span class="line">        <span class="keyword">If</span> i = <span class="number">100</span> <span class="keyword">Then</span></span><br><span class="line">            p1 = p1 + <span class="number">1</span></span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">        <span class="keyword">If</span> i &gt;= <span class="number">80</span> <span class="keyword">Then</span></span><br><span class="line">            p2 = p2 + <span class="number">1</span></span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">        <span class="keyword">If</span> i &gt;= <span class="number">75</span> <span class="keyword">Then</span></span><br><span class="line">            p3 = p3 + <span class="number">1</span></span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">    <span class="keyword">Next</span> i</span><br><span class="line">    <span class="keyword">If</span> (fpj &gt; <span class="number">95</span>) <span class="keyword">Or</span> (p1 &gt;= <span class="number">2</span> <span class="keyword">And</span> p2 = <span class="number">3</span>) <span class="keyword">Then</span></span><br><span class="line">        jg = <span class="number">1</span></span><br><span class="line">    <span class="keyword">ElseIf</span> (fpj &gt; <span class="number">90</span>) <span class="keyword">Or</span> (p1 &gt;= <span class="number">1</span> <span class="keyword">And</span> p3 = <span class="number">3</span>) <span class="keyword">Then</span></span><br><span class="line">        jg = <span class="number">2</span></span><br><span class="line">    <span class="keyword">ElseIf</span> p3 = <span class="number">3</span> <span class="keyword">Then</span></span><br><span class="line">        jg = <span class="number">3</span></span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Text4_Click()</span><br><span class="line">    Text1.<span class="keyword">Text</span> = <span class="string">""</span>: Text2.<span class="keyword">Text</span> = <span class="string">""</span>: Text3.<span class="keyword">Text</span> = <span class="string">""</span>: Text4.<span class="keyword">Text</span> = <span class="string">""</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></tbody></table></figure><p>重点注意：</p><ul><li><code>for each a in f</code> 中的 a 必须是变体型变量</li></ul><h2 id="1-5-第五次作业"><a href="#1-5-第五次作业" class="headerlink" title="1.5 第五次作业"></a>1.5 第五次作业</h2><h3 id="1-RGB-三色调色板"><a href="#1-RGB-三色调色板" class="headerlink" title="1. RGB 三色调色板"></a>1. RGB 三色调色板</h3><p><img src="/img/VB/zy/zy5_1.png" alt="第五次作业1"></p><p><strong>作业代码</strong></p><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Option</span> <span class="keyword">Explicit</span></span><br><span class="line"><span class="keyword">Dim</span> r <span class="keyword">As</span> <span class="built_in">Integer</span>, g <span class="keyword">As</span> <span class="built_in">Integer</span>, b <span class="keyword">As</span> <span class="built_in">Integer</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command1_Click()</span><br><span class="line">    Text2.ForeColor = Text1.BackColor</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command2_Click()</span><br><span class="line">    Text2.BackColor = Text1.BackColor</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> HScroll1_Change()</span><br><span class="line">    r = HScroll1.Value: g = HScroll2.Value: b = HScroll3.Value</span><br><span class="line">    Text1.BackColor = RGB(r, g, b)</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> HScroll2_Change()</span><br><span class="line">    r = HScroll1.Value: g = HScroll2.Value: b = HScroll3.Value</span><br><span class="line">    Text1.BackColor = RGB(r, g, b)</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> HScroll3_Change()</span><br><span class="line">    r = HScroll1.Value: g = HScroll2.Value: b = HScroll3.Value</span><br><span class="line">    Text1.BackColor = RGB(r, g, b)</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></tbody></table></figure><p>小知识点：</p><ul><li>hscroll1.value 横向滚动条的值</li><li>hscroll1_change() 判断横向滚动条的值是否发生变化,变化时执行的程序</li><li>RGB()函数的使用</li></ul><h3 id="2-成绩合计-amp-密码验证"><a href="#2-成绩合计-amp-密码验证" class="headerlink" title="2. 成绩合计 &amp; 密码验证"></a>2. 成绩合计 &amp; 密码验证</h3><p><img src="/img/VB/zy/zy5_2.png" alt="第五次作业2"></p><p><strong>作业代码 1</strong></p><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Option</span> <span class="keyword">Explicit</span></span><br><span class="line"><span class="keyword">Dim</span> i <span class="keyword">As</span> <span class="built_in">Integer</span>, t <span class="keyword">As</span> <span class="built_in">Integer</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command1_Click()</span><br><span class="line">    t = <span class="number">0</span></span><br><span class="line">    <span class="keyword">For</span> i = <span class="number">0</span> <span class="keyword">To</span> <span class="number">4</span></span><br><span class="line">        <span class="keyword">If</span> Check1(i).Value <span class="keyword">Then</span></span><br><span class="line">            t = t + Val(Text1(i).<span class="keyword">Text</span>)</span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">    <span class="keyword">Next</span> i</span><br><span class="line">    Text2.<span class="keyword">Text</span> = t</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></tbody></table></figure><p>小知识点：</p><ul><li>控件数组的使用</li><li>check1.value 为 true 直接判断</li></ul><p><strong>作业代码 2</strong></p><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">' Form2</span></span><br><span class="line"><span class="keyword">Option</span> <span class="keyword">Explicit</span></span><br><span class="line"><span class="keyword">Dim</span> reval <span class="keyword">As</span> <span class="built_in">Integer</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> bl_Click()</span><br><span class="line">    reval = Shell(<span class="string">"C:\Users\20180\Desktop\bz-live.bat"</span>, <span class="number">2</span>)</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> fb_Click()</span><br><span class="line">    reval = Shell(<span class="string">"C:\Users\20180\Desktop\fund.bat"</span>, <span class="number">2</span>)</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Form_Click()</span><br><span class="line">    PopupMenu b, <span class="number">2</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> sc_Click()</span><br><span class="line">    reval = Shell(<span class="string">"C:\Users\20180\Desktop\scrcpy.bat"</span>, <span class="number">2</span>)</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> tc_Click()</span><br><span class="line">    reval = Shell(<span class="string">"C:\Users\20180\Desktop\timecal.bat"</span>, <span class="number">2</span>)</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="comment">'Form1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Option</span> <span class="keyword">Explicit</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command1_Click()</span><br><span class="line">    <span class="keyword">If</span> Text1.<span class="keyword">Text</span> = <span class="string">"123"</span> <span class="keyword">Then</span></span><br><span class="line">        Form1.Hide</span><br><span class="line">        Form2.Show</span><br><span class="line">    <span class="keyword">Else</span></span><br><span class="line">        Label2.Visible = <span class="literal">True</span></span><br><span class="line">        Label2.Caption = <span class="string">"password error"</span></span><br><span class="line">        Text1.<span class="keyword">Text</span> = <span class="string">""</span></span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Form_Load()</span><br><span class="line">    Label2.Visible = <span class="literal">False</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></tbody></table></figure><p>小知识点：</p><ul><li>主要是菜单的编辑，工具–菜单编辑器</li><li>form1.hide &amp; form2.show 窗体的隐藏和显示</li><li><code>reval = shell("C:\Users\20180\Desktop\fund.bat",2)</code>调用程序</li></ul><h2 id="1-6-第六次作业"><a href="#1-6-第六次作业" class="headerlink" title="1.6 第六次作业"></a>1.6 第六次作业</h2><h3 id="学生成绩的录入、统计图表输出应用程序"><a href="#学生成绩的录入、统计图表输出应用程序" class="headerlink" title="学生成绩的录入、统计图表输出应用程序"></a>学生成绩的录入、统计图表输出应用程序</h3><p><img src="/img/VB/zy/zy6.png" alt="第六次作业"></p><p><strong>作业代码</strong></p><p><strong>form1</strong></p><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Option</span> <span class="keyword">Explicit</span></span><br><span class="line">Dim no, na, g1, g2 As Variant</span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command1_Click()</span><br><span class="line">    no = Text1.<span class="keyword">Text</span>: na = Text2.<span class="keyword">Text</span></span><br><span class="line">    g1 = Val(Text3.<span class="keyword">Text</span>): g2 = Val(Text4.<span class="keyword">Text</span>)</span><br><span class="line">    Write <span class="meta">#2, no, na, g1, g2</span></span><br><span class="line">    Text1.<span class="keyword">Text</span> = <span class="string">""</span>: Text2.<span class="keyword">Text</span> = <span class="string">""</span>: Text3.<span class="keyword">Text</span> = <span class="string">""</span>: Text4.<span class="keyword">Text</span> = <span class="string">""</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command2_Click()</span><br><span class="line">    Close <span class="meta">#2</span></span><br><span class="line">    Form2.Show</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Form_Load()</span><br><span class="line">    CommonDialog1.ShowSave</span><br><span class="line">    Open CommonDialog1.FileName <span class="keyword">For</span> Append <span class="keyword">As</span> <span class="meta">#2</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></tbody></table></figure><p><strong>form2</strong></p><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Option</span> <span class="keyword">Explicit</span></span><br><span class="line"><span class="keyword">Dim</span> num(<span class="number">100</span>) <span class="keyword">As</span> <span class="built_in">String</span>, nam(<span class="number">100</span>) <span class="keyword">As</span> <span class="built_in">String</span></span><br><span class="line"><span class="keyword">Dim</span> g(<span class="number">100</span>, <span class="number">2</span>) <span class="keyword">As</span> <span class="built_in">Integer</span>, n <span class="keyword">As</span> <span class="built_in">Integer</span>, ave, sum1, sum2, i</span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command1_Click()</span><br><span class="line">    CommonDialog1.ShowOpen</span><br><span class="line">    Open CommonDialog1.FileName <span class="keyword">For</span> Input <span class="keyword">As</span> <span class="meta">#3</span></span><br><span class="line">        n = <span class="number">0</span></span><br><span class="line">        <span class="keyword">Do</span> <span class="keyword">While</span> <span class="keyword">Not</span> EOF(<span class="number">3</span>)</span><br><span class="line">            n = n + <span class="number">1</span></span><br><span class="line">            Input <span class="meta">#3, num(n), nam(n), g(n, 1), g(n, 2)</span></span><br><span class="line">        Text1.<span class="keyword">Text</span> = Text1.<span class="keyword">Text</span> &amp; <span class="string">"   "</span> &amp; num(n) &amp; _</span><br><span class="line">        <span class="string">"   "</span> &amp; nam(n) &amp; <span class="string">"    "</span> &amp; Str(g(n, <span class="number">1</span>)) &amp; _</span><br><span class="line">        <span class="string">"   "</span> &amp; Str(g(n, <span class="number">2</span>)) &amp; <span class="string">"    "</span> &amp; Chr(<span class="number">13</span>) &amp; Chr(<span class="number">10</span>)</span><br><span class="line">        <span class="keyword">Loop</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command2_Click()</span><br><span class="line">    CommonDialog1.ShowSave</span><br><span class="line">    Open CommonDialog1.FileName <span class="keyword">For</span> Output <span class="keyword">As</span> <span class="meta">#4</span></span><br><span class="line">    sum1 = <span class="number">0</span></span><br><span class="line">    sum2 = <span class="number">0</span></span><br><span class="line">    Text2.<span class="keyword">Text</span> = <span class="string">""</span></span><br><span class="line">    <span class="keyword">For</span> i = <span class="number">1</span> <span class="keyword">To</span> n</span><br><span class="line">        ave = (g(i, <span class="number">1</span>) + g(i, <span class="number">2</span>)) / <span class="number">2</span></span><br><span class="line">        Write <span class="meta">#4, num(i), nam(i), g(i, 1), g(i, 2), ave</span></span><br><span class="line">        Text2.<span class="keyword">Text</span> = Text2.<span class="keyword">Text</span> &amp; <span class="string">"    "</span> &amp; num(i) &amp; _</span><br><span class="line">        <span class="string">"    "</span> &amp; nam(i) &amp; <span class="string">"    "</span> &amp; Str(g(i, <span class="number">1</span>)) &amp; <span class="string">"    "</span> &amp; _</span><br><span class="line">        Str(g(i, <span class="number">2</span>)) &amp; <span class="string">"    "</span> &amp; Str(ave) &amp; vbCrLf</span><br><span class="line">        sum1 = sum1 + g(i, <span class="number">1</span>): sum2 = sum2 + g(i, <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">Next</span> i</span><br><span class="line">    Text2.<span class="keyword">Text</span> = Text2.<span class="keyword">Text</span> &amp; <span class="string">"总平均"</span> &amp; <span class="string">" "</span> &amp; _</span><br><span class="line">    Str(sum1 / n) &amp; <span class="string">"   "</span> &amp; Str(sum2 / n)</span><br><span class="line">    Write <span class="meta">#4, "总平均", sum1 / n, sum2 / n</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command3_Click()</span><br><span class="line">    Close <span class="meta">#3, #4</span></span><br><span class="line">    <span class="keyword">End</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command4_Click()</span><br><span class="line">    Form3.Show</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></tbody></table></figure><p><strong>form3</strong></p><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Option</span> <span class="keyword">Explicit</span></span><br><span class="line"><span class="keyword">Dim</span> arrvalues(<span class="number">1</span> <span class="keyword">To</span> <span class="number">3</span>, <span class="number">1</span> <span class="keyword">To</span> <span class="number">3</span>), num, nam</span><br><span class="line"><span class="keyword">Dim</span> s1, s2 <span class="keyword">As</span> <span class="built_in">Integer</span></span><br><span class="line"><span class="keyword">Dim</span> i <span class="keyword">As</span> <span class="built_in">Integer</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command1_Click()</span><br><span class="line">    CommonDialog1.ShowOpen</span><br><span class="line">    Open CommonDialog1.FileName <span class="keyword">For</span> Input <span class="keyword">As</span> <span class="meta">#5</span></span><br><span class="line">    i = <span class="number">1</span></span><br><span class="line">    <span class="keyword">Do</span> <span class="keyword">While</span> <span class="keyword">Not</span> EOF(<span class="number">5</span>)</span><br><span class="line">        Input <span class="meta">#5, num, nam, s1, s2</span></span><br><span class="line">        arrvalues(i, <span class="number">1</span>) = nam</span><br><span class="line">        arrvalues(i, <span class="number">2</span>) = s1</span><br><span class="line">        arrvalues(i, <span class="number">3</span>) = s2</span><br><span class="line">        i = i + <span class="number">1</span></span><br><span class="line">    <span class="keyword">Loop</span></span><br><span class="line">    MSChart1.ChartData = arrvalues</span><br><span class="line">    Close <span class="meta">#5</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></tbody></table></figure><p>小知识点：</p><ul><li>主要是文件的读取和写入</li><li>条形图的绘制<code>CommonDialog</code>控件</li></ul><h2 id="1-7-第七次作业"><a href="#1-7-第七次作业" class="headerlink" title="1.7 第七次作业"></a>1.7 第七次作业</h2><p><img src="/img/VB/zy/zy7.png" alt="第七次作业"></p><p><strong>作业代码</strong></p><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Option</span> <span class="keyword">Explicit</span></span><br><span class="line">Dim i, t, x, y, pcolor As Variant</span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Form_Click()</span><br><span class="line">    Picture1.Scale (<span class="number">-1</span>, <span class="number">1</span>)-(<span class="number">1</span>, <span class="number">-1</span>)</span><br><span class="line">    Picture1.DrawWidth = <span class="number">3</span></span><br><span class="line">    Picture1.Line (<span class="number">-1</span>, <span class="number">0</span>)-(<span class="number">1</span>, <span class="number">0</span>), vbBl</span><br><span class="line">    Picture1.Line (<span class="number">0</span>, <span class="number">1</span>)-(<span class="number">0</span>, <span class="number">-1</span>), vbBlue</span><br><span class="line">    Picture1.DrawWidth = <span class="number">1</span></span><br><span class="line">    <span class="keyword">For</span> i = <span class="number">-1</span> <span class="keyword">To</span> <span class="number">1</span> <span class="keyword">Step</span> <span class="number">0.1</span></span><br><span class="line">        Picture1.Line (i, <span class="number">0.05</span>)-(i, <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">Next</span> i</span><br><span class="line">    Timer1.Interval = <span class="number">10</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Timer1_Timer()</span><br><span class="line">    Picture1.DrawWidth = <span class="number">2</span></span><br><span class="line">    pcolor = RGB(Rnd * <span class="number">255</span>, Rnd * <span class="number">255</span>, Rnd * <span class="number">255</span>)</span><br><span class="line">    <span class="keyword">For</span> t = <span class="number">0</span> <span class="keyword">To</span> <span class="number">2</span> * <span class="number">3.1415925</span> <span class="keyword">Step</span> <span class="number">0.001</span></span><br><span class="line">        x = Sin(<span class="number">2</span> * t) * Cos(t)</span><br><span class="line">        y = Sin(<span class="number">2</span> * t) * Sin(t)</span><br><span class="line">        Picture1.PSet (x, y), pcolor</span><br><span class="line">        <span class="keyword">Next</span> t</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></tbody></table></figure><p>小知识点：</p><ul><li>Scale(x1,y1)-(x2,y2) 坐标轴的范围分成多少份</li><li>PSet画点，一系列的点组成先线（用for循环）</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 学习力 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS学习中跟着老师做的几个项目</title>
      <link href="/2020/04/26/css-project-study/"/>
      <url>/2020/04/26/css-project-study/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><h1 id="1-学成在线网站"><a href="#1-学成在线网站" class="headerlink" title="1. 学成在线网站"></a>1. 学成在线网站</h1><p>跟学老师：<a href="https://space.bilibili.com/415434293" target="_blank" rel="noopener">pink老师</a>的css课，<a href="https://www.bilibili.com/video/BV14J4114768?p=195" target="_blank" rel="noopener">B站上的教程</a><br>时间线：跟学第七天，浮动切片学完后的案例，学成在线网页项目的制作</p><blockquote><p><a href="https://gitee.com/xiaoqiang001/html_css_material.git" target="_blank" rel="noopener">黑马pink老师的资源链接</a><br><strong>pink老师yyds</strong></p></blockquote><p><strong>开始学习</strong></p><hr><h2 id="1-1-布局流程"><a href="#1-1-布局流程" class="headerlink" title="1.1 布局流程"></a>1.1 布局流程</h2><p>为了提高网页制作的效率布局时通常有一下的流程</p><ul><li>必须确定页面的版心（可视区），测量可得</li><li>分析页面中的行模块，以及每个行模块中的列模块，页面布局（一行行的罗列而成）</li><li>制作HTML的结构，<strong>先结构，后样式</strong></li><li>运用盒子模型的原理，通过div+css布局来控制网页的各个模块</li></ul><h2 id="1-2-页面制作"><a href="#1-2-页面制作" class="headerlink" title="1.2 页面制作"></a>1.2 页面制作</h2><h3 id="1-2-0-样式初始化"><a href="#1-2-0-样式初始化" class="headerlink" title="1.2.0 样式初始化"></a>1.2.0 样式初始化</h3><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* css初始化代码,css reset */</span></span><br><span class="line"><span class="comment">/* 清除元素默认的内外边距 */</span></span><br><span class="line">* {</span><br><span class="line"><span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"><span class="comment">/* 清除列表样式 */</span></span><br><span class="line"><span class="selector-tag">li</span> {</span><br><span class="line"><span class="attribute">list-style</span>: none;</span><br><span class="line">}</span><br><span class="line"><span class="comment">/* 去掉button中默认自带的边框 */</span></span><br><span class="line"><span class="selector-tag">button</span> {</span><br><span class="line"><span class="attribute">border</span>: none;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="1-2-1-版心定义"><a href="#1-2-1-版心定义" class="headerlink" title="1.2.1 版心定义"></a>1.2.1 版心定义</h3><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.w</span> {</span><br><span class="line"><span class="attribute">width</span>: <span class="number">1200px</span>;</span><br><span class="line"><span class="attribute">margin</span>: auto;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>定义好了以后，直接后面用多类名方式应用版心样式</p><h3 id="1-2-2-头部制作"><a href="#1-2-2-头部制作" class="headerlink" title="1.2.2 头部制作"></a>1.2.2 头部制作</h3><ul><li>先写主要的大盒子</li><li>然后写大盒子内的<strong>小盒子</strong></li></ul><p><code>class="headr"</code>中</p><ol><li><code>logo</code>盒子</li><li><code>nav</code>导航栏</li><li><code>search</code>搜索框和搜索按钮</li><li><code>user</code>用户头像和用户名</li></ol><h3 id="1-2-3-Banner部分"><a href="#1-2-3-Banner部分" class="headerlink" title="1.2.3 Banner部分"></a>1.2.3 Banner部分</h3><p><code>class="banner"</code>部分</p><ol><li>左侧的<code>subnav start</code></li><li>右侧的<code>course start</code></li></ol><h3 id="1-2-3-精品推荐小模块goods"><a href="#1-2-3-精品推荐小模块goods" class="headerlink" title="1.2.3 精品推荐小模块goods"></a>1.2.3 精品推荐小模块goods</h3><p>（banner下面一行）</p><ol><li><code>h3</code> </li><li><code>goods-item</code>几个推荐</li><li><code>mod</code> 修改兴趣</li></ol><h3 id="1-2-4-精品推荐大模块box"><a href="#1-2-4-精品推荐大模块box" class="headerlink" title="1.2.4 精品推荐大模块box"></a>1.2.4 精品推荐大模块box</h3><ol><li><code>box-hd</code>写标题</li><li><code>box-bd</code>写内容小盒子</li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 学习力 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>快捷键——让学习更高效</title>
      <link href="/2020/04/09/learn-ks/"/>
      <url>/2020/04/09/learn-ks/</url>
      
        <content type="html"><![CDATA[<h1 id="1-Windows系统的快捷键"><a href="#1-Windows系统的快捷键" class="headerlink" title="1. Windows系统的快捷键"></a>1. Windows系统的快捷键</h1><table><thead><tr><th>快捷键</th><th>说明</th></tr></thead><tbody><tr><td>win + I</td><td>打开设置</td></tr><tr><td>win + E</td><td>打开文件管理器</td></tr><tr><td>win + A</td><td>打开操作中心</td></tr><tr><td>win + S</td><td>打开搜索</td></tr><tr><td>win + L</td><td>锁定桌面(锁屏)</td></tr><tr><td>win + K</td><td>打开连接设备</td></tr><tr><td>win + ctrl + D</td><td>创建虚拟桌面</td></tr><tr><td>win + ctrl + F4</td><td>关闭当前虚拟桌面</td></tr><tr><td>win + ctrl + ←或→</td><td>切换虚拟桌面</td></tr></tbody></table><p>还有几个旧的：</p><ul><li>win+v 剪切板，win+d 显示桌面</li><li>win + shift + s 截图 </li><li>win + ； 打开输入法的表情</li></ul><h1 id="2-Markdown-All-in-One插件快捷键"><a href="#2-Markdown-All-in-One插件快捷键" class="headerlink" title="2. Markdown All in One插件快捷键"></a>2. Markdown All in One插件快捷键</h1><p>VSCode中的插件Markdown All in One</p><table><thead><tr><th>Markdown All in One快捷键</th><th>说明</th></tr></thead><tbody><tr><td>Ctrl + B</td><td>粗体</td></tr><tr><td>Ctrl + I</td><td>斜体</td></tr><tr><td>Alt + S</td><td>删除线</td></tr><tr><td>Ctrl + Shift + ]</td><td>标题(uplevel)</td></tr><tr><td>Ctrl + Shift + [</td><td>标题(downlevel)</td></tr><tr><td>Ctrl + M</td><td>Toggle math environment</td></tr><tr><td>Alt + C</td><td>Check/Uncheck task list item</td></tr></tbody></table><h1 id="3-Cmder快捷键"><a href="#3-Cmder快捷键" class="headerlink" title="3. Cmder快捷键"></a>3. Cmder快捷键</h1><table><thead><tr><th>快捷键</th><th>说明</th></tr></thead><tbody><tr><td>Alt + enter</td><td>全屏</td></tr><tr><td>Win + Alt + P</td><td>开启选项</td></tr><tr><td>Alt + Shift + 1</td><td>cmd.exe</td></tr><tr><td>Alt + Shift + 2</td><td>powershell.exe</td></tr><tr><td>Alt + Shift + 3</td><td>powershell.exe(管理员)</td></tr></tbody></table><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 技术力 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#-Note</title>
      <link href="/2020/04/08/note-cs/"/>
      <url>/2020/04/08/note-cs/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><blockquote><p>参考<a href="https://www.bilibili.com/video/BV1wx411K7rb" target="_blank" rel="noopener">b 站的视频学习</a></p></blockquote><p><img src="/img/cs/program.png" alt="编程"></p><h1 id="0-C-学习前的-bb"><a href="#0-C-学习前的-bb" class="headerlink" title="0. C#学习前的 bb"></a>0. C#学习前的 bb</h1><p>C# 窗体应用，我的初步感受就是 VB+Java（狗头）<br>VB 现在正在学，但是 Java 是没学过 hhh</p><p>C# 是面向对象的语言，然而 C# 进一步提供了对面向组件 (component-oriented) 编程的支持。现代软件设计日益依赖于自包含和自描述功能包形式的软件组件。这种组件的关键在于，它们通过属性、方法和事件来提供编程模型；它们具有提供了关于组件的声明性信息的特性；同时，它们还编入了自己的文档。C# 提供的语言构造直接支持这些概念，这使得 C# 语言自然而然成为创建和使用软件组件之选。（copy from _csharp language specification 5.0 中文_）</p><h1 id="1-语言标准的——hello-world"><a href="#1-语言标准的——hello-world" class="headerlink" title="1. 语言标准的——hello world!!!"></a>1. 语言标准的——hello world!!!</h1><h2 id="1-1-Console"><a href="#1-1-Console" class="headerlink" title="1.1 Console"></a>1.1 Console</h2><p>控制台.NET Framework</p><p><code>Console.WriteLine("Hello World!!!");</code></p><h2 id="1-2-WPF"><a href="#1-2-WPF" class="headerlink" title="1.2 WPF"></a>1.2 WPF</h2><p>新的 windows forms（大概）,感觉就是更高级的 VB，更自由更美观的界面开发<br>跟 windows forms 一样</p><p><code>textBoxShowHello.Text = "Hello World!";</code></p><h2 id="1-3-Windows-Forms-App-old"><a href="#1-3-Windows-Forms-App-old" class="headerlink" title="1.3 Windows Forms App(old)"></a>1.3 Windows Forms App(old)</h2><p>窗体程序，学过一点 VB，无所畏惧</p><p>button<br><code>textBoxShowHello.Text = "Hello World!";</code></p><h2 id="1-4-ASP-NET-Web-Forms-old"><a href="#1-4-ASP-NET-Web-Forms-old" class="headerlink" title="1.4 ASP.NET Web Forms(old)"></a>1.4 ASP.NET Web Forms(old)</h2><p>网络应用程序，网页<br>Controller 中<br><code>&lt;h1&gt;Hello World!&lt;h1&gt;</code></p><h2 id="1-5-ASP-NET-MVC"><a href="#1-5-ASP-NET-MVC" class="headerlink" title="1.5 ASP.NET MVC"></a>1.5 ASP.NET MVC</h2><p>程序开发架构，可以将不同语言的代码放在不同的目录中<br>Controller 中<br><code>&lt;h1&gt;Hello World!&lt;h1&gt;</code></p><h2 id="1-6-WCF"><a href="#1-6-WCF" class="headerlink" title="1.6 WCF"></a>1.6 WCF</h2><p>纯网络服务，读取数据库、向数据库输入数据</p><figure class="highlight csharp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">string</span> <span class="title">SayHello</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">  <span class="keyword">return</span> <span class="string">"hello world!!!"</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="1-7-Windows-Store-Application"><a href="#1-7-Windows-Store-Application" class="headerlink" title="1.7 Windows Store Application"></a>1.7 Windows Store Application</h2><p>平板电脑,也是窗体设计<br><code>textBoxShowHello.Text = "Hello World!!!";</code></p><h2 id="1-8-Windows-Phone-Application-已经凉透了？？？"><a href="#1-8-Windows-Phone-Application-已经凉透了？？？" class="headerlink" title="1.8 Windows Phone Application(已经凉透了？？？)"></a>1.8 Windows Phone Application(已经凉透了？？？)</h2><p><code>textBoxShowHello.Text = "Hello World!!!";</code></p><h2 id="1-9-Cloud"><a href="#1-9-Cloud" class="headerlink" title="1.9 Cloud"></a>1.9 Cloud</h2><p>云计算 Azure<br><code>&lt;h1&gt;Hello World!&lt;h1&gt;</code></p><h2 id="1-10-WF"><a href="#1-10-WF" class="headerlink" title="1.10 WF"></a>1.10 WF</h2><p>窗体设计<br>直接在 writeline 控件里写<br><code>"hello world!!!"</code></p><h1 id="2-类与名称空间"><a href="#2-类与名称空间" class="headerlink" title="2. 类与名称空间"></a>2. 类与名称空间</h1><p><strong>class &amp; namespace</strong></p><h2 id="2-1-剖析-Hello-World-程序"><a href="#2-1-剖析-Hello-World-程序" class="headerlink" title="2.1 剖析 Hello World 程序"></a>2.1 剖析 Hello World 程序</h2><ul><li>类是构成程序的主体</li><li>名称空间是以树型结构组织类（和其他类型），如 Button 类和 Path 类</li></ul><p>Console App : <code>Console.WriteLine("Hello World~");</code></p><figure class="highlight csharp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ConsoleApphello</span></span><br><span class="line">{</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    {</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        {</span><br><span class="line">            Console.WriteLine(<span class="string">"Hello World"</span>);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>类 class <code>Program</code>(自己写的)和<code>Console</code>(调用 C#的类)<br><code>WriteLine</code>方法</p><p>名称空间 namespace <code>HelloWorld</code>，默认跟创建 project 时名称一样</p><p><strong>核心理解：</strong></p><p><strong>又如<code>System</code>名称空间中的<code>Console</code>类，类中的<code>WriteLine</code>方法</strong></p><p><strong><code>using System</code></strong> 跟 python 中的<code>import</code>差不多</p><p>就是：<br>有<code>using System;</code> 直接用<code>Console.WriteLine</code><br>没有<code>using System;</code>则必须用<code>System.Console.WriteLine</code></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 学习力 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Note </tag>
            
            <tag> C# </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python多线程学习</title>
      <link href="/2020/04/04/python-threading/"/>
      <url>/2020/04/04/python-threading/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><h1 id="1-初步认识多线程"><a href="#1-初步认识多线程" class="headerlink" title="1. 初步认识多线程"></a>1. 初步认识多线程</h1><blockquote><p>参考<a href="https://www.liaoxuefeng.com/wiki/1016959663602400/1017627212385376" target="_blank" rel="noopener">廖雪峰老师的教程</a></p></blockquote><p><strong>多进程和多线程</strong><br>我的理解就是<strong>单个CPU</strong>可以执行一个或多个进程，每个任务执行很短时间，从而骗过人的感觉，让我们感觉好像是多个任务一起进行，而<strong>多核CPU</strong>可以并行执行多任务，如果任务数量超过CPU的数量，则会让一个CPU轮流执行多个任务<br>每个进程，也就是每个任务中又分为很多个子任务，也就是线程，一个进程中可以启动多个线程，各个线程中的任务可以同时进行</p><p>Python中的多任务执行有三种方式：</p><ul><li>多进程模式，多个python程序同时进行，每个程序一个线程</li><li>多线程模式，一个python程序同时进行多个线程</li><li>多进程+多线程，这种模型非常复杂，我的脑子不够用，就不用了</li></ul><p>我也想要执行一个任务，直来直去，但是总有种情况，我迫不得已要多任务同时进行，我太难了<br>比如我做的GUI，要求可以执行多个任务，但是也要能够暂停其中的一个任务，其他任务不受干扰，好了，废话不多说了，开始学习</p><h1 id="2-线程基础"><a href="#2-线程基础" class="headerlink" title="2. 线程基础"></a>2. 线程基础</h1><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 引入线程函数threading</span></span><br><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fund</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'执行的程序'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 增加一个线程</span></span><br><span class="line">th = Thread(target=fund)</span><br><span class="line"><span class="comment"># 开始进程</span></span><br><span class="line">th.start()</span><br><span class="line"><span class="comment"># 等到一个进程结束时退出</span></span><br><span class="line">th.join()</span><br></pre></td></tr></tbody></table></figure><blockquote><p>参考知乎的大佬写的教程<br>作者：Dwzb<br>链接：<a href="https://zhuanlan.zhihu.com/p/34004179" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/34004179</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p></blockquote><h2 id="2-1-线程的开始"><a href="#2-1-线程的开始" class="headerlink" title="2.1 线程的开始"></a>2.1 线程的开始</h2><p><code>th.start()</code> 可以放到循环中，同时进行多个线程</p><h2 id="2-2-线程结束时停止"><a href="#2-2-线程结束时停止" class="headerlink" title="2.2 线程结束时停止"></a>2.2 线程结束时停止</h2><p><code>th.join()</code> 加上这句话，则多线程只能一个结束后执行下一个<br>如果没有这句语句，就会直接用多线程开始执行，不会等一个结束再执行下一个</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread</span><br><span class="line">t = time.time()</span><br><span class="line">ths = []</span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">    th = Thread(target = myfun)</span><br><span class="line">    th.start()</span><br><span class="line">    ths.append(th)</span><br><span class="line"><span class="keyword">for</span> th <span class="keyword">in</span> ths:</span><br><span class="line">    th.join()</span><br><span class="line">print(time.time() - t)</span><br><span class="line"><span class="comment"># 结果为 1.0038363933563232</span></span><br></pre></td></tr></tbody></table></figure><h2 id="2-3-线程的名称"><a href="#2-3-线程的名称" class="headerlink" title="2.3 线程的名称"></a>2.3 线程的名称</h2><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line">print(threading.current_thread().getName())</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">myfun</span><span class="params">()</span>:</span></span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line">    print(threading.current_thread().name)</span><br><span class="line">    a = <span class="number">1</span> + <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">    th = threading.Thread(target = myfun, name = <span class="string">'thread {}'</span>.format(i))</span><br><span class="line">    th.start()</span><br><span class="line"><span class="comment"># 输出结果</span></span><br><span class="line">MainThread</span><br><span class="line">thread <span class="number">0</span></span><br><span class="line">thread <span class="number">1</span></span><br><span class="line">thread <span class="number">4</span></span><br><span class="line">thread <span class="number">3</span></span><br><span class="line">thread <span class="number">2</span></span><br></pre></td></tr></tbody></table></figure><ul><li><code>threading.current_thread()</code>表示当前线程，可以调用<code>name</code>或<code>getName()</code>获取线程名称</li><li>任何进程的都会有一个主线程，这个进程与新加的线程是相互独立的</li><li><code>Thread</code>表示启动一个新的线程<code>name</code>参数表示线程的名字</li><li><code>threading.current_thread().getName()</code>是主进程名字<code>MainThread</code>,<code>th.name</code>则是子thread名字</li></ul><h2 id="2-4-Thread函数"><a href="#2-4-Thread函数" class="headerlink" title="2.4 Thread函数"></a>2.4 Thread函数</h2><p>参数介绍：</p><ul><li><code>target</code> 线程执行的函数</li><li><code>name</code> 线程的名称</li><li><code>args</code> target对应得函数得参数，用元组传入，比如<code>func(age,name)</code> <code>Thread(target = func , args = (13, 'name'))</code></li><li><code>daemon</code> 主线程默认是false，，如果没有指定则继承父线程的值。True则如果主线程运行结束，该线程也停止运行；False则该线程会继续运行直到运行结束，无视主线程如何</li><li><code>group</code> 是预留的一个参数，用于以后扩展ThreadGroup类，现在没用</li></ul><h2 id="2-5-Thread对象"><a href="#2-5-Thread对象" class="headerlink" title="2.5 Thread对象"></a>2.5 Thread对象</h2><p>属性和方法：</p><ul><li>name 线程名称</li><li>ident 线程标识符号</li><li>daemon 是否为守护线程</li></ul><p><strong>_init</strong>(self, group=None, target=None, name=None, args=(), kwargs=None, *, daemon=None)<br>参数：</p><ul><li><p>group 无用，保留参数</p></li><li><p>target 可调用的目标</p></li><li><p>name 线程的名称</p></li><li><p>args,kwargs 调用目标的参数</p></li><li><p>daemon 是否为守护线程</p></li><li><p>start() 开始执行</p></li><li><p>join(timeout=None) 阻塞timeout秒，否则直到启动的线程终止前一直挂起</p></li><li><p>is_alive () 线程是否存活</p></li><li><p>isDaemon() 是否为守护线程</p></li><li><p>setDaemon(daemonic) 设置为守护线程</p></li><li><p>getName()  .name  获取线程名</p></li><li><p>setName() 设置线程名</p></li><li><p>start()  join()</p></li><li><p>join()有一个timeout参数，表示等待这个线程结束时，如果等待时间超过这个时间，就不再等，继续进行下面的代码，但是这个线程不会被中断</p></li><li><p>run() 也是运行这个线程，但是必须等到这个线程运行结束才会继续执行之后的代码（如果将上面的start全换成run则相当于没有开多线程）</p></li><li><p>is_alive()如果该线程还没运行完，就是True否则False</p></li><li><p>daemon 返回该线程的daemon</p></li><li><p>setDaemon(True)设置线程的daemon</p></li></ul><h2 id="2-6-threading"><a href="#2-6-threading" class="headerlink" title="2.6 threading"></a>2.6 threading</h2><ul><li>threading.currentThread(): 返回当前的线程变量</li><li>threading.enumerate(): 返回一个包含正在运行的线程的list</li><li>threading.activeCount(): 返回正在运行的线程数量，与len(threading.enumerate())有相同的结果</li></ul><p>threading模块的类对象</p><ul><li>Thread 执行线程</li><li>Timer 在运行前等待一段时间的执行线程</li><li>Lock 原语锁（互斥锁，简单锁）</li><li>RLock 重入锁，使单一线程可以（再次）获得已持有的锁</li><li>Condition 条件变量，线程需要等待另一个线程满足特定条件</li><li>Event 事件变量，N个线程等待某个事件发生后激活所有线程</li><li>Semaphore 线程间共享资源的寄存器</li><li>BoundedSemaphore 与Semaphore 相似，它不允许超过初始值</li><li>Barrie 执行线程达到一定数量后才可以继续</li></ul><p>threading模块的函数</p><ul><li>activeCount() 获取当前活动中的Thread对象个数</li><li>currentThread() 获取当前的Thread对象</li><li>enumerate() 获取当前活动的Thread对象列表</li><li>settrace(func) 为所有线程设置一个跟踪（trace）函数</li><li>setprofile(func) 为所有线程设置配置文件（profile）函</li><li>stack_size(size=None) 获取新创建线程的栈大小，也可设置线程栈的大小为size。</li></ul><h1 id="3-线程进阶"><a href="#3-线程进阶" class="headerlink" title="3. 线程进阶"></a>3. 线程进阶</h1><h2 id="3-1-派生Thread-的子类，并创建子类的实例"><a href="#3-1-派生Thread-的子类，并创建子类的实例" class="headerlink" title="3.1 派生Thread 的子类，并创建子类的实例"></a>3.1 派生Thread 的子类，并创建子类的实例</h2><p>我们可以通过继承Thread类，派生出一个子类，使用子类来创建多线程</p><p><strong>记住要在子类中初始化父类的方法Thread.<strong>init</strong>(self) 。需要重构 run() 方法来执行多线程的程序</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep, ctime</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建 Thread 的子类 </span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyThread</span><span class="params">(Thread)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, func, args)</span>:</span></span><br><span class="line">        <span class="string">'''</span></span><br><span class="line"><span class="string">        :param func: 可调用的对象</span></span><br><span class="line"><span class="string">        :param args: 可调用对象的参数</span></span><br><span class="line"><span class="string">        '''</span></span><br><span class="line">        Thread.__init__(self)   <span class="comment"># 不要忘记调用Thread的初始化方法</span></span><br><span class="line">        self.func = func</span><br><span class="line">        self.args = args</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.func(*self.args)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">(name, sec)</span>:</span></span><br><span class="line">    print(<span class="string">'---开始---'</span>, name, <span class="string">'时间'</span>, ctime())</span><br><span class="line">    sleep(sec)</span><br><span class="line">    print(<span class="string">'***结束***'</span>, name, <span class="string">'时间'</span>, ctime())</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 创建 Thread 实例</span></span><br><span class="line">    t1 = MyThread(func, (<span class="number">1</span>, <span class="number">1</span>))</span><br><span class="line">    t2 = MyThread(func, (<span class="number">2</span>, <span class="number">2</span>))</span><br><span class="line">    <span class="comment"># 启动线程运行</span></span><br><span class="line">    t1.start()</span><br><span class="line">    t2.start()</span><br><span class="line">    <span class="comment"># 等待所有线程执行完毕</span></span><br><span class="line">    t1.join()</span><br><span class="line">    t2.join()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></tbody></table></figure><h2 id="3-2-获取可调用对象的返回值"><a href="#3-2-获取可调用对象的返回值" class="headerlink" title="3.2 获取可调用对象的返回值"></a>3.2 获取可调用对象的返回值</h2><p>在多线程中运行的程序时与主线程分开，我们没法直接获取线程中程序的返回值。这时就可以使用派生Thread 的子类，将给过保存的实例属性中，通过一个新方法获取运行结果</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep, ctime</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建 Thread 的子类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyThread</span><span class="params">(Thread)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, func, args)</span>:</span></span><br><span class="line">        <span class="string">'''</span></span><br><span class="line"><span class="string">        :param func: 可调用的对象</span></span><br><span class="line"><span class="string">        :param args: 可调用对象的参数</span></span><br><span class="line"><span class="string">        '''</span></span><br><span class="line">        Thread.__init__(self)</span><br><span class="line">        self.func = func</span><br><span class="line">        self.args = args</span><br><span class="line">        self.result = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.result = self.func(*self.args)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getResult</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">(name, sec)</span>:</span></span><br><span class="line">    print(<span class="string">'---开始---'</span>, name, <span class="string">'时间'</span>, ctime())</span><br><span class="line">    sleep(sec)</span><br><span class="line">    print(<span class="string">'***结束***'</span>, name, <span class="string">'时间'</span>, ctime())</span><br><span class="line">    <span class="keyword">return</span> sec</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 创建 Thread 实例</span></span><br><span class="line">    t1 = MyThread(func, (<span class="number">1</span>, <span class="number">1</span>))</span><br><span class="line">    t2 = MyThread(func, (<span class="number">2</span>, <span class="number">2</span>))</span><br><span class="line">    <span class="comment"># 启动线程运行</span></span><br><span class="line">    t1.start()</span><br><span class="line">    t2.start()</span><br><span class="line">    <span class="comment"># 等待所有线程执行完毕</span></span><br><span class="line">    t1.join()</span><br><span class="line">    t2.join()</span><br><span class="line">    <span class="comment"># 或线程中程序的运行结果</span></span><br><span class="line">    print(t1.getResult())</span><br><span class="line">    print(t2.getResult())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></tbody></table></figure><h2 id="3-3-多线程的同步问题"><a href="#3-3-多线程的同步问题" class="headerlink" title="3.3 多线程的同步问题"></a>3.3 多线程的同步问题</h2><p>一般在多线程代码中，总会有一些特定的函数或代码块不想被多个线程同时执行，如：修改数据库、更新文件或其他会产生程序冲突的类似情况</p><p>当任意数量的线程可以访问临界区的代码，当在同一时刻只能有一个线程可以通过时，就需要使用同步。我们可以选择合适的同步原语，也可以让线程控制机制来执行同步。</p><p>最常用的同理原语有：锁/互斥，以及信号量。锁是最简单最低级的机制。信号量用于多线程竞争有限资源的情况。</p><blockquote><p>强烈推荐<a href="https://zhuanlan.zhihu.com/p/94344847" target="_blank" rel="noopener">大佬的教程</a></p></blockquote><h2 id="3-4-Lock-同步锁（原语锁）"><a href="#3-4-Lock-同步锁（原语锁）" class="headerlink" title="3.4 Lock 同步锁（原语锁）"></a>3.4 Lock 同步锁（原语锁）</h2><h3 id="3-4-1-同步锁的使用"><a href="#3-4-1-同步锁的使用" class="headerlink" title="3.4.1 同步锁的使用"></a>3.4.1 同步锁的使用</h3><p><strong>加锁 与 解锁</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个锁对象</span></span><br><span class="line">lock = threading.Lock()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获得锁，加锁</span></span><br><span class="line">lock.acquire()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 释放锁，解锁</span></span><br><span class="line">lock.release()</span><br></pre></td></tr></tbody></table></figure><p>当我们通过 lock.acquire() 获得锁后线程程将一直执行不会中断，直到该线程 lock.release( )释放锁后线程才有可能被释放(注意：锁被释放后线程不一定会释放)</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成一个锁对象</span></span><br><span class="line">lock = threading.Lock()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">global</span> num  <span class="comment"># 全局变量</span></span><br><span class="line">    <span class="comment"># lock.acquire()  # 获得锁，加锁</span></span><br><span class="line">    num1 = num</span><br><span class="line">    time.sleep(<span class="number">0.1</span>) </span><br><span class="line"><span class="comment"># sleep()操作，当在没有锁的情况下线程将在这里被释放出来，让给下一线程运行，而我们的num值还没有被修改，所以后面线程的num1的取值都是100</span></span><br><span class="line">    num = num1 - <span class="number">1</span></span><br><span class="line">    <span class="comment"># lock.release()  # 释放锁，解锁</span></span><br><span class="line">    time.sleep(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">num = <span class="number">100</span></span><br><span class="line">l = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">100</span>):  <span class="comment"># 开启100个线程</span></span><br><span class="line">    t = threading.Thread(target=func, args=())</span><br><span class="line">    t.start()</span><br><span class="line">    l.append(t)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 等待线程运行结束. 等到线程结束后再print num</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> l:</span><br><span class="line">    i.join()</span><br><span class="line"></span><br><span class="line">print(num)</span><br></pre></td></tr></tbody></table></figure><p>注意：上面代码先将lock.acquire()和lock.release()行注释掉表示不使用锁，取消lock.acquire()和lock.release()行的注释表示使用锁</p><p>不使用锁程序运行输出为 99；使用锁程序运行结果为0</p><p><strong>Lock 与GIL(全局解释器锁）存在区别</strong></p><ul><li>Lock 锁的目的，它是为了保护共享的数据，同时刻只能有一个线程来修改共享的数据，而保护不同的数据需要使用不同的锁</li><li>GIL用于限制一个进程中同一时刻只有一个线程被CPU调度，GIL的级别比Lock高，GIL是解释器级别</li></ul><p><strong>GIL与Lock同时存在，程序执行如下：</strong></p><blockquote><ol><li>同时存在两个线程：线程A，线程B</li><li>线程A 抢占到GIL，进入CPU执行，并加了Lock，但为执行完毕，线程被释放</li><li>线程B 抢占到GIL，进入CPU执行，执行时发现数据被线程A Lock，于是线程B被阻塞</li><li>线程B的GIL被夺走，有可能线程A拿到GIL，执行完操作、解锁，并释放GIL</li><li>线程B再次拿到GIL，才可以正常执行</li></ol></blockquote><p>通过上述应该能看到，Lock 通过牺牲执行的效率换数据安全</p><h3 id="3-4-2-死锁"><a href="#3-4-2-死锁" class="headerlink" title="3.4.2 死锁"></a>3.4.2 死锁</h3><p>多线程最怕的是遇到死锁，两个或两个以上的线程在执行时，因争夺资源被相互锁住而相互等待</p><p><em>互锁造成死锁</em></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成一个锁对象</span></span><br><span class="line">lock1 = threading.Lock()</span><br><span class="line">lock2 = threading.Lock()</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyThread</span><span class="params">(threading.Thread)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        threading.Thread.__init__(self)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span> -&gt; <span class="keyword">None</span>:</span></span><br><span class="line">        self.fun_A()</span><br><span class="line">        self.fun_B()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fun_A</span><span class="params">(self)</span>:</span></span><br><span class="line">        lock1.acquire()</span><br><span class="line">        print(<span class="string">'A_1 加锁'</span>, end=<span class="string">'\t'</span>)</span><br><span class="line">        lock2.acquire()</span><br><span class="line">        print(<span class="string">'A-2 加锁'</span>, end=<span class="string">'\t'</span>)</span><br><span class="line">        time.sleep(<span class="number">0.1</span>)</span><br><span class="line">        lock2.release()</span><br><span class="line">        print(<span class="string">'A-2 释放'</span>, end=<span class="string">'\t'</span>)</span><br><span class="line">        lock1.release()</span><br><span class="line">        print(<span class="string">'A-1 释放'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fun_B</span><span class="params">(self)</span>:</span></span><br><span class="line">        lock2.acquire()</span><br><span class="line">        print(<span class="string">'B-1 加锁'</span>, end=<span class="string">'\t'</span>)</span><br><span class="line">        lock1.acquire()</span><br><span class="line">        print(<span class="string">'B-2 加锁'</span>, end=<span class="string">'\t'</span>)</span><br><span class="line">        time.sleep(<span class="number">0.1</span>)</span><br><span class="line">        lock1.release()</span><br><span class="line">        print(<span class="string">'B-1 释放'</span>, end=<span class="string">'\t'</span>)</span><br><span class="line">        lock2.release()</span><br><span class="line">        print(<span class="string">'B-2 释放'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line"><span class="comment"># 需要四个以上线程，才会出现死锁现象</span></span><br><span class="line">    t1 = MyThread()</span><br><span class="line">    t2 = MyThread()</span><br><span class="line">    t1.start()</span><br><span class="line">    t2.start()</span><br></pre></td></tr></tbody></table></figure><p>如果两个锁同时被多个线程运行，就有可能出现死锁，如果没出现死锁，就多运行几遍就会出现死锁现象</p><h3 id="3-4-3-重入锁-递归锁"><a href="#3-4-3-重入锁-递归锁" class="headerlink" title="3.4.3 重入锁/递归锁"></a>3.4.3 重入锁/递归锁</h3><p><code>threading.RLock()</code><br>为了支持同一个线程中多次请求同一资源，Python 提供了可重入锁(RLock)。这个RLock内部维护着一个锁(Lock)和一个计数器(counter)变量，counter 记录了acquire 的次数，从而使得资源可以被多次acquire。直到一个线程所有 acquire都被release(计数器counter变为0)，其他的线程才能获得资源。</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成一个递归对象</span></span><br><span class="line">Rlock = threading.RLock()</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyThread</span><span class="params">(threading.Thread)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        threading.Thread.__init__(self)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span> -&gt; <span class="keyword">None</span>:</span></span><br><span class="line">        self.fun_A()</span><br><span class="line">        self.fun_B()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fun_A</span><span class="params">(self)</span>:</span></span><br><span class="line">        Rlock.acquire()</span><br><span class="line">        print(<span class="string">'A加锁1'</span>, end=<span class="string">'\t'</span>)</span><br><span class="line">        Rlock.acquire()</span><br><span class="line">        print(<span class="string">'A加锁2'</span>, end=<span class="string">'\t'</span>)</span><br><span class="line">        time.sleep(<span class="number">0.2</span>)</span><br><span class="line">        Rlock.release()</span><br><span class="line">        print(<span class="string">'A释放1'</span>, end=<span class="string">'\t'</span>)</span><br><span class="line">        Rlock.release()</span><br><span class="line">        print(<span class="string">'A释放2'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fun_B</span><span class="params">(self)</span>:</span></span><br><span class="line">        Rlock.acquire()</span><br><span class="line">        print(<span class="string">'B加锁1'</span>, end=<span class="string">'\t'</span>)</span><br><span class="line">        Rlock.acquire()</span><br><span class="line">        print(<span class="string">'B加锁2'</span>, end=<span class="string">'\t'</span>)</span><br><span class="line">        time.sleep(<span class="number">3</span>)</span><br><span class="line">        Rlock.release()</span><br><span class="line">        print(<span class="string">'B释放1'</span>, end=<span class="string">'\t'</span>)</span><br><span class="line">        Rlock.release()</span><br><span class="line">        print(<span class="string">'B释放2'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    t1 = MyThread()</span><br><span class="line">    t2 = MyThread()</span><br><span class="line">    t1.start()</span><br><span class="line">    t2.start()</span><br></pre></td></tr></tbody></table></figure><p>当运行到程序B时，即使B休眠了3秒也不会切换线程。</p><p>使用重入锁时，counter 没有变为0(所有的acquire没有被释放掉)，即使遇到长时间的io操作也不会切换线程。</p><h1 id="4-线程实战"><a href="#4-线程实战" class="headerlink" title="4. 线程实战"></a>4. 线程实战</h1><h2 id="4-1-初步的练习和详细解释"><a href="#4-1-初步的练习和详细解释" class="headerlink" title="4.1 初步的练习和详细解释"></a>4.1 初步的练习和详细解释</h2><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 学习力 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>理财笔记</title>
      <link href="/2020/04/03/yq-fund/"/>
      <url>/2020/04/03/yq-fund/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><h1 id="第一次接触的感悟"><a href="#第一次接触的感悟" class="headerlink" title="第一次接触的感悟"></a>第一次接触的感悟</h1><p>  第一次是某个沙雕让我买基金，然后我第一次接触，什么也不懂就买了，短期就涨了很多，然后我傻逼的以为可以直接卖了，然后我就卖了，然后发现他是有一个卖出的时限的，就是你卖的时候要的几天的时间，这几天你买的基金还是会发生变化，hhh，然后等到实际出来的那一天，我就傻了，果然赔了。<br>  现在再回头想想当时，是真的傻，这个基金必须要买的时间足够长，亏得概率才会低，买入的时间越短，就越亏，就先不谈他的手续费就要0.01%或者0.1%，如果你刚买就卖了，必然会亏，买的愈多亏的越多。然后到了现在，3月底，突然想到我没有去学校，也就没有地方花钱，既然钱一直在我手里花不了，那为什么不学学理财什么的，看了看知乎的一些入门教程，试着卖了10块钱的白酒基金，现在赚了一块hhh，现在涨了不少，我果然是傻逼，没有看清楚他的规则，就盲目的买卖，这不亏就有鬼了，但是现在也买上了，就不想了，短期内是不会卖的，就等个一年，然后也会不停地往进买（看准时机），也会慢慢的学一些相关的理财知识吧，慢慢学，慢慢看，不急。然后从今天开始，随缘写一写这篇文吧！！！</p><p>  接着说一下现在的情况吧，现在我的理财状况大致如下：</p><p><img src="/img/life/fund.png" alt="理财现状（悲）"></p><p>就是不知道到时候4.8号的时候是升还是跌了，升了的话就亏得一批，但是又不敢卖(怂着)</p><h1 id="开始学习系统的知识"><a href="#开始学习系统的知识" class="headerlink" title="开始学习系统的知识"></a>开始学习系统的知识</h1><p>还没开始呢？？？</p><h2 id="1-基础算法（自己的理解）"><a href="#1-基础算法（自己的理解）" class="headerlink" title="1. 基础算法（自己的理解）"></a>1. 基础算法（自己的理解）</h2><p>买入金额净值 = 持仓成本价 * 持有份额</p><p>卖出赎回金额 = 卖出份额 * 当日的净值 - 卖出份额 * 赎回费率</p><p><strong>做一个简单的小程序</strong><br>通过给定的费率和卖出份额，以及当天的净值，计算卖出赎回的金额</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 简单的，，有很大的误差，毕竟是用float算金额hhh</span><br><span class="line"></span><br><span class="line">fene = float(input('卖出多少份额：'))</span><br><span class="line">feil = float(input('赎回的费率：'))</span><br><span class="line">jz = float(input('当天的净值：'))</span><br><span class="line"></span><br><span class="line">get = (fene * jz) - (fene * feil)</span><br><span class="line">print(f'实际赎回的金额：{get}')</span><br></pre></td></tr></tbody></table></figure><h1 id="心情日记（并不是）"><a href="#心情日记（并不是）" class="headerlink" title="心情日记（并不是）"></a>心情日记（并不是）</h1><p>4月10日，雨雪天气<br>  今天的基金又收益了3.04，总体来说这几天我买的几只基都是上涨的，现在白酒投了210，收益了7.37，这支暂时是不会卖的，因为现在卖了的话，亏得一批，然后那支纯债的一周以后就可以卖或者如果有所下降趋势的话就可以继续加买，最后的是投了500的天弘沪深，收益了9.46，感觉这只等到他降了就再买，这支感觉从大趋势来看是一只好基。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 学习力 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Life </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python中PyQt库的学习</title>
      <link href="/2020/04/02/python-pyqt/"/>
      <url>/2020/04/02/python-pyqt/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><p><strong>初步的代码理解</strong><br><em>先会用个大概，浅显的理解</em></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os,sys</span><br><span class="line"><span class="keyword">from</span> PyQt5 <span class="keyword">import</span> QtCore,QtWidgets,QtGui</span><br><span class="line"><span class="keyword">import</span> clock <span class="keyword">as</span> cl</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开时的提示</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tipclock1</span><span class="params">(w)</span>:</span></span><br><span class="line">    label = QtWidgets.QLabel(w)</span><br><span class="line">    label.setGeometry(QtCore.QRect(<span class="number">40</span>,<span class="number">300</span>,<span class="number">200</span>,<span class="number">45</span>))</span><br><span class="line">    label.setFont(QtGui.QFont(<span class="string">'Roman times'</span>,<span class="number">15</span>))</span><br><span class="line">    label.setText(<span class="string">'桌面表针已打开'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tipimg1</span><span class="params">(w)</span>:</span></span><br><span class="line">    label = QtWidgets.QLabel(w)</span><br><span class="line">    label.setGeometry(QtCore.QRect(<span class="number">40</span>,<span class="number">350</span>,<span class="number">200</span>,<span class="number">45</span>))</span><br><span class="line">    label.setFont(QtGui.QFont(<span class="string">'Roman times'</span>,<span class="number">15</span>))</span><br><span class="line">    label.setText(<span class="string">'图像识别已打开'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tipdata1</span><span class="params">(w)</span>:</span></span><br><span class="line">    label = QtWidgets.QLabel(w)</span><br><span class="line">    label.setGeometry(QtCore.QRect(<span class="number">40</span>,<span class="number">400</span>,<span class="number">200</span>,<span class="number">45</span>))</span><br><span class="line">    label.setFont(QtGui.QFont(<span class="string">'Roman times'</span>,<span class="number">15</span>))</span><br><span class="line">    label.setText(<span class="string">'数据分析已打开'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭时的提示</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tipclock0</span><span class="params">(w)</span>:</span></span><br><span class="line">    label = QtWidgets.QLabel(w)</span><br><span class="line">    label.setGeometry(QtCore.QRect(<span class="number">300</span>,<span class="number">300</span>,<span class="number">200</span>,<span class="number">45</span>))</span><br><span class="line">    label.setFont(QtGui.QFont(<span class="string">'Roman times'</span>,<span class="number">15</span>))</span><br><span class="line">    label.setText(<span class="string">'桌面表针已关闭'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tipimg0</span><span class="params">(w)</span>:</span></span><br><span class="line">    label = QtWidgets.QLabel(w)</span><br><span class="line">    label.setGeometry(QtCore.QRect(<span class="number">300</span>,<span class="number">350</span>,<span class="number">200</span>,<span class="number">45</span>))</span><br><span class="line">    label.setFont(QtGui.QFont(<span class="string">'Roman times'</span>,<span class="number">15</span>))</span><br><span class="line">    label.setText(<span class="string">'图像识别已关闭'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tipdata0</span><span class="params">(w)</span>:</span></span><br><span class="line">    label = QtWidgets.QLabel(w)</span><br><span class="line">    label.setGeometry(QtCore.QRect(<span class="number">300</span>,<span class="number">400</span>,<span class="number">200</span>,<span class="number">45</span>))</span><br><span class="line">    label.setFont(QtGui.QFont(<span class="string">'Roman times'</span>,<span class="number">15</span>))</span><br><span class="line">    label.setText(<span class="string">'数据分析已关闭'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 主界面</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_gui</span><span class="params">(w)</span>:</span></span><br><span class="line">    <span class="comment"># 位置w，位置h，大小w，大小h</span></span><br><span class="line">    w.setGeometry(<span class="number">600</span>,<span class="number">300</span>,<span class="number">540</span>,<span class="number">500</span>)</span><br><span class="line">    w.setWindowTitle(<span class="string">'Python'</span>)</span><br><span class="line">    w.setWindowIcon(QtGui.QIcon(<span class="string">'7.ico'</span>))</span><br><span class="line">    QtWidgets.QToolTip.setFont(QtGui.QFont(<span class="string">'SansSerif'</span>,<span class="number">10</span>))</span><br><span class="line">    w.setToolTip(<span class="string">'This is python'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">3</span>): </span><br><span class="line">        label = QtWidgets.QLabel(w)</span><br><span class="line">        label.setGeometry(QtCore.QRect(<span class="number">40</span>,<span class="number">20</span>+i*<span class="number">60</span>,<span class="number">220</span>,<span class="number">45</span>))</span><br><span class="line">        label.setFont(QtGui.QFont(<span class="string">'Roman times'</span>,<span class="number">15</span>))</span><br><span class="line">        <span class="keyword">if</span> i == <span class="number">0</span> :</span><br><span class="line">            label.setText(<span class="string">'打开桌面模拟表针:'</span>)</span><br><span class="line">            <span class="comment"># tipclock1(w)</span></span><br><span class="line">            <span class="comment"># tipclock0(w)</span></span><br><span class="line">        <span class="keyword">elif</span> i == <span class="number">1</span> :</span><br><span class="line">            label.setText(<span class="string">'打开识别图像程序:'</span>)</span><br><span class="line">            <span class="comment"># tipimg1(w)</span></span><br><span class="line">            <span class="comment"># tipimg0(w)</span></span><br><span class="line">        <span class="keyword">elif</span> i == <span class="number">2</span> :</span><br><span class="line">            label.setText(<span class="string">'打开数据分析程序:'</span>)</span><br><span class="line">            <span class="comment"># tipdata1(w)</span></span><br><span class="line">            <span class="comment"># tipdata0(w)</span></span><br><span class="line">        <span class="keyword">elif</span> i == <span class="number">3</span> :</span><br><span class="line">            label.setText(<span class="string">'打开桌面模拟表针:'</span>)</span><br><span class="line">        <span class="keyword">else</span> :</span><br><span class="line">            label.setText(<span class="string">'打开桌面模拟表针:'</span>)</span><br><span class="line">        <span class="comment"># text = QtWidgets.QLineEdit(w)</span></span><br><span class="line">        <span class="comment"># text.setGeometry(QtCore.QRect(150,30,160,30))</span></span><br><span class="line">        </span><br><span class="line">        button = QtWidgets.QPushButton(w)</span><br><span class="line">        button.setGeometry(QtCore.QRect(<span class="number">280</span>,<span class="number">20</span>+i*<span class="number">60</span>,<span class="number">100</span>,<span class="number">45</span>))</span><br><span class="line">        <span class="comment"># button.move(150,100)</span></span><br><span class="line">        button.setText(<span class="string">'打开'</span>)</span><br><span class="line">        <span class="keyword">if</span> i == <span class="number">0</span> :</span><br><span class="line">            button.clicked.connect(cl.drawuse)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> button.isActiveWindow:</span><br><span class="line">            tipclock1(w)</span><br><span class="line"></span><br><span class="line">        button = QtWidgets.QPushButton(w)</span><br><span class="line">        button.setGeometry(QtCore.QRect(<span class="number">400</span>,<span class="number">20</span>+i*<span class="number">60</span>,<span class="number">100</span>,<span class="number">45</span>))</span><br><span class="line">        button.setText(<span class="string">'关闭'</span>)</span><br><span class="line">        <span class="comment"># if i == 0 :</span></span><br><span class="line">            <span class="comment"># button.clicked.connect()</span></span><br><span class="line"></span><br><span class="line">    w.show()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line"></span><br><span class="line">    app = QtWidgets.QApplication(sys.argv)</span><br><span class="line">    w = QtWidgets.QWidget()</span><br><span class="line">    get_gui(w)</span><br><span class="line">    sys.exit(app.exec_())</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 学习力 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python中schedule库的学习</title>
      <link href="/2020/03/31/python-schedule/"/>
      <url>/2020/03/31/python-schedule/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><h1 id="0-零散的知识"><a href="#0-零散的知识" class="headerlink" title="0. 零散的知识"></a>0. 零散的知识</h1><h2 id="0-1-定时截屏"><a href="#0-1-定时截屏" class="headerlink" title="0.1 定时截屏"></a>0.1 定时截屏</h2><blockquote><p>版权声明：本文为CSDN博主「欧阳不小辉」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明<br><a href="https://blog.csdn.net/a180736/java/article/details/79159859" target="_blank" rel="noopener">原文链接</a></p></blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time </span><br><span class="line"><span class="keyword">import</span> schedule</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> ImageGrab </span><br><span class="line"></span><br><span class="line">c = <span class="number">0</span> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">screen</span><span class="params">()</span>:</span></span><br><span class="line">&nbsp; &nbsp; im = ImageGrab.grab() &nbsp; &nbsp; &nbsp; &nbsp;<span class="comment">#截屏</span></span><br><span class="line">&nbsp; &nbsp; im.save(<span class="string">'F:\python egs\Image\image/'</span>+str(c)+<span class="string">'.jpg'</span>,<span class="string">'JPEG'</span>) </span><br><span class="line"></span><br><span class="line">schedule.every(<span class="number">1</span>).seconds.do(screen)<span class="comment">#执行定时截屏</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:                                 </span><br><span class="line">        schedule.run_pending()</span><br><span class="line">        c = c+<span class="number">1</span></span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 学习力 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python中PIL库的学习</title>
      <link href="/2020/03/31/python-pil/"/>
      <url>/2020/03/31/python-pil/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><h1 id="0-零散的知识"><a href="#0-零散的知识" class="headerlink" title="0. 零散的知识"></a>0. 零散的知识</h1><h2 id="0-1-截取电脑屏幕"><a href="#0-1-截取电脑屏幕" class="headerlink" title="0.1 截取电脑屏幕"></a>0.1 截取电脑屏幕</h2><p><em>从左上角开始截取，获得八张图片的简单例子</em></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> ImageGrab</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">9</span>):</span><br><span class="line">    j = i * <span class="number">50</span></span><br><span class="line">    im = ImageGrab.grab((<span class="number">0</span>,<span class="number">0</span>,j,j))</span><br><span class="line">    <span class="comment"># im.show()</span></span><br><span class="line">    im.save(<span class="string">'E:/learn/py/PIL/'</span>+str(i)+<span class="string">'.jpg'</span>,<span class="string">'JPEG'</span>)</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 学习力 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端开发的基础知识</title>
      <link href="/2020/03/25/note-hcj/"/>
      <url>/2020/03/25/note-hcj/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><p><strong>参考资料</strong>（大佬的笔记）</p><blockquote><p><a href="https://blog.csdn.net/wuyxinu/article/details/103515157" target="_blank" rel="noopener">HTML</a><br><a href="https://blog.csdn.net/wuyxinu/article/details/103583618" target="_blank" rel="noopener">CSS</a><br><a href="https://blog.csdn.net/wuyxinu/article/details/103642800" target="_blank" rel="noopener">JS</a><br><a href="https://blog.csdn.net/wuyxinu/article/details/103646041" target="_blank" rel="noopener">JS-下</a><br>还有 <a href="https://blog.csdn.net/wuyxinu/article/details/103669718" target="_blank" rel="noopener">jQuery</a><br><a href="https://blog.csdn.net/wuyxinu/article/details/103774211" target="_blank" rel="noopener">Node.js+Gulp</a></p></blockquote><p><strong>学习思路</strong></p><ul><li><input checked="" disabled="" type="checkbox"> HTML 入门 </li><li><input disabled="" type="checkbox"> CSS 入门 </li><li><input disabled="" type="checkbox"> HTML 进阶 </li><li><input disabled="" type="checkbox"> CSS 进阶 </li><li><input disabled="" type="checkbox"> JavaScript 入门</li><li><input disabled="" type="checkbox"> jQuery 入门 </li><li><input disabled="" type="checkbox"> ASP.NET 入门（或 PHP 入门）</li><li><input disabled="" type="checkbox"> Ajax</li><li><input disabled="" type="checkbox"> ASP.NET 进阶（或 PHP 进阶）</li></ul><h1 id="1-html-html5-的基础"><a href="#1-html-html5-的基础" class="headerlink" title="1. html/html5 的基础"></a>1. html/html5 的基础</h1><ul><li><strong>1、什么是 HTML?</strong><br>HTML 是用来描述网页的一种语言<br>HTML 指超文本标记语言( Hyper Text Markup Language)<br>HTML 不是编程语言,是一种标记语言</li><li>2、<strong>HTML5 的新特性</strong><br>用于绘画的 canvas 标签<br>用于媒介回放的 vdeo 和 audo 元素<br>对本地离线储存的更好支持<br>新的特殊内容元素,如: article、 footer、 header、nav、 section<br>新的表单控件如: calendar、date、time、emai、url、 search</li></ul><h2 id="1-1-html-基础结构"><a href="#1-1-html-基础结构" class="headerlink" title="1.1 html 基础结构"></a>1.1 html 基础结构</h2><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span>  #html file</span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span>&gt;</span><span class="tag">&lt;/<span class="name">meta</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span> #html main</span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">align</span> = <span class="string">"center"</span>&gt;</span>    <span class="comment">&lt;!--head first    居中center   h1~6--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>#paragraph</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span> = <span class="string">"http://wfaief.com"</span>&gt;</span>this is a link<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="1-2-页头-head"><a href="#1-2-页头-head" class="headerlink" title="1.2 页头 head"></a>1.2 页头 head</h2><ul><li>title 定义网页的标题</li><li>meta 定义网页的基本信息</li><li>style 定义 css 样式</li><li>link 定义链接外部 css 文件或脚本文件</li></ul><ul><li>script 定义脚本语言</li><li>base 定义页面所有链接的基本定位</li></ul><h2 id="1-3-页身-body"><a href="#1-3-页身-body" class="headerlink" title="1.3 页身 body"></a>1.3 页身 body</h2><h3 id="1-3-1-段落与文字"><a href="#1-3-1-段落与文字" class="headerlink" title="1.3.1 段落与文字"></a>1.3.1 段落与文字</h3><ul><li>段落<ul><li>h1~h6 多级标题</li><li>p 段落</li><li>br 换行<code>&lt;br/&gt;</code></li><li>hr 水平线<code>&lt;hr/&gt;</code></li><li>div 分割-块元素</li><li>span 区域-行内元素</li></ul></li><li>文字<ul><li>strong 加强-粗体</li><li>em 强调-斜体</li><li>cite 引用</li><li>sup 上标</li><li>sub 下标</li></ul></li><li>网页特殊符号<ul><li><code>&amp;nbsp;</code>空格</li></ul></li></ul><p><em>div和span没有任何语义,正是因为没有语义，这两个标签一般都是配合CSS来定义元素 样式的</em></p><ul><li><p>div是块元素，可以包含任何块元素和行内元素，不会与其他元素位于同一行；span 是行内元素，可以与其他行内元素位于同一行。</p></li><li><p>div常用于页面中较大块的结构划分，然后配合CSS来操作；span 一般用来包含文字等, 它没有结构的意义，纯粹是应用样式。当其他行内元素都不适合的时候，可以用span来配合CSS 操作</p></li></ul><h3 id="1-3-2-列表"><a href="#1-3-2-列表" class="headerlink" title="1.3.2 列表"></a>1.3.2 列表</h3><ul><li>ol 有序列表</li></ul><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>有序列表项<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>有序列表项<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>有序列表项<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"></span><br><span class="line">type 属性： 数字 123--- 小写字母 abc--- 大写字母 ABC--- 小写罗马数字</span><br><span class="line">i、ii、iii…… 大写罗马数字 I、II、III……</span><br></pre></td></tr></tbody></table></figure><ul><li>ul 无序列表（重点）</li></ul><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">type</span>=<span class="string">"列表项符号"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>无序列表项<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>无序列表项<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>无序列表项<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">type 属性值 disc 默认值，实心圆“●” circle 空心圆“○” square 实心正方形“■”</span><br></pre></td></tr></tbody></table></figure><ul><li>dl 定义列表</li></ul><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>定义名词<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>定义描述<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">  ……</span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h3 id="1-3-3-表格"><a href="#1-3-3-表格" class="headerlink" title="1.3.3 表格"></a>1.3.3 表格</h3><ul><li><p>基本结构</p><ul><li>table 表格</li><li>tr 表格行</li><li>td 单元格</li></ul></li><li><p>完整结构</p><ul><li>caption 标题</li><li>thead 表头</li><li>th 表头单元格</li><li>tbody 表身</li><li>tfoot 表脚</li><li>td rowspan 合并行<br><code>&lt;td rowspan="跨度的行数"&gt;</code></li><li>td colspan 合并列<br><code>&lt;td colspan="跨度的列数"&gt;</code></li></ul></li></ul><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span></span></span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;&lt;cation&gt;表格标题&lt;/cation&gt;</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">&lt;!--头--&gt;</span></span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;<span class="name">th</span>&gt;</span>表头单元格1<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;<span class="name">th</span>&gt;</span>表头单元格2<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">&lt;!--表身--&gt;</span></span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;<span class="name">td</span>&gt;</span>标准单元格1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;<span class="name">td</span>&gt;</span>标准单元格2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;<span class="name">td</span>&gt;</span>标准单元格1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;<span class="name">td</span>&gt;</span>标准单元格2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">&lt;!--表脚--&gt;</span></span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;<span class="name">tfoot</span>&gt;</span></span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;<span class="name">td</span>&gt;</span>标准单元格1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;<span class="name">td</span>&gt;</span>标准单元格2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;/<span class="name">tfoot</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h3 id="1-3-4-图像"><a href="#1-3-4-图像" class="headerlink" title="1.3.4 图像"></a>1.3.4 图像</h3><p><code>&lt;img src="图片地址" alt="图片描述（给搜索引擎看）" title="图片描述"&gt;</code></p><ul><li>src 图像的文件地址</li><li>alt 图片显示不出来时提示的文字</li><li>title 鼠标移动到图片上的提示文字</li></ul><h3 id="1-3-5-链接"><a href="#1-3-5-链接" class="headerlink" title="1.3.5 链接"></a>1.3.5 链接</h3><ul><li>href 链接</li></ul><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"链接地址"</span> <span class="attr">target</span>=<span class="string">"目标窗口的打开方式"</span>&gt;</span></span><br><span class="line">  target 属性值 \_self 默认方式，即在当前窗口打开链接 \_blank</span><br><span class="line">  在一个全新的空白窗口中打开链接 \_top 在顶层框架中打开链接 \_parent</span><br><span class="line">  在当前框架的上一层里打开链接<span class="tag">&lt;/<span class="name">a</span></span></span><br><span class="line"><span class="tag">&gt;</span></span><br></pre></td></tr></tbody></table></figure><ul><li><p>内部链接</p></li><li><p>锚点链接</p></li></ul><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#music"</span>&gt;</span>推荐音乐<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"music"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><ul><li><p>内部页面链接</p></li><li><p>外部链接</p></li></ul><h3 id="1-3-6-表单"><a href="#1-3-6-表单" class="headerlink" title="1.3.6 表单"></a>1.3.6 表单</h3><ul><li>input 的 type 中的属性<br><code>&lt;input type="表单类型"/&gt;</code></li></ul><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">- text单行文本框</span><br><span class="line">- password密码文本框</span><br><span class="line">- button按钮</span><br><span class="line">- reset重置按钮</span><br><span class="line">- image图像形式的提交按钮</span><br><span class="line">- radio单选按钮</span><br><span class="line">- checkbox复选框</span><br><span class="line">- hidden隐藏字段</span><br><span class="line">- file文件上传</span><br></pre></td></tr></tbody></table></figure><ul><li><p>textarea<br><code>&lt;textarea rows="行数" cols="列数"&gt;多行文本框内容&lt;/textarea&gt;</code> 多行文本框</p></li><li><p>select</p></li><li><p>option</p></li></ul><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">multiple</span>=<span class="string">"mutiple"</span> <span class="attr">size</span>=<span class="string">"可见列表项的数目"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"选项值"</span> <span class="attr">selected</span>=<span class="string">"selected"</span>&gt;</span>选项显示的内容<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  ……</span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"选项值"</span>&gt;</span>选项显示的内容<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h3 id="1-3-7-多媒体"><a href="#1-3-7-多媒体" class="headerlink" title="1.3.7 多媒体"></a>1.3.7 多媒体</h3><ul><li><p>embed 音频视频<br><code>&lt;embed src="多媒体文件地址" width="播放界面的宽度" height="播放界面的高度"&gt;&lt;/embed&gt;</code><br>src 可以是绝对地址也可以是相对地址<br>width 和 height 使用 px 作为单位</p></li><li><p>bgsound 背景音乐-只适用 ie 浏览器<br><code>&lt;bgsound src="背景音乐的地址"/&gt;</code></p></li></ul><p>loop=”2”表示重复 2 次，loop=”infinite”表示无限次循环播放，也可以使用 loop=”-1”表示无限次循环播放。</p><h3 id="1-3-8-浮动框架"><a href="#1-3-8-浮动框架" class="headerlink" title="1.3.8 浮动框架"></a>1.3.8 浮动框架</h3><p>浮动框架是一种较为特殊的框架，它是在浏览器窗口中嵌套的子窗口，整个页面并不一定是框架页面，但要包含一个框架窗口</p><ul><li>iframe</li></ul><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span></span></span><br><span class="line"><span class="tag">  <span class="attr">src</span>=<span class="string">"浮动框架的源文件"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">width</span>=<span class="string">"浮动框架的宽"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">height</span>=<span class="string">"浮动框架的高"</span></span></span><br><span class="line"><span class="tag">&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line">width、height宽高 scrolling滚动条</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span></span></span><br><span class="line"><span class="tag">  <span class="attr">src</span>=<span class="string">"浮动框架的源文件"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">width</span>=<span class="string">"浮动框架的宽"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">height</span>=<span class="string">"浮动框架的高"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">scrolling</span>=<span class="string">"取值"</span></span></span><br><span class="line"><span class="tag">&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>取值</p><ul><li>auto 默认整个表格左对齐</li><li>yes 总是显示滚动条</li><li>no 任何情况不显示滚动条</li></ul><h2 id="1-4-HTML-XHTML-HTML5-简介"><a href="#1-4-HTML-XHTML-HTML5-简介" class="headerlink" title="1.4 HTML XHTML HTML5 简介"></a>1.4 HTML XHTML HTML5 简介</h2><h3 id="1-4-1-XHTML"><a href="#1-4-1-XHTML" class="headerlink" title="1.4.1 XHTML"></a>1.4.1 XHTML</h3><p>xhtml 比 html 更加严格</p><ul><li>1、XHTML 标签必须闭合</li><li>2、XHTML 标签以及属性必须小写</li><li>3、XHTML 标签属性必须用引号</li><li>4、XHTML 标签用 jd 属性代替 name 属</li></ul><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/1999/xhtml"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">      “<span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">"font-weight:bold;color:Red;"</span>&gt;</span>视觉化思考<span class="tag">&lt;/<span class="name">span</span>&gt;</span>”能以独特而有效的方式，让你的心有更大的空间来解决问题。</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h3 id="1-4-2-HTML5"><a href="#1-4-2-HTML5" class="headerlink" title="1.4.2 HTML5"></a>1.4.2 HTML5</h3><p>HTML 5 除了新增部分标签之外，还增加了一组技术，包括 canvas、SVG、WebSocket.本地存储等。这些新增的技术都是使用 JavaScript 来操作。也就是说，HTML 5 使得 HTML 从一门“标记语言” 转变为一门 <strong>“编程语言”</strong></p><ul><li>声明更简洁 <code>&lt;!DOCTYPE html&gt;</code></li><li>不再区分大小写 <code>&lt;div&gt;绿叶学习网&lt;/DIV&gt;</code></li><li>允许属性值不加引号 <code>&lt;div id=wrapper style=co1or: red&gt; 绿叶学习网 &lt;/div&gt;</code></li><li>允许部分属性的属性值省略<ul><li><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"ntext"</span> <span class="attr">readonly</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">checked</span>/&gt;</span></span><br></pre></td></tr></tbody></table></figure></li></ul></li></ul><table><thead><tr><th>省略形式</th><th>等价于</th></tr></thead><tbody><tr><td>checked</td><td>checked=”nchecked”</td></tr><tr><td>readonly</td><td>readonly=”readonly”</td></tr><tr><td>defer</td><td>defer=”defer”</td></tr><tr><td>ismap</td><td>ismap=”ismap”</td></tr><tr><td>nohref</td><td>nohref=”nohref”</td></tr><tr><td>noshade</td><td>noshade=”noshade”</td></tr><tr><td>nowrap</td><td>nowrap=”nowrap”</td></tr><tr><td>selected</td><td>selected=”selected”</td></tr><tr><td>disabled</td><td>ciisabled=”disableci”</td></tr><tr><td>multiple</td><td>multiple=”multiple”</td></tr><tr><td>noresize</td><td>noresize=”disabled”</td></tr></tbody></table><h2 id="1-5-知识点"><a href="#1-5-知识点" class="headerlink" title="1.5 知识点"></a>1.5 知识点</h2><h3 id="1-5-1-class与id"><a href="#1-5-1-class与id" class="headerlink" title="1.5.1 class与id"></a>1.5.1 class与id</h3><p>class,顾名思义，就是“类”。它釆用的思想跟C、Java等编程语言中的“类”相似。 我们可以为同一个页面的相同元素或者不同元素设置相同的class,然后使得相同class的元 素具有相同的CSS样式</p><p><strong>可以用多类名</strong>，<strong>用空格隔开</strong><br>eg: <code>&lt;h1 class="title tac"&gt;文章总标题&lt;/h1&gt;</code></p><p>id属性具有唯一性，也就是说在一个页面中相同的id只允许出现一次<br>W3C建议，对 于页面关键的结构或者大结构，我们才使用id。所谓的关键结构，指的是诸如LOGO、导航、 主体内容、底部信息栏等结构。对于一些小地方，还是建议使用class属性</p><h3 id="1-5-2-浏览器标题栏小图标"><a href="#1-5-2-浏览器标题栏小图标" class="headerlink" title="1.5.2 浏览器标题栏小图标"></a>1.5.2 浏览器标题栏小图标</h3><p>放在head里面</p><p><code>&lt;link rel="shortcut icon" type="image/x-icon" href="favicon.icon"/&gt;</code></p><h3 id="1-5-3-语义化"><a href="#1-5-3-语义化" class="headerlink" title="1.5.3 语义化"></a>1.5.3 语义化</h3><p>即尽可能地不使用div来编写，用自带的语句来编写</p><ul><li><p>标题语义化</p><ul><li>（1）一个页面只能有一个h1标签</li><li>（2）hl ~ h6之间不要断层</li><li>（3）不要用h1 ~ h6来定义样式</li><li>（4）不要用div来代替h1 ~ h6.</li></ul></li><li><p>图片语义化</p><ul><li>（1） alt属性和title属性<figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">""</span> <span class="attr">alt</span>=<span class="string">"图片描述(给搜索引擎看)"</span> <span class="attr">title</span>=<span class="string">"图片描述(给用户看)"</span>&gt;</span></span><br><span class="line">`</span><br></pre></td></tr></tbody></table></figure></li><li>（2） figure 元素和 figcaption 元素<figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">figure</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">""</span> <span class="attr">alt</span>=<span class="string">""</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">figcaption</span>&gt;</span>图注文字<span class="tag">&lt;/<span class="name">figcaption</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">figure</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></li></ul></li><li><p>表格语义化（在实际开发中，我们不建议使用表格布局，应该使用浮动布局或者定位布局）</p><ul><li>th表示“表头单元格”</li><li>caption表示“表格标题”</li><li>thead、tbody和tfoot这3个标签把表格从语义上分为三部分: 表头、表身和表脚<figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/1999/xhtml"</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line"><span class="css">          <span class="selector-class">.body</span> {</span></span><br><span class="line">              font-family: "微软雅黑";</span><br><span class="line">              font-size: 14px;</span><br><span class="line">          }</span><br><span class="line">      <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">'content'</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">              </span><br><span class="line">              <span class="tag">&lt;<span class="name">caption</span>&gt;</span> 表格标题 <span class="tag">&lt;/<span class="name">caption</span>&gt;</span> </span><br><span class="line">              <span class="comment">&lt;!--表头--&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">th</span>&gt;</span>表头单元格l<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">th</span>&gt;</span>表头单元格2<span class="tag">&lt;/<span class="name">th</span>&gt;</span> <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">              <span class="comment">&lt;!--表身--&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>标准单元格l<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>标准单元格2<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>标准单元格l<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>标准单元格2<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">              <span class="comment">&lt;!--表脚--&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">tfoot</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>标准单元格l<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span>&gt;</span>标准单元格2<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">tfoot</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></li></ul></li><li><p>表单语义化</p><ul><li>（1）label 标签</li><li>（2）fieldset 标签和 legend 标签<figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/1999/xhtml"</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"index.aspx"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">fieldset</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">legend</span>&gt;</span>登录绿叶学习网<span class="tag">&lt;/<span class="name">legend</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"name"</span>&gt;</span> 账号：<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"name"</span> <span class="attr">name</span>=<span class="string">"name"</span> /&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"pwd"</span>&gt;</span> 密码：<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">id</span>=<span class="string">"pwd"</span> <span class="attr">name</span>=<span class="string">"pwd"</span> /&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">id</span>=<span class="string">"remember-me"</span> <span class="attr">name</span>=<span class="string">"remember-me"</span> /&gt;</span> <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"remember-me"</span>&gt;</span> 记住我 <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"登录"</span> /&gt;</span></span><br><span class="line">  </span><br><span class="line">          <span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></li></ul></li><li><p>其他语义化</p><ul><li>换行符 <code>&lt;br/&gt;</code>只适合用于p标签内 部的换行，不能用于其他标签</li><li>在实际开发中，大多数情况下都是使用无序列表ul，极少情况下会使用有序列表</li><li>strong标签和em标签 <strong>加粗</strong>和<em>斜体</em></li><li>del标签和ins标签   <del>删除线</del> 和 <ins>下划线</ins></li><li>img标签</li></ul></li><li><p>语义化验证：去掉css，要有好的可读性</p></li><li><p>html5删除地标签</p></li></ul><table><thead><tr><th align="left">标签</th><th>说明</th></tr></thead><tbody><tr><td align="left">basefont</td><td>定义页面文本默认字体，颜色，尺寸</td></tr><tr><td align="left">big</td><td>定义大字号文本</td></tr><tr><td align="left">center</td><td>定义文本居中</td></tr><tr><td align="left">font</td><td>定义文本的字体样式</td></tr><tr><td align="left">strike</td><td>定义删除线文本</td></tr><tr><td align="left">s</td><td>定义删除线文本</td></tr><tr><td align="left">u</td><td>定义下划线文本</td></tr><tr><td align="left">dir</td><td>定义目录列表，应该用ul代替</td></tr><tr><td align="left">acronym</td><td>定义首字母缩写，应该用abbr代替</td></tr><tr><td align="left">isindex</td><td>定义与文档相关的可搜索索引</td></tr><tr><td align="left">applet</td><td>定义嵌入的applet,应该用object代替</td></tr><tr><td align="left">frame</td><td>定义frameset中的一个特定的框架</td></tr><tr><td align="left">frameset</td><td>定义一个框架集</td></tr><tr><td align="left">noframes</td><td>为那些不支持框架的浏览器显示文本</td></tr></tbody></table><h2 id="1-6-HTML5"><a href="#1-6-HTML5" class="headerlink" title="1.6 HTML5"></a>1.6 HTML5</h2><h3 id="1-6-1-新的语义化标签"><a href="#1-6-1-新的语义化标签" class="headerlink" title="1.6.1 新的语义化标签"></a>1.6.1 新的语义化标签</h3><ul><li>header头部标签</li><li>nav导航标签</li><li>article内容标签</li><li>section块级标签</li><li>aside侧边栏标签</li><li>footer尾部标签</li></ul><h3 id="1-6-2-多媒体音频标签"><a href="#1-6-2-多媒体音频标签" class="headerlink" title="1.6.2 多媒体音频标签"></a>1.6.2 多媒体音频标签</h3><ul><li>audio音频<br>可以在不使用标签的情况下，也能够原生的支持音频格式文件的播放，但是：播放格式是有限的<ul><li>autoplay自动播放</li><li>controls出现该属性，则向用户显示控件</li><li>loop每当音频结束时自动重新播放</li><li>src音频地url</li></ul></li></ul><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">controls</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">"./media/snow.mp3"</span> <span class="attr">type</span>=<span class="string">"audio/mpeg"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><ul><li>video视频<ul><li>autoplay自动播放</li><li>controls出现该属性，则向用户显示控件</li><li>width px 宽</li><li>height px 高</li><li>loop每当音频结束时自动重新播放</li><li>src音频地url</li><li>preload 预先加载</li><li>poster 加载等待地画面图片imgurl</li><li>muted 静音播放</li></ul></li></ul><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"> &nbsp;<span class="comment">&lt;!-- &lt;video src="./media/video.mp4" controls="controls"&gt;&lt;/video&gt; --&gt;</span></span><br><span class="line">​</span><br><span class="line"> &nbsp;<span class="comment">&lt;!-- 谷歌浏览器禁用了自动播放功能，如果想自动播放，需要添加 muted 属性 --&gt;</span></span><br><span class="line"> &nbsp;<span class="tag">&lt;<span class="name">video</span> <span class="attr">controls</span>=<span class="string">"controls"</span> <span class="attr">autoplay</span> <span class="attr">muted</span> <span class="attr">loop</span> <span class="attr">poster</span>=<span class="string">"./media/pig.jpg"</span>&gt;</span></span><br><span class="line"> &nbsp; &nbsp;<span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">"./media/video.mp4"</span> <span class="attr">type</span>=<span class="string">"video/mp4"</span>&gt;</span></span><br><span class="line"> &nbsp; &nbsp;<span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">"./media/video.ogg"</span> <span class="attr">type</span>=<span class="string">"video/ogg"</span>&gt;</span></span><br><span class="line"> &nbsp;<span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h3 id="1-6-3-新增-input-标签"><a href="#1-6-3-新增-input-标签" class="headerlink" title="1.6.3 新增 input 标签"></a>1.6.3 新增 input 标签</h3><p><img src="https://img-blog.csdnimg.cn/20191229133014181.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3d1eXhpbnU=,size_16,color_FFFFFF,t_70" alt="input标签"></p><h3 id="1-6-4-新增表单属性"><a href="#1-6-4-新增表单属性" class="headerlink" title="1.6.4 新增表单属性"></a>1.6.4 新增表单属性</h3><p><img src="https://img-blog.csdnimg.cn/20191229133048182.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3d1eXhpbnU=,size_16,color_FFFFFF,t_70" alt="表单属性"></p><h1 id="2-css-的基础"><a href="#2-css-的基础" class="headerlink" title="2. css 的基础"></a>2. css 的基础</h1><p>CSS是什么？CSS，即“Cascading Style Sheet（层叠样式表）”，是用来控制网页的外观的一门技术</p><h2 id="2-1-css的引入"><a href="#2-1-css的引入" class="headerlink" title="2.1 css的引入"></a>2.1 css的引入</h2><p>外部样式表、内部样式表、内联样式表</p><h3 id="2-1-1-外部样式表"><a href="#2-1-1-外部样式表" class="headerlink" title="2.1.1 外部样式表"></a>2.1.1 外部样式表</h3><p>把CSS代码和HTML代码都单独放在不同文件中，然后在HTML文档中使用link标签来引用CSS样式表</p><p>外部样式表都是在head标签内使用link标签来引用的</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"css文件路径"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h3 id="2-1-2-内部样式表"><a href="#2-1-2-内部样式表" class="headerlink" title="2.1.2 内部样式表"></a>2.1.2 内部样式表</h3><p>指的就是把CSS代码和HTML代码放在同一个文件中，其中CSS代码是放在<strong>标签对内的</strong></p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/1999/xhtml"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span> &nbsp;</span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span> &nbsp; &nbsp;</span><br><span class="line">    <span class="comment">&lt;!--这是内部样式表，CSS样式在style标签中定义--&gt;</span> &nbsp; &nbsp;</span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line"><span class="css"> &nbsp; &nbsp; &nbsp; &nbsp;  <span class="selector-tag">p</span>{<span class="attribute">color</span>:Red;} &nbsp; &nbsp; &nbsp;</span></span><br><span class="line"> &nbsp;  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span> &nbsp; </span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>绿叶学习网<span class="tag">&lt;/<span class="name">p</span>&gt;</span> &nbsp;</span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>绿叶学习网<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h3 id="2-1-3-内联样式表-行内式"><a href="#2-1-3-内联样式表-行内式" class="headerlink" title="2.1.3 内联样式表(行内式)"></a>2.1.3 内联样式表(行内式)</h3><p>也是把CSS代码和HTML代码放在同一个文件中，但是跟内部样式表不同，CSS样式不是在<style></style>标签对中定义，而是<strong>在标签的style属性中定义</strong></p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/1999/xhtml"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"> &nbsp;  <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"> &nbsp;  <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color:Red; "</span>&gt;</span>绿叶学习网<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"> &nbsp;  <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color:Red; "</span>&gt;</span>绿叶学习网<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"> &nbsp;  <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color:Red; "</span>&gt;</span>绿叶学习网<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="2-2-元素的id和class"><a href="#2-2-元素的id和class" class="headerlink" title="2.2 元素的id和class"></a>2.2 元素的id和class</h2><p>id属性是唯一的，class可以有多个<br><code>&lt;div id="first"&gt;绿叶学习网&lt;/div&gt;</code></p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"first"</span>&gt;</span>绿叶学习网<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"first"</span>&gt;</span>绿叶学习网<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="2-3-CSS选择器"><a href="#2-3-CSS选择器" class="headerlink" title="2.3 CSS选择器"></a>2.3 CSS选择器</h2><p>将想要的标签选中，然后再操作标签</p><p>选择器</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">选择器{</span><br><span class="line">    样式属性1:取值1;</span><br><span class="line">    样式属性2:取值2;</span><br><span class="line">    ……</span><br><span class="line">}</span><br><span class="line"><span class="comment">/*注释*/</span></span><br></pre></td></tr></tbody></table></figure><h3 id="2-3-1-基本选择器"><a href="#2-3-1-基本选择器" class="headerlink" title="2.3.1 基本选择器"></a>2.3.1 基本选择器</h3><h4 id="2-3-1-1-元素选择器"><a href="#2-3-1-1-元素选择器" class="headerlink" title="2.3.1.1 元素选择器"></a>2.3.1.1 元素选择器</h4><figure class="highlight"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> {<span class="attribute">width</span>:<span class="number">100px</span>; <span class="attribute">height</span>:<span class="number">100px</span>;}</span><br><span class="line">元素符号 {属性:属性值}</span><br></pre></td></tr></tbody></table></figure><h4 id="2-3-1-2-id选择器"><a href="#2-3-1-2-id选择器" class="headerlink" title="2.3.1.2 id选择器"></a>2.3.1.2 id选择器</h4><figure class="highlight"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#box</span> {<span class="attribute">width</span>:<span class="number">100px</span>}</span><br><span class="line">#id属性值 {属性:属性值}</span><br></pre></td></tr></tbody></table></figure><h4 id="2-3-1-3-class选择器"><a href="#2-3-1-3-class选择器" class="headerlink" title="2.3.1.3 class选择器"></a>2.3.1.3 class选择器</h4><figure class="highlight"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.red</span> {<span class="attribute">width</span>:<span class="number">100px</span>}</span><br><span class="line">.class属性值 {属性:属性值}</span><br></pre></td></tr></tbody></table></figure><h4 id="2-3-2-2-子元素选择器"><a href="#2-3-2-2-子元素选择器" class="headerlink" title="2.3.2.2 子元素选择器"></a>2.3.2.2 子元素选择器</h4><figure class="highlight"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#father1</span> <span class="selector-id">#p1</span> {<span class="attribute">color</span>:red;}</span><br><span class="line">#父元素选择 #子元素选择 {属性:属性值}</span><br><span class="line"></span><br><span class="line">&lt;div id="father1"&gt;</span><br><span class="line">    &lt;div id="p1"&gt;绿叶学习网&lt;/div&gt;</span><br><span class="line">    &lt;div&gt;绿叶学习网&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></tbody></table></figure><h4 id="2-3-2-5-相邻选择器"><a href="#2-3-2-5-相邻选择器" class="headerlink" title="2.3.2.5 相邻选择器"></a>2.3.2.5 相邻选择器</h4><figure class="highlight"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#lv</span> + <span class="selector-tag">div</span> {<span class="attribute">color</span>:red;}</span><br><span class="line">#元素a + 元素a相邻的兄弟元素 {属性:属性值}</span><br><span class="line"></span><br><span class="line">则是第三个<span class="selector-tag">div</span>文本为红色<span class="selector-tag">red</span></span><br><span class="line">&lt;div&gt;绿叶学习网&lt;/div&gt;</span><br><span class="line">&lt;div id="lv"&gt;</span><br><span class="line">    &lt;p&gt;绿叶学习网&lt;/p&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div&gt;绿叶学习网&lt;/div&gt;</span><br><span class="line">&lt;div&gt;绿叶学习网&lt;/div&gt;</span><br></pre></td></tr></tbody></table></figure><h4 id="2-3-2-6-群组选择器"><a href="#2-3-2-6-群组选择器" class="headerlink" title="2.3.2.6 群组选择器"></a>2.3.2.6 群组选择器</h4><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h3</span>,<span class="selector-tag">div</span>,<span class="selector-tag">p</span>,<span class="selector-tag">span</span> {<span class="attribute">color</span>:red;}</span><br></pre></td></tr></tbody></table></figure><h3 id="2-3-2-复合选择器"><a href="#2-3-2-复合选择器" class="headerlink" title="2.3.2 复合选择器"></a>2.3.2 复合选择器</h3><h4 id="2-3-2-1-后代选择器"><a href="#2-3-2-1-后代选择器" class="headerlink" title="2.3.2.1 后代选择器"></a>2.3.2.1 后代选择器</h4><figure class="highlight"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.class</span> <span class="selector-tag">h3</span> {</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">}</span><br><span class="line"><span class="selector-tag">h3</span>是<span class="selector-tag">div</span>的后代，<span class="selector-tag">div</span>的元素名为<span class="selector-tag">class</span></span><br><span class="line"></span><br><span class="line"><span class="selector-id">#father1</span> <span class="selector-id">#p1</span> {<span class="attribute">color</span>:red;}</span><br><span class="line">#父元素选择 #子元素选择 {属性:属性值}</span><br><span class="line"></span><br><span class="line">&lt;div id="father1"&gt;</span><br><span class="line">    &lt;div id="p1"&gt;绿叶学习网&lt;/div&gt;</span><br><span class="line">    &lt;div&gt;绿叶学习网&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></tbody></table></figure><h4 id="2-3-2-2-子元素选择器-1"><a href="#2-3-2-2-子元素选择器-1" class="headerlink" title="2.3.2.2 子元素选择器"></a>2.3.2.2 子元素选择器</h4><p><strong>只选择儿子</strong>，<strong>不会选择所有的后代</strong></p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 子代选择器 */</span></span><br><span class="line"><span class="selector-class">.class</span>&gt;<span class="selector-tag">h3</span> {</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="2-3-2-3-交集选择器"><a href="#2-3-2-3-交集选择器" class="headerlink" title="2.3.2.3 交集选择器"></a>2.3.2.3 交集选择器</h4><p>既是p标签 又是.red类 关系</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span><span class="selector-class">.red</span> {</span><br><span class="line">  <span class="attribute">color</span>:red;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="2-3-2-4-并集选择器-群组选择器"><a href="#2-3-2-4-并集选择器-群组选择器" class="headerlink" title="2.3.2.4 并集选择器(群组选择器)"></a>2.3.2.4 并集选择器(群组选择器)</h4><p>样式相同时，用并集选择</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span>,<span class="selector-tag">span</span>,<span class="selector-class">.red</span>,<span class="selector-id">#id</span> {</span><br><span class="line">  <span class="attribute">color</span>:red;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="2-3-2-5-链接伪类选择器"><a href="#2-3-2-5-链接伪类选择器" class="headerlink" title="2.3.2.5 链接伪类选择器"></a>2.3.2.5 链接伪类选择器</h4><h5 id="2-3-2-5-1-伪选择器"><a href="#2-3-2-5-1-伪选择器" class="headerlink" title="2.3.2.5.1 伪选择器"></a>2.3.2.5.1 伪选择器</h5><p>类选择器 <code>.demo</code><br>伪类选择器 <code>:demo</code><br>为链接添加一些特殊效果</p><h5 id="2-3-2-5-2-链接伪类选择器"><a href="#2-3-2-5-2-链接伪类选择器" class="headerlink" title="2.3.2.5.2 链接伪类选择器"></a>2.3.2.5.2 链接伪类选择器</h5><ul><li>a:link 未访问链接</li><li>a:visited 已访问链接</li><li>a:hover 鼠标移动到链接上</li><li>a:active 选定链接</li></ul><p>顺序不能颠倒：lvha<br>也算是交集选择器的变种<br>实际开发，都是先用一个总的a风格，然后只是写a:hover</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:link</span> {</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">}</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:visited</span> {</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#9ca7a5</span>;</span><br><span class="line">}</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> {</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">}</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:active</span> {</span><br><span class="line">  <span class="attribute">color</span>: green;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 子代选择，只是nav中的链接有hover样式 */</span></span><br><span class="line"><span class="selector-class">.nav</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> {</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="2-4-CSS的font文本样式"><a href="#2-4-CSS的font文本样式" class="headerlink" title="2.4 CSS的font文本样式"></a>2.4 CSS的font文本样式</h2><ul><li>font-family 字体名：微软雅黑等等<br><code>font-family:微软雅黑;</code> 还有 <code>宋体</code> <code>Times New Roman等等</code></li></ul><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h1</span> {</span><br><span class="line"><span class="attribute">color</span>: deeppink;</span><br><span class="line"><span class="attribute">font-size</span>: xx-large;</span><br><span class="line"><span class="attribute">font-family</span>: JetBrains Mono,<span class="string">"幼圆"</span>,<span class="string">"microsoft yahei"</span>,<span class="string">"微软雅黑"</span>;</span><br><span class="line"><span class="comment">/*多个字体用逗号隔开，从开始寻找字体：如果第一个没有，用第二个，如果都没有，用默认字体*/</span></span><br><span class="line"><span class="comment">/*中文字体需要引号，英文字体无特殊字符，不需要引号*/</span></span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">"\5FAE\8F6F\96C5\9ED1"</span>   <span class="comment">/*= 微软雅黑*/</span></span><br><span class="line">  <span class="comment">/*Unicode字体，可以查表*/</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li><p>font-size 字体大小: px/百分比/em<br><code>font-size:15px;</code> 一般都用px，像素</p></li><li><p>font-weight 字体粗细<br><code>font-weight:bold;</code> <code>normal</code> <code>100~900   400为normal，700为bold</code><br>用数字更好</p></li><li><p>font-style 字体斜体<br><code>font-style:italic;</code>斜体 <code>oblique</code>特殊字体（无italic变量） <code>normal</code>默认</p></li><li><p>color 颜色<br><code>color:blue;</code> <code>color:#000000;</code></p></li></ul><p><strong>综合性font语法</strong></p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.imporp</span> {</span><br><span class="line"><span class="attribute">font</span>: initial <span class="number">700</span> <span class="number">20px</span> <span class="string">"幼圆"</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">也就是:</span><br><span class="line"><span class="selector-class">.xuanze</span> {</span><br><span class="line">  <span class="attribute">font</span>: font-style font-weight font-size font-family;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="2-5-CSS的外观属性"><a href="#2-5-CSS的外观属性" class="headerlink" title="2.5 CSS的外观属性"></a>2.5 CSS的外观属性</h2><h3 id="2-5-1-color文本颜色"><a href="#2-5-1-color文本颜色" class="headerlink" title="2.5.1 color文本颜色"></a>2.5.1 color文本颜色</h3><ul><li>预定义颜色：red，green，blue，pink等等</li><li>十六进制：#FF0000，#000000黑色，#ffffff白色，#ff0000红色<ul><li>简写：#ccc   由 #cccccc简写，两两相同</li></ul></li><li>RGB颜色：<code>rgb(255,0,0)</code> <code>rgb(100%,0%,0%)</code></li></ul><h3 id="2-5-2-文本水平对齐方式"><a href="#2-5-2-文本水平对齐方式" class="headerlink" title="2.5.2 文本水平对齐方式"></a>2.5.2 文本水平对齐方式</h3><p><code>text-align:</code><br>left 左对齐（默认）<br>right 右对齐<br>center 居中对齐</p><h3 id="2-5-3-行间距"><a href="#2-5-3-行间距" class="headerlink" title="2.5.3 行间距"></a>2.5.3 行间距</h3><p><code>line-height:</code><br>em 百分比 px<br>一般用像素px，作为单位，一般行距比字号大7、8像素</p><h3 id="2-5-4-首行缩进"><a href="#2-5-4-首行缩进" class="headerlink" title="2.5.4 首行缩进"></a>2.5.4 首行缩进</h3><p><code>text-indent:</code> ， em为常用单位<br>为字符单位的倍数，如1em为一个字的宽度</p><h3 id="2-5-5-文本的装饰"><a href="#2-5-5-文本的装饰" class="headerlink" title="2.5.5 文本的装饰"></a>2.5.5 文本的装饰</h3><p><code>text-decoration:</code> 去掉连接下划线<br>none 默认，无装饰<br>blink 闪烁<br>underline 下划线<br>line-through 删除线<br>overline 上划线</p><h2 id="2-6-标签的显示模式"><a href="#2-6-标签的显示模式" class="headerlink" title="2.6 标签的显示模式"></a>2.6 标签的显示模式</h2><p><strong>这节是重点</strong></p><h3 id="2-6-1-标签的显示模式"><a href="#2-6-1-标签的显示模式" class="headerlink" title="2.6.1 标签的显示模式"></a>2.6.1 标签的显示模式</h3><p>div只能自己占一行，可以把多个span放到一行，a链接也可以一行放多个</p><p>块标签和行标签</p><h3 id="2-6-2-块级元素"><a href="#2-6-2-块级元素" class="headerlink" title="2.6.2 块级元素"></a>2.6.2 块级元素</h3><p><code>block-level</code></p><p>h1~h6、p、div、ul、ol、li等，div是典型</p><ul><li>高度、宽度、外边距、内边距都可以控制（可以自己设置）</li><li>宽度默认为容器（父级宽度）的100%</li><li>里面可以放行内或者块级元素</li><li>p、h1~h6、dt不能放块级元素，p不能放div</li></ul><h3 id="2-6-3-行内元素"><a href="#2-6-3-行内元素" class="headerlink" title="2.6.3 行内元素"></a>2.6.3 行内元素</h3><p><code>inline-level</code></p><p>a、strong、b、em、i、del、s、ins、u、span等，span典型</p><ul><li>相邻行内元素再一行上、一行可以显示多个</li><li>高宽不能直接设置</li><li>默认宽度就是它本身的宽度,与文本内容多少有关</li><li>行内元素只能容纳文本或者其他行内元素</li><li>链接里面不能再含有链接</li><li>特殊情况：a内可以放块级元素，但给a转换一下块级模式更加安全</li></ul><h3 id="2-6-4-行内块元素"><a href="#2-6-4-行内块元素" class="headerlink" title="2.6.4 行内块元素"></a>2.6.4 行内块元素</h3><p><code>inline-block</code></p><p>img、input表单类、td单元格等，可以对他们设置宽高和对齐属性</p><ul><li>和相邻的行内元素在一行上、但会有空白缝隙，一行可以显示多个</li><li>默认宽度和高度是本身内容的宽度</li><li>高度、行高、外边距、内边距可以控制</li></ul><h3 id="2-6-5-显示模式转换display"><a href="#2-6-5-显示模式转换display" class="headerlink" title="2.6.5 显示模式转换display"></a>2.6.5 显示模式转换display</h3><ul><li>块转换为行：<code>display:inline;</code></li><li>行转换为块：<code>display:block;</code></li><li>块、行转换为行内块：<code>display:inline-block</code></li></ul><h2 id="2-7-行高line-height"><a href="#2-7-行高line-height" class="headerlink" title="2.7 行高line-height"></a>2.7 行高line-height</h2><p>可以间接让文字垂直居中</p><h3 id="2-7-1-行高测量"><a href="#2-7-1-行高测量" class="headerlink" title="2.7.1 行高测量"></a>2.7.1 行高测量</h3><p>行高测量：有英文的话基线与基线间的距离、中文可以直接量底线<br><img src="/img/hcj/hgcl.png" alt="行高测量"></p><h3 id="2-7-2-单行文本垂直居中"><a href="#2-7-2-单行文本垂直居中" class="headerlink" title="2.7.2 单行文本垂直居中"></a>2.7.2 单行文本垂直居中</h3><p>上距离+文字高度+下距离 = 块高</p><p><strong>行高</strong><br><strong>等于高度</strong>，<strong>文字垂直居中</strong><br>大于高度，文字偏下<br>小于高度，文字偏上</p><h2 id="2-8-CSS背景background"><a href="#2-8-CSS背景background" class="headerlink" title="2.8 CSS背景background"></a>2.8 CSS背景background</h2><h3 id="2-8-1-背景颜色color"><a href="#2-8-1-背景颜色color" class="headerlink" title="2.8.1 背景颜色color"></a>2.8.1 背景颜色color</h3><p><code>-color:</code><br>transparent透明色–默认透明</p><h3 id="2-8-2-背景图片image"><a href="#2-8-2-背景图片image" class="headerlink" title="2.8.2 背景图片image"></a>2.8.2 背景图片image</h3><p><code>background-image: url(images/1.jpg)</code><br>默认url为none,url中的地址不用加引号</p><h3 id="2-8-3-背景平铺repeat"><a href="#2-8-3-背景平铺repeat" class="headerlink" title="2.8.3 背景平铺repeat"></a>2.8.3 背景平铺repeat</h3><p><code>background-repeat:</code><br>默认repeat 平铺<br>no-repeat 不平铺<br>repeat-x 横向平铺<br>repeat-y 纵向平铺</p><h3 id="2-8-4-背景位置position（重点）"><a href="#2-8-4-背景位置position（重点）" class="headerlink" title="2.8.4 背景位置position（重点）"></a>2.8.4 背景位置position（重点）</h3><p><code>background-position:</code><br>length 百分数，浮点数子和单位标识符组成的长度值<br>position后面是完整的位置坐标，可以加方位名词或者数字</p><ul><li>方位名词：<code>right top;</code> 右上角,,left,bottom,center<ul><li><code>left top</code> 与 <code>top left</code>效果相同，顺序无关</li><li>只写一个的话，另一个默认居中</li></ul></li></ul><p>常用的超大背景图片<code>center top</code></p><ul><li>数字坐标： <code>x坐标 y坐标;</code>,如<code>10px 50px;</code><ul><li>第一个为x坐标，第二个为y坐标，顺序有关</li><li>只给一个值，则默认为x坐标，另一个默认居中</li><li>如果精确和方位混合使用，则精确值第一个为x，第二个为y</li></ul></li></ul><h3 id="2-8-5-背景附着"><a href="#2-8-5-背景附着" class="headerlink" title="2.8.5 背景附着"></a>2.8.5 背景附着</h3><p><code>background-attachment:</code><br><code>scroll</code> 滚动<br><code>fixed</code> 固定</p><h3 id="2-8-6-背景简写"><a href="#2-8-6-背景简写" class="headerlink" title="2.8.6 背景简写"></a>2.8.6 背景简写</h3><p><code>background: transparent url(image.jpg) repeat-y scroll center top;</code><br><code>background:</code>背景颜色 图片地址 背景平铺 背景滚动 背景位置;</p><h3 id="2-8-7-背景透明（CSS3）"><a href="#2-8-7-背景透明（CSS3）" class="headerlink" title="2.8.7 背景透明（CSS3）"></a>2.8.7 背景透明（CSS3）</h3><p>黑色半透明，rgba(red,green,blue,alpha)<br>alpha：透明度0~1</p><p><code>background: rgba(0,0,0,0.3);</code></p><ul><li>简略显示<code>rgba(0,0,0,.3)</code></li><li>半透明只是盒子半透明，内容不受影响</li></ul><h2 id="2-9-CSS三大特性"><a href="#2-9-CSS三大特性" class="headerlink" title="2.9 CSS三大特性"></a>2.9 CSS三大特性</h2><h3 id="2-9-1-CSS层叠性"><a href="#2-9-1-CSS层叠性" class="headerlink" title="2.9.1 CSS层叠性"></a>2.9.1 CSS层叠性</h3><p>通俗：前面有一个div属性，后面再写一个一样的，则会使用后面的</p><ul><li>就近原则，那个样式离着结构近，就执行那个样式</li><li>样式不冲突，不会层叠</li></ul><h3 id="2-9-2-CSS继承性"><a href="#2-9-2-CSS继承性" class="headerlink" title="2.9.2 CSS继承性"></a>2.9.2 CSS继承性</h3><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">div {</span><br><span class="line">  color: red;</span><br><span class="line">}</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>内容<span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>p中的内容也是red红色</p><ul><li>恰当的使用继承可以让代码更加简洁</li><li>text-，font-，line-，只有这些元素可以继承</li></ul><h3 id="2-9-3-CSS优先级（重点）"><a href="#2-9-3-CSS优先级（重点）" class="headerlink" title="2.9.3 CSS优先级（重点）"></a>2.9.3 CSS优先级（重点）</h3><p>同一元素上有不同的规则</p><ul><li>选择器相同，执行就近原则（层叠性）</li><li>选择器不同，如一个<code>div</code>，一个<code>.class</code>，两个选择器，选择<code>.class</code></li></ul><h4 id="2-9-3-1-权重计算公式"><a href="#2-9-3-1-权重计算公式" class="headerlink" title="2.9.3.1 权重计算公式"></a>2.9.3.1 权重计算公式</h4><table><thead><tr><th>选择器</th><th>计算权重公式</th></tr></thead><tbody><tr><td>继承或者*</td><td>0,0,0,0</td></tr><tr><td>每个元素标签选择器</td><td>0,0,0,1</td></tr><tr><td>每个元素类选择器.</td><td>0,0,1,0</td></tr><tr><td>每个元素id选择器#</td><td>0,1,0,0</td></tr><tr><td>每个元素行内选择器style</td><td>1,0,0,0</td></tr><tr><td>直接用!important</td><td>权重最高</td></tr></tbody></table><p>最高权重的用法</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> {</span><br><span class="line">  <span class="attribute">color</span>: red<span class="meta">!important</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><strong>只要是继承权重一定为0</strong></p><ul><li>如果该标签被选中，则比较权重</li><li>如果标签没有被选中，则始终为0</li></ul><h4 id="2-9-3-2-权重计算叠加"><a href="#2-9-3-2-权重计算叠加" class="headerlink" title="2.9.3.2 权重计算叠加"></a>2.9.3.2 权重计算叠加</h4><p>交集选择器、后代选择器会出现权重叠加<br>如：</p><ul><li><code>div ul li</code>   0,0,0,3</li><li><code>.nav ul li</code>  0,0,1,2</li><li><code>a:hover</code>  0,0,1,1</li><li><code>.nav a</code>  0,0,1,1</li></ul><h2 id="2-10-盒子模型（CSS重点）"><a href="#2-10-盒子模型（CSS重点）" class="headerlink" title="2.10 盒子模型（CSS重点）"></a>2.10 盒子模型（CSS重点）</h2><h3 id="2-10-1-盒子模型介绍"><a href="#2-10-1-盒子模型介绍" class="headerlink" title="2.10.1 盒子模型介绍"></a>2.10.1 盒子模型介绍</h3><p>网页布局本质</p><ul><li>设置好各个盒子的大小，摆放好盒子的位置</li><li>然后放内容（图片，文字等等）</li></ul><p><strong>盒子模型Box Model</strong></p><ul><li>盒子组成四部分：Border厚度（边缘），content内容，Padding内边距，Margin盒子与盒子间的距离（外边距）</li></ul><p><img src="/img/hcj/boxmodel.png" alt="盒子模型"></p><h3 id="2-10-2-盒子边框border"><a href="#2-10-2-盒子边框border" class="headerlink" title="2.10.2 盒子边框border"></a>2.10.2 盒子边框border</h3><p>综合性写法：<code>border: 1px solid pink;</code>没有顺序 </p><p><code>border-width:</code> 默认medium，边框宽度px<br><code>border-style:</code> 边框样式，none，hidden，dotted点线，dashed虚线，<strong>solid实线</strong><br><code>border-color:</code> 颜色</p><h4 id="2-10-2-1-边框分开写"><a href="#2-10-2-1-边框分开写" class="headerlink" title="2.10.2.1 边框分开写"></a>2.10.2.1 边框分开写</h4><p><code>border-top:</code> 上边框综合写法，具体写<code>border-top-width</code>等等<br><code>border-bottom:</code> 下边框<br><code>border-right:</code> 右边框<br><code>border-left:</code> 左边框</p><p>例子</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span> {</span><br><span class="line">  <span class="comment">/* border-top: none;</span></span><br><span class="line"><span class="comment">  border-left: none;</span></span><br><span class="line"><span class="comment">  border-right: none;</span></span><br><span class="line"><span class="comment">  border-bottom: 1px dashed pink;</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">  <span class="attribute">border</span>: none;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">1px</span> dashed red;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">用户名: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span></span><br><span class="line">密码： <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h4 id="2-10-2-2-表格的细线边框"><a href="#2-10-2-2-表格的细线边框" class="headerlink" title="2.10.2.2 表格的细线边框"></a>2.10.2.2 表格的细线边框</h4><p>表格的两个单元格在重合时会发生重叠，从而使得边框变粗</p><p>合并单元格：<code>table {border-collapse:collapse;}</code><br>相邻边框合并在一起，而不会变粗</p><h3 id="2-10-3-盒子内边距padding"><a href="#2-10-3-盒子内边距padding" class="headerlink" title="2.10.3 盒子内边距padding"></a>2.10.3 盒子内边距padding</h3><p>单位px<br><code>padding-left:</code><br><code>padding-right:</code><br><code>padding-top:</code><br><code>padding-bottom:</code></p><ul><li>内容和边框有了距离</li><li>添加内边距，盒子会变大</li><li>简写：<br><code>padding: 20px;</code> 解释：上下左右都是20px的内边距<br><code>padding: 10px 20px;</code>  上下10px，左右20px<br><code>padding: 10px 20px 30px;</code> 上10px，左右20px，下30px<br><code>padding: 10px 20px 30px 40px;</code> 上10 ，右20，下30，左40，顺时针</li></ul><hr><p><img src="/img/hcj/xldh.png" alt="新浪导航"></p><p>给盒子指定一个padding而不给宽度，实现不同内容，不同宽度</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>xl<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-class">.nav</span> {</span></span><br><span class="line">height: 41px;</span><br><span class="line">background-color: rgb(252, 252, 252);</span><br><span class="line"><span class="css"><span class="selector-tag">border-top</span>: 4<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#dd5600</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">border-bottom</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#edefec</span>;</span></span><br><span class="line">}</span><br><span class="line"><span class="css"><span class="selector-class">.nav</span> <span class="selector-tag">a</span> {</span></span><br><span class="line">display: inline-block;</span><br><span class="line">height: 41px;</span><br><span class="line"><span class="css"><span class="comment">/* background-color: pink; */</span></span></span><br><span class="line">text-decoration: none;</span><br><span class="line">padding: 0px 20px;</span><br><span class="line">line-height: 41px;</span><br><span class="line"><span class="css"><span class="selector-tag">color</span>: <span class="selector-id">#4c4c4c</span>;</span></span><br><span class="line">font-size: 12px;</span><br><span class="line">}</span><br><span class="line"><span class="css"><span class="selector-class">.nav</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> {</span></span><br><span class="line"><span class="css"><span class="selector-tag">background-color</span>: <span class="selector-id">#eaedea</span>;</span></span><br><span class="line">}</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"nav"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>设为首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>手机新浪网<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>移动客户端<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>博客<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>微博<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>关注我<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><hr><p><strong>盒子模型的计算</strong></p><p><img src="/img/hcj/boxmodel.png" alt="盒子模型"></p><p><strong>盒子的实际大小 = 内容宽度 高度 + 内边距 + 边框</strong></p><ul><li><code>padding: 10px</code>会把盒子的宽高各增加20px</li><li>解决方法： 要让盒子保持原大小，则要修改width，height，减去内边距即可</li></ul><p>特殊情况：padding不会撑开的情况<br>如果这个盒子没有宽度，则padding不会撑开盒子，盒子内的盒子不会撑开盒子</p><h3 id="2-10-4-盒子的外边距margin"><a href="#2-10-4-盒子的外边距margin" class="headerlink" title="2.10.4 盒子的外边距margin"></a>2.10.4 盒子的外边距margin</h3><p><code>margin-left:</code><br><code>margin-right:</code><br><code>margin-top:</code><br><code>margin-bottom:</code><br>简写，与padding一样<br><code>margin: 10px</code> 上下左右</p><h4 id="2-10-4-1-块级盒子居中对齐"><a href="#2-10-4-1-块级盒子居中对齐" class="headerlink" title="2.10.4.1 块级盒子居中对齐"></a>2.10.4.1 块级盒子居中对齐</h4><p>居中对齐：有宽度、左右外边距设为<code>auto</code></p><ul><li><p>第一种写法<br><code>width: 600px;</code><br><code>margin-left: auto;</code><br><code>margin-right: auto;</code></p></li><li><p>第二种写法<br><code>margin: auto;</code></p></li><li><p>第三种写法<br><code>margin: 0 auto;</code><br>上下为<code>0</code> ，左右<code>auto</code></p></li></ul><h4 id="2-10-4-2-文字居中，盒子居中"><a href="#2-10-4-2-文字居中，盒子居中" class="headerlink" title="2.10.4.2 文字居中，盒子居中"></a>2.10.4.2 文字居中，盒子居中</h4><ul><li><p>文字水平居中：<code>text-aligh: center;</code><br>也可以让行内元素和行内块元素居中对齐</p></li><li><p>盒子水平居中：<code>margin: 10px auto;</code></p></li></ul><h4 id="2-10-4-3-插入图片和背景图片"><a href="#2-10-4-3-插入图片和背景图片" class="headerlink" title="2.10.4.3 插入图片和背景图片"></a>2.10.4.3 插入图片和背景图片</h4><p>通常用插入图片</p><ul><li>插入图片<code>&lt;img src="url" alt=""&gt;</code><br>移动位置只能通过盒模型<code>padding</code>或<code>margin</code>值来移动</li></ul><p>背景图片很少用，小图标或者超大背景</p><ul><li>背景图片<code>background-image: url(url);</code><br>移动位置只能用<code>background-position: x,y;</code></li></ul><h4 id="2-10-4-4-清除元素默认的内外边距（写css第一句代码，很重要）"><a href="#2-10-4-4-清除元素默认的内外边距（写css第一句代码，很重要）" class="headerlink" title="2.10.4.4 清除元素默认的内外边距（写css第一句代码，很重要）"></a>2.10.4.4 清除元素默认的内外边距（写css第一句代码，很重要）</h4><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">* {</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li>一些元素有默认的内外边距，要美观就要删掉</li><li><strong>行内标签，尽量只设置左右内外边距，不设置上下内外边距（不管用）</strong></li></ul><h4 id="2-10-4-5-外边距合并"><a href="#2-10-4-5-外边距合并" class="headerlink" title="2.10.4.5 外边距合并"></a>2.10.4.5 外边距合并</h4><ol><li><ul><li>相邻块元素垂直外边距合并，取两个值中的较大值（外边距塌陷）</li><li>解决方法：尽量只给一个盒子添加margin值</li></ul></li><li><ul><li>嵌套关系的垂直外边距合并，（塌陷）父子级关系，给儿子一个margin，父亲也会有margin</li><li>解决方案<ul><li>为父元素指定外边框<code>border-top:</code></li><li>为父元素指定一个上<code>padding-top:</code></li><li>为父元素添加<code>overflow: hidden;</code></li></ul></li></ul></li></ol><h4 id="2-10-4-6-盒子模型的布局稳定性"><a href="#2-10-4-6-盒子模型的布局稳定性" class="headerlink" title="2.10.4.6 盒子模型的布局稳定性"></a>2.10.4.6 盒子模型的布局稳定性</h4><p>优先级使用，先宽度width，然后内边距padding，最后外边距margin</p><h3 id="2-10-5-盒子综合案例"><a href="#2-10-5-盒子综合案例" class="headerlink" title="2.10.5 盒子综合案例"></a>2.10.5 盒子综合案例</h3><p><img src="/img/hcj/boxlizi.png" alt="盒子综合案例"></p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>盒子综合案例<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">* {</span><br><span class="line">padding: 0;</span><br><span class="line">margin: 0;</span><br><span class="line">}</span><br><span class="line"><span class="css"><span class="selector-class">.box</span> {</span></span><br><span class="line">width: 298px;</span><br><span class="line">height: 198px;</span><br><span class="line"><span class="css"><span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#ccc</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">margin</span>: 100<span class="selector-tag">px</span> <span class="selector-tag">auto</span>; <span class="comment">/* 水平居中 */</span></span></span><br><span class="line">background: url(../images/1.ico);</span><br><span class="line">padding: 15px;</span><br><span class="line">}</span><br><span class="line"><span class="css"><span class="selector-class">.box</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> {</span></span><br><span class="line"><span class="css"><span class="comment">/* 去掉列表样式 */</span></span></span><br><span class="line">list-style: none;</span><br><span class="line">height: 30px;</span><br><span class="line"><span class="css"><span class="selector-tag">border-bottom</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">dashed</span> <span class="selector-id">#ccc</span>;</span></span><br><span class="line">line-height: 30px;</span><br><span class="line">background: url(../images/1.ico) no-repeat 5px center;</span><br><span class="line"><span class="css"><span class="comment">/* background-position: 5px center; */</span></span></span><br><span class="line">padding-left: 20px;</span><br><span class="line">}</span><br><span class="line"><span class="css"><span class="selector-class">.box</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span> {</span></span><br><span class="line">text-decoration: none;</span><br><span class="line">font-size: 12px;</span><br><span class="line"><span class="css"><span class="selector-tag">color</span>: <span class="selector-id">#2a2a29</span>;</span></span><br><span class="line"><span class="css"><span class="comment">/* margin-left: 20px; */</span></span></span><br><span class="line"><span class="css"><span class="comment">/* padding-left: 20px; */</span></span></span><br><span class="line">}</span><br><span class="line"><span class="css"><span class="selector-class">.box</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> {</span></span><br><span class="line">text-decoration: underline;</span><br><span class="line">}</span><br><span class="line"><span class="css"><span class="selector-class">.box</span> <span class="selector-tag">h2</span> {</span></span><br><span class="line">font-size: 18px;</span><br><span class="line">padding: 5px 0;</span><br><span class="line"><span class="css"><span class="selector-tag">border-bottom</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#ccc</span>;</span></span><br><span class="line">margin-bottom: 10px;</span><br><span class="line">}</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>最新文章/New Articles<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>北京招聘<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>体验js<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>jquery<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>网页设计师<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>链式编程<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p><strong>去掉列表默认的样式（前面的小点）</strong><br>无序列表和有序列表列表样式在不同浏览器显示样式不一样所以去掉<br><code>li { list-style: none; }</code></p><h3 id="2-10-6-拓展CSS3"><a href="#2-10-6-拓展CSS3" class="headerlink" title="2.10.6 拓展CSS3"></a>2.10.6 拓展CSS3</h3><h4 id="2-10-6-1-边框圆角"><a href="#2-10-6-1-边框圆角" class="headerlink" title="2.10.6.1 边框圆角"></a>2.10.6.1 边框圆角</h4><p><code>border-radius: length</code><br>length可以为数值或百分比</p><p>横向矩形为高度一般设置为高度的一半</p><h4 id="2-10-6-2-盒子阴影"><a href="#2-10-6-2-盒子阴影" class="headerlink" title="2.10.6.2 盒子阴影"></a>2.10.6.2 盒子阴影</h4><p><code>box-shadow: 水平阴影 垂直阴影 模糊距离(虚实) 阴影尺寸(大小) 阴影颜色 内外阴影</code><br><code>h-shadow v-shadow</code>前两个必须写<br><code>blur spread color inset</code>可以省略<br>内外阴影默认为outset，且不用写</p><p><code>美观的</code> <code>box-shadow: 0 15px 30px rgba(0,0,0,.3);</code></p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">width</span>: 300<span class="selector-tag">px</span>;</span><br><span class="line"><span class="selector-tag">height</span>: 300<span class="selector-tag">px</span>;</span><br><span class="line"><span class="selector-tag">background-color</span>: <span class="selector-tag">pink</span>;</span><br><span class="line"><span class="selector-tag">margin-left</span>: <span class="selector-tag">auto</span>;</span><br><span class="line"><span class="selector-tag">margin-right</span>: <span class="selector-tag">auto</span>;</span><br><span class="line"><span class="selector-tag">text-align</span>: <span class="selector-tag">center</span>;</span><br><span class="line"><span class="comment">/* border-radius: 150px; */</span></span><br><span class="line"><span class="selector-tag">border-radius</span>: 20%;</span><br><span class="line"><span class="selector-tag">box-shadow</span>: 2<span class="selector-tag">px</span> 2<span class="selector-tag">px</span> 2<span class="selector-tag">px</span> 2<span class="selector-tag">px</span> <span class="selector-id">#000</span> ;</span><br></pre></td></tr></tbody></table></figure><p><img src="/img/hcj/shadow.png" alt="picture"></p><h2 id="2-11-CSS书写规范"><a href="#2-11-CSS书写规范" class="headerlink" title="2.11 CSS书写规范"></a>2.11 CSS书写规范</h2><p><strong>空格规范</strong></p><ul><li><code>选择器</code>与<code>{}</code>之间有空格</li><li>属性的<code>冒号</code>跟<code>值</code>有空格</li></ul><p><strong>选择器规范</strong></p><ul><li>并集选择器竖着写</li><li>花括号对齐</li><li>选择器嵌套层数最好不超过3级</li></ul><p><strong>属性规范</strong></p><ul><li>属性必须另起一行</li><li>属性定义后必须有<code>;</code>结束</li></ul><h3 id="2-11-1-CSS属性书写顺序（重点）"><a href="#2-11-1-CSS属性书写顺序（重点）" class="headerlink" title="2.11.1 CSS属性书写顺序（重点）"></a>2.11.1 CSS属性书写顺序（重点）</h3><p>按照顺序书写</p><ol><li>布局定位属性：<code>display / position / float / clear / visibility / overflow</code> （display第一个写）</li><li>自身属性： <code>width / height / margin / padding / border / background /</code></li><li>文本属性： <code>color / font / text-decoration / text-align / vertical-align / white-space / break-word</code></li><li>其他属性（CSS3）： <code>content / cursor / border-radius / box-shadow / text-shadow / background:linear-gradient ...</code> </li></ol><h2 id="2-12-浮动float"><a href="#2-12-浮动float" class="headerlink" title="2.12 浮动float"></a>2.12 浮动float</h2><p>布局页面</p><h3 id="2-12-1-CSS布局的三种机制"><a href="#2-12-1-CSS布局的三种机制" class="headerlink" title="2.12.1 CSS布局的三种机制"></a>2.12.1 CSS布局的三种机制</h3><p>网页布局的核心就是用CSS来摆放盒子</p><p>三种方法：</p><ul><li>普通流</li></ul><p>块级元素会独占一行，从上向下顺序排序<br><code>div、hr、p、h1~h6、ul、ol、dl、form、table</code></p><p>行内元素会多个在一行内显示，从左到右，碰到父元素边缘自动换行<br><code>span、a、i、em</code></p><ul><li>浮动流</li></ul><p>让盒子从普通流中浮动起来，主要作用让多个块级盒子一行显示</p><ul><li>定位流</li></ul><p>将盒子定在浏览器中的某一个位置，CSS离不开定位，特别是后面的js特效</p><h3 id="2-12-2-浮动"><a href="#2-12-2-浮动" class="headerlink" title="2.12.2 浮动"></a>2.12.2 浮动</h3><h4 id="1-为什么用浮动？？？"><a href="#1-为什么用浮动？？？" class="headerlink" title="1. 为什么用浮动？？？"></a><strong>1. 为什么用浮动？？？</strong></h4><ul><li>让多个盒子水平排列成一行</li></ul><p> 行内块也可以让多个块水平排列在一行<code>display: inline-block</code>，<strong>但中间会有一个空隙，而且很难去掉，也不能简单地调整空隙大小,但浮动可以实现</strong></p><ul><li>实现盒子的左右对齐</li></ul><h4 id="2-什么是浮动？？？"><a href="#2-什么是浮动？？？" class="headerlink" title="2. 什么是浮动？？？"></a><strong>2. 什么是浮动？？？</strong></h4><p>设置了浮动属性地元素：</p><ul><li>脱离标准普通流地控制</li><li>移动到指定地位置</li></ul><h4 id="3-浮动的作用："><a href="#3-浮动的作用：" class="headerlink" title="3. 浮动的作用："></a><strong>3. 浮动的作用</strong>：</h4><ul><li>让多个盒子div水平排列成一行</li><li>可以实现盒子地左右对齐</li><li>最早是用来控制图片，实现<strong>文字环绕图片</strong>的效果</li></ul><h4 id="4-浮动的语法"><a href="#4-浮动的语法" class="headerlink" title="4. 浮动的语法"></a><strong>4. 浮动的语法</strong></h4><p>float属性定义浮动</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">选择器 {</span><br><span class="line">  <span class="attribute">float</span>: none</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/* none 、 left 、 right  */</span></span><br><span class="line"><span class="comment">/* 不浮动 、 左浮 、 右浮 */</span></span><br></pre></td></tr></tbody></table></figure><h4 id="5-浮动的口诀"><a href="#5-浮动的口诀" class="headerlink" title="5. 浮动的口诀"></a><strong>5. 浮动的口诀</strong></h4><p><strong>浮</strong><br>漂浮在普通流的上面，脱离标准流，<em>脱标</em><br>float让盒子漂浮在标准流的上面，所以第二个标准流的盒子跑到浮动盒子的地下</p><p><img src="/img/hcj/float.png" alt="浮动"></p><p><strong>漏</strong><br>浮动的盒子原来的位置留给下面标准流的盒子，不占有原来的位置</p><p><strong>特</strong><br>float特性，float会改变元素的display属性<br>任何元素都可以浮动，浮动的元素会生成一个块级框，而不论他本身是什么元素，生成的块级框跟行内块相似</p><p>两个块元素都给上float属性，会都转化为<strong>行内块元素，而且中间没有空隙</strong></p><p><strong>浮动的盒子会相互靠在一起，如果父级宽度装不下这些浮动的盒子，多出的盒子会另起一行对齐</strong></p><h4 id="6-浮动的应用-重点"><a href="#6-浮动的应用-重点" class="headerlink" title="6. 浮动的应用(重点)"></a><strong>6. 浮动的应用(重点)</strong></h4><p>浮动流和标准流的父盒子的搭配<br>先给定一个标准流的父级盒子，然后浮动流在标准流中浮动<br><strong>完整的网页 = 标准流 + 浮动 + 定位</strong></p><p><img src="/img/hcj/floatex1.png" alt="浮动案例"></p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Float<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">* {</span><br><span class="line">padding: 0;</span><br><span class="line">margin: 0;</span><br><span class="line">}</span><br><span class="line"><span class="css"><span class="selector-class">.box</span> {</span></span><br><span class="line">width: 1226px;</span><br><span class="line">height: 615px;</span><br><span class="line"><span class="css"><span class="selector-tag">background-color</span>: <span class="selector-id">#CCCCCC</span>;</span></span><br><span class="line">margin: auto;</span><br><span class="line">margin-top: 30px;</span><br><span class="line">}</span><br><span class="line"><span class="css"><span class="selector-class">.left</span> {</span></span><br><span class="line">width: 234px;</span><br><span class="line">height: 615px;</span><br><span class="line"><span class="css"><span class="selector-tag">background-color</span>: <span class="selector-id">#f7ebcd</span>;</span></span><br><span class="line">float: left;</span><br><span class="line">}</span><br><span class="line"><span class="css"><span class="selector-class">.left</span> <span class="selector-tag">img</span> {</span></span><br><span class="line">width: 234px;</span><br><span class="line">}</span><br><span class="line"><span class="css"><span class="selector-class">.right</span> {</span></span><br><span class="line">width: 992px;</span><br><span class="line">height: 615px;</span><br><span class="line">background-color: skyblue;</span><br><span class="line">float: right;</span><br><span class="line">}</span><br><span class="line"><span class="css"><span class="selector-class">.right</span> <span class="selector-tag">li</span> {</span></span><br><span class="line"><span class="css"><span class="comment">/* 清除列表样式 */</span></span></span><br><span class="line">list-style: none;</span><br><span class="line">width: 234px;</span><br><span class="line">height: 300px;</span><br><span class="line">background-color: pink;</span><br><span class="line">float: left;</span><br><span class="line">margin-left: 14px;</span><br><span class="line">margin-bottom: 14px;</span><br><span class="line">}</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../images/1.ico"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>4<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>5<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>6<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>7<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>8<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p><img src="/img/hcj/floatex2.png" alt="浮动导航栏案例"></p><p><strong>导航栏用li+a搭配更好</strong></p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>导航栏<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">* {</span><br><span class="line">padding: 0;</span><br><span class="line">margin: 0;</span><br><span class="line">}</span><br><span class="line">li {</span><br><span class="line">list-style: none;</span><br><span class="line">}</span><br><span class="line"><span class="css"><span class="selector-class">.banner</span> {</span></span><br><span class="line">width: 760px;</span><br><span class="line">height: 150px;</span><br><span class="line"><span class="css"><span class="selector-tag">background-color</span>: <span class="selector-id">#CCCCCC</span>;</span></span><br><span class="line">margin: auto;</span><br><span class="line">}</span><br><span class="line"><span class="css"><span class="selector-class">.banner</span> <span class="selector-tag">img</span> {</span></span><br><span class="line">width: 760px;</span><br><span class="line">}</span><br><span class="line"><span class="css"><span class="selector-class">.nav</span> {</span></span><br><span class="line">width: 760px;</span><br><span class="line">height: 32px;</span><br><span class="line">background-color: pink;</span><br><span class="line">margin: 0 auto;</span><br><span class="line">background-image: url(../images/dhl.png) ;</span><br><span class="line">background-repeat: repeat-x;</span><br><span class="line">}</span><br><span class="line"><span class="css"><span class="selector-class">.nav</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> {</span></span><br><span class="line">float: left;</span><br><span class="line">}</span><br><span class="line"><span class="css"><span class="comment">/* 可以给a和li大小,但是a要求hover,所以要直接给a大小 */</span></span></span><br><span class="line"><span class="css"><span class="selector-class">.nav</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span> {</span></span><br><span class="line">text-decoration: none;</span><br><span class="line">display: block;</span><br><span class="line">width: 80px;</span><br><span class="line">height: 32px;</span><br><span class="line">background: url(../images/banner0.png) no-repeat; </span><br><span class="line"></span><br><span class="line">line-height: 32px;</span><br><span class="line">text-align: center;</span><br><span class="line"></span><br><span class="line"><span class="css"><span class="selector-tag">color</span>: <span class="selector-id">#3b4300</span>;</span></span><br><span class="line">font-size: 12px;</span><br><span class="line">}</span><br><span class="line"><span class="css"><span class="selector-class">.nav</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> {</span></span><br><span class="line">background: url(../images/banner1.png) no-repeat;</span><br><span class="line">}</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- banner广告条 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"banner"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../images/banner.png"</span> &gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"nav"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 重要的导航栏用li+a的写法 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>网站首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>网站首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>网站首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>网站首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>网站首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>网站首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h4 id="7-浮动的扩展"><a href="#7-浮动的扩展" class="headerlink" title="7. 浮动的扩展"></a><strong>7. 浮动的扩展</strong></h4><p><img src="/img/hcj/floatkz.png" alt="浮动元素与父盒子的关系"></p><ul><li>浮动元素与父盒子的关系<ul><li>子盒子的浮动参考父盒子对齐</li><li>不会与父元素的边框重叠，也不会超过父盒子的内边距</li></ul></li></ul><p><img src="/img/hcj/floatkz1.png" alt="浮动元素与父盒子的关系"><br><img src="/img/hcj/floatkz2.png" alt="浮动元素与父盒子的关系"></p><p>两个都不浮动，则就两行显示，跟1不浮动、2浮动一样</p><ul><li>浮动元素与兄弟盒子的关系，在一个父级盒子中，如果前一个兄弟盒子是<ul><li>浮动的，那么当前盒子会与钱一个盒子顶部对齐（1、2都浮动）</li><li>普通流的，那么当前盒子会显示正在前一个兄弟盒子的下方（1不浮动、2浮动）</li></ul></li></ul><p><strong>一个父盒子中有很多盒子，如果其中一个盒子浮动，其他也应该浮动，防止出现问题</strong></p><h3 id="2-12-3-清除浮动"><a href="#2-12-3-清除浮动" class="headerlink" title="2.12.3 清除浮动"></a>2.12.3 清除浮动</h3><h4 id="1-为什么要清除浮动？？？"><a href="#1-为什么要清除浮动？？？" class="headerlink" title="1. 为什么要清除浮动？？？"></a>1. 为什么要清除浮动？？？</h4><p><strong>父级盒子很多情况下，不方便给出高度</strong>，但是子盒子如果浮动就不会占用位置，最后父级盒子的高度为0，就会影响下面的标准流盒子</p><p>正常的标准流盒子会把没有固定高度的父盒子撑开，而浮动的盒子不会撑开父亲<br>不方便给高度：固定的样式，内容不同的情况下</p><h4 id="2-清除浮动"><a href="#2-清除浮动" class="headerlink" title="2. 清除浮动"></a>2. 清除浮动</h4><p>主要是解决浮动元素撑不开<strong>未给高度的父盒子</strong>的问题，清除浮动后，父级会根据浮动的子盒子自动检测高度</p><h4 id="3-清除浮动的方法"><a href="#3-清除浮动的方法" class="headerlink" title="3. 清除浮动的方法"></a>3. 清除浮动的方法</h4><p><code>clear: 属性值;</code><br><code>left清除左侧浮动影响 right both</code><br>一般直接用<code>clear: both</code></p><h5 id="①-额外标签法（隔墙法）"><a href="#①-额外标签法（隔墙法）" class="headerlink" title="① 额外标签法（隔墙法）"></a>① 额外标签法（隔墙法）</h5><p>在浮动元素末尾添加一个空的标签</p><p><code>&lt;div style="clear: both"&gt;&lt;/div&gt;</code>或者其他如<code>&lt;br&gt;</code>标签等</p><ul><li>缺点： 添加了许多无意义标签，结构性差</li></ul><h5 id="②-父级添加overflow属性方法"><a href="#②-父级添加overflow属性方法" class="headerlink" title="② 父级添加overflow属性方法"></a>② 父级添加overflow属性方法</h5><p>给父级添加<code>overflow</code>为<code>hidden</code> <code>auto</code> <code>scroll</code> 都可以<br><code>overflow: hidden;</code><br>auto生成滚动条，scroll生成两个滚动条</p><p>代码简洁，但是内容增多时荣一造成不会自动换行而导致内容被隐藏掉，无法显示需要溢出的元素</p><h5 id="③-使用after伪元素清除浮动"><a href="#③-使用after伪元素清除浮动" class="headerlink" title="③ 使用after伪元素清除浮动"></a>③ 使用after伪元素清除浮动</h5><p>after方式为空元素添加额外标签的升级版，不用单独添加标签</p><p>相当于给这个标签后面添加了一个新的标签，但是结构里面不可见，虚拟，更好</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 声明清除浮动的样式 */</span></span><br><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span> {</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">""</span>;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">visibility</span>: hidden;</span><br><span class="line">  <span class="attribute">clear</span>: both;</span><br><span class="line">}</span><br><span class="line"><span class="comment">/* 防止低版本浏览器不支持after */</span></span><br><span class="line"><span class="comment">/* ie6、7清除浮动的样式 */</span></span><br><span class="line"><span class="selector-class">.clearfix</span> {</span><br><span class="line">  *zoom: 1;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 然后给需要的标签添加一个类名：clearfix */</span></span><br></pre></td></tr></tbody></table></figure><h5 id="④-使用双伪元素清除浮动"><a href="#④-使用双伪元素清除浮动" class="headerlink" title="④ 使用双伪元素清除浮动"></a>④ 使用双伪元素清除浮动</h5><p>代码更加简洁</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:before</span>,</span><br><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span> {</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">""</span>;</span><br><span class="line">  <span class="attribute">display</span>: table;</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span> {</span><br><span class="line">  <span class="attribute">clear</span>: both;</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.clearfix</span> {</span><br><span class="line">  *zoom: 1;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="4-清除浮动总结"><a href="#4-清除浮动总结" class="headerlink" title="4. 清除浮动总结"></a>4. 清除浮动总结</h4><p>当</p><ul><li>父级没高度</li><li>子盒子浮动</li><li>影响下面的布局<br>就需要清除浮动，四种方法清除浮动</li></ul><h4 id="5-PS切片"><a href="#5-PS切片" class="headerlink" title="5. PS切片"></a>5. PS切片</h4><p><strong>PS切片常用切片工具</strong></p><p>大致步骤：切片后然后，导出–&gt;存储为web常用–&gt;然后用切片保存选中的切片<br>切片方法：</p><ol><li>切片工具直接切片</li><li>图层–&gt;新建基于图层的切片</li><li>利用辅助线<code>ctrl+ R</code>调出辅助线</li></ol><p>清除切片：视图–&gt;清除切片</p><p>或者使用ps切片的插件（免费但是需要注册自己的帐号）<br>Cutterman切图神器</p><hr><h1 id="✳快捷键操作（常用）"><a href="#✳快捷键操作（常用）" class="headerlink" title="✳快捷键操作（常用）"></a>✳快捷键操作（常用）</h1><p><strong>html编辑的快捷方法</strong></p><p><img src="/img/hcj/kjj.png" alt="快捷键操作"></p><ul><li><code>w200</code> 生成 <code>width: 200px;</code></li><li><code>h200</code> 生成 <code>height: 200px;</code></li></ul><p>我的HB不行hhh草</p><ul><li><code>bd+</code> 生成 <code>border: 1px solid #000;</code></li><li><code>bd-</code> 生成 <code>border: none;</code></li></ul><hr><h1 id="3-js-的基础"><a href="#3-js-的基础" class="headerlink" title="3. js 的基础"></a>3. js 的基础</h1><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 学习力 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> Note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自己写的几个python小程序</title>
      <link href="/2020/03/21/example-python/"/>
      <url>/2020/03/21/example-python/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><h1 id="1-每日手动记录支付宝基金余额"><a href="#1-每日手动记录支付宝基金余额" class="headerlink" title="1. 每日手动记录支付宝基金余额"></a>1. 每日手动记录支付宝基金余额</h1><h2 id="1-1-只有一支基金时的代码"><a href="#1-1-只有一支基金时的代码" class="headerlink" title="1.1 只有一支基金时的代码"></a>1.1 只有一支基金时的代码</h2><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> openpyxl <span class="keyword">as</span> xl</span><br><span class="line"><span class="keyword">from</span> openpyxl <span class="keyword">import</span> Workbook</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> plotly.offline <span class="keyword">as</span> ptly</span><br><span class="line"><span class="keyword">import</span> plotly.graph_objs <span class="keyword">as</span> go</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">daily_init</span><span class="params">()</span>:</span></span><br><span class="line">    wb = Workbook()</span><br><span class="line">    ws = wb.active</span><br><span class="line">    ws[<span class="string">'A1'</span>] = <span class="string">'日期'</span></span><br><span class="line">    ws[<span class="string">'B1'</span>] = <span class="string">'基金余额'</span></span><br><span class="line">    ws[<span class="string">'A2'</span>] = <span class="string">'03/21/20'</span></span><br><span class="line">    ws[<span class="string">'B2'</span>] = <span class="number">10.00</span></span><br><span class="line">    wb.save(<span class="string">'fund.xlsx'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">daily_save</span><span class="params">()</span>:</span></span><br><span class="line">    filex = <span class="string">"fund.xlsx"</span></span><br><span class="line">    <span class="keyword">if</span> os.path.exists(filex):</span><br><span class="line">        wb = xl.load_workbook(<span class="string">'fund.xlsx'</span>)</span><br><span class="line">        sheet = wb[<span class="string">'Sheet'</span>]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        wb = Workbook()</span><br><span class="line">        sheet = wb[<span class="string">'Sheet'</span>]</span><br><span class="line"></span><br><span class="line">    ws = wb.active</span><br><span class="line">    ws[<span class="string">'A1'</span>] = <span class="string">'日期'</span></span><br><span class="line">    ws[<span class="string">'B1'</span>] = <span class="string">'基金余额'</span></span><br><span class="line">    ws[<span class="string">'A2'</span>] = <span class="string">'03/21/20'</span></span><br><span class="line">    ws[<span class="string">'B2'</span>] = <span class="number">10.00</span></span><br><span class="line"></span><br><span class="line">    today = datag()</span><br><span class="line">    td_yues = today[<span class="number">1</span>]</span><br><span class="line">    td_yue = td_yues[sheet.max_row<span class="number">-2</span>]</span><br><span class="line">    daily = float(input(<span class="string">"\n请输入今天的收益/亏损："</span>))</span><br><span class="line">    yue = td_yue + daily</span><br><span class="line"></span><br><span class="line">    dt = time.strftime(<span class="string">"%D"</span>, time.localtime())</span><br><span class="line">    maxrow = sheet.max_row + <span class="number">1</span></span><br><span class="line">    ws.cell(row=maxrow,column=<span class="number">1</span>,value=dt)</span><br><span class="line">    ws.cell(row=maxrow,column=<span class="number">2</span>,value=yue)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">f'\n数据已保存:<span class="subst">{dt}</span> \t <span class="subst">{yue}</span> \n'</span>)</span><br><span class="line">    wb.save(<span class="string">'fund.xlsx'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">datag</span><span class="params">()</span>:</span></span><br><span class="line">    filex = <span class="string">'fund.xlsx'</span></span><br><span class="line">    <span class="keyword">if</span> os.path.exists(filex):</span><br><span class="line">        wb = xl.load_workbook(<span class="string">'fund.xlsx'</span>)</span><br><span class="line">        sheet = wb[<span class="string">'Sheet'</span>]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        wb = Workbook()</span><br><span class="line">        sheet = wb[<span class="string">'Sheet'</span>]</span><br><span class="line"></span><br><span class="line">    ws = wb.active</span><br><span class="line">    dts = []</span><br><span class="line">    yues = []</span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> ws.iter_rows(min_row=<span class="number">2</span>, min_col=<span class="number">1</span>,max_col=<span class="number">1</span>,max_row=sheet.max_row ):</span><br><span class="line">        <span class="keyword">for</span> cell <span class="keyword">in</span> row:</span><br><span class="line">            dts.append(str(cell.value))</span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> ws.iter_rows(min_row=<span class="number">2</span>, min_col=<span class="number">2</span>,max_col=<span class="number">2</span>,max_row=sheet.max_row ):</span><br><span class="line">        <span class="keyword">for</span> cell <span class="keyword">in</span> row:</span><br><span class="line">            yues.append(cell.value)</span><br><span class="line">    wb.save(<span class="string">'fund.xlsx'</span>)</span><br><span class="line">    <span class="keyword">return</span> dts,yues</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">datalook</span><span class="params">()</span>:</span></span><br><span class="line">    wb = xl.load_workbook(<span class="string">'fund.xlsx'</span>)</span><br><span class="line">    sheet = wb[<span class="string">'Sheet'</span>]</span><br><span class="line">    ws = wb.active</span><br><span class="line">    dts = []</span><br><span class="line">    yues = []</span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> ws.iter_rows(min_row=<span class="number">2</span>, min_col=<span class="number">1</span>,max_col=<span class="number">1</span>,max_row=sheet.max_row ):</span><br><span class="line">        <span class="keyword">for</span> cell <span class="keyword">in</span> row:</span><br><span class="line">            dts.append(str(cell.value))</span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> ws.iter_rows(min_row=<span class="number">2</span>, min_col=<span class="number">2</span>,max_col=<span class="number">2</span>,max_row=sheet.max_row ):</span><br><span class="line">        <span class="keyword">for</span> cell <span class="keyword">in</span> row:</span><br><span class="line">            yues.append(cell.value)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(sheet.max_row<span class="number">-1</span>):</span><br><span class="line">        print(dts[i],end=<span class="string">'\t'</span>)</span><br><span class="line">        print(yues[i])</span><br><span class="line"></span><br><span class="line"><span class="comment"># def check():</span></span><br><span class="line"><span class="comment">#     # 读取Excel中Sheet中的数据</span></span><br><span class="line"><span class="comment">#     data = pd.DataFrame(pd.read_excel('fund.xlsx', 'Sheet'))</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#     # 查看读取数据内容</span></span><br><span class="line"><span class="comment">#     print(data)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#     # 查看是否有重复行</span></span><br><span class="line"><span class="comment">#     re_row = data.duplicated()</span></span><br><span class="line"><span class="comment">#     print(re_row)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#     # 查看去除重复行的数据</span></span><br><span class="line"><span class="comment">#     no_re_row = data.drop_duplicates()</span></span><br><span class="line"><span class="comment">#     print(no_re_row)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#     # 查看基于[物品]列去除重复行的数据</span></span><br><span class="line"><span class="comment">#     wp = data.drop_duplicates(['日期'])</span></span><br><span class="line"><span class="comment">#     print(wp)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#     # 将去除重复行的数据输出到excel表中</span></span><br><span class="line"><span class="comment">#     no_re_row.to_excel("fund.xlsx")</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">qs</span><span class="params">()</span>:</span></span><br><span class="line">    dys = datag()</span><br><span class="line">    dts = dys[<span class="number">0</span>]</span><br><span class="line">    yues = dys[<span class="number">1</span>]</span><br><span class="line">    data = []</span><br><span class="line"></span><br><span class="line">    trace1 = go.Scatter(x=dts,</span><br><span class="line">                        y=yues,</span><br><span class="line">                        mode=<span class="string">'lines+markers'</span>,  <span class="comment"># mode可选'markers','lines','lines+markers'</span></span><br><span class="line">                        name= <span class="string">'Money'</span>,</span><br><span class="line">                        marker=dict(size=<span class="number">10</span>,  <span class="comment"># 若设为变量则可用散点大小表示变量大小</span></span><br><span class="line">                                    color=<span class="string">'rgba(152, 0, 0, .8)'</span>,</span><br><span class="line">                                    line=dict(width=<span class="number">2</span>,</span><br><span class="line">                                                color=<span class="string">'rgb(0, 0, 0)'</span></span><br><span class="line">                                                ),</span><br><span class="line">                                    opacity=[]</span><br><span class="line">                                    )</span><br><span class="line">                        )</span><br><span class="line">    data.append(trace1)</span><br><span class="line">    axis_template = dict(</span><br><span class="line">        showgrid=<span class="literal">True</span>,  <span class="comment"># 网格</span></span><br><span class="line">        zeroline=<span class="literal">True</span>,  <span class="comment"># 是否显示基线,即沿着(0,0)画出x轴和y轴</span></span><br><span class="line">        nticks=<span class="number">20</span>,</span><br><span class="line">        showline=<span class="literal">True</span>,</span><br><span class="line">        title=<span class="string">'Date'</span>,</span><br><span class="line">        mirror=<span class="string">'all'</span>,</span><br><span class="line">        zerolinecolor=<span class="string">"#FF0000"</span></span><br><span class="line">    )</span><br><span class="line">    ayis_template = dict(</span><br><span class="line">        showgrid=<span class="literal">True</span>,  <span class="comment"># 网格</span></span><br><span class="line">        zeroline=<span class="literal">True</span>,  <span class="comment"># 是否显示基线,即沿着(0,0)画出x轴和y轴</span></span><br><span class="line">        nticks=<span class="number">20</span>,</span><br><span class="line">        showline=<span class="literal">True</span>,</span><br><span class="line">        title=<span class="string">'Money'</span>,</span><br><span class="line">        mirror=<span class="string">'all'</span>,</span><br><span class="line">        zerolinecolor=<span class="string">"#FF0000"</span></span><br><span class="line">    )</span><br><span class="line">    layout = go.Layout(font=dict(family=<span class="string">'Courier New, monospace'</span>, size=<span class="number">18</span>, color=<span class="string">'#3D3D3D'</span>),</span><br><span class="line">                        title=<span class="string">'基金实况'</span> ,xaxis=axis_template,yaxis=ayis_template</span><br><span class="line">                        )</span><br><span class="line">    fig = go.Figure(data=data, layout=layout)</span><br><span class="line">    ptly.plot(fig, filename=<span class="string">'fund.html'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    filexx = <span class="string">'fund.xlsx'</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(filexx):</span><br><span class="line">        print(<span class="string">'----什么？这是你的第一次？好了，已经帮你弄好了（指初始化）----'</span>)</span><br><span class="line">        daily_init()</span><br><span class="line">        exit()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        p = int(input(<span class="string">'今天是否保存过数据了呢？0/1：'</span>))</span><br><span class="line">        <span class="keyword">if</span> p == <span class="number">1</span> :</span><br><span class="line">            print(<span class="string">'\n----哦，你已经好了？那算了----\n'</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            daily_save()</span><br><span class="line">            print(<span class="string">'----好了，保存好了----\n'</span>)</span><br><span class="line">    pd = int(input(<span class="string">'想不想看一下趋势图-0/1：'</span>))</span><br><span class="line">    <span class="keyword">if</span> pd == <span class="number">1</span> :</span><br><span class="line">        print(<span class="string">'\n----那就给你看一下吧----\n'</span>)</span><br><span class="line">        qs()</span><br><span class="line">        datalook()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'\n----既然不想看，那就算了吧----'</span>)</span><br></pre></td></tr></tbody></table></figure><p>然后可以再桌面新建一个<code>fund.bat</code>脚本直接运行</p><figure class="highlight bat"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">e:</span></span><br><span class="line"><span class="function"><span class="title">cd</span> <span class="title">E</span>:/<span class="title">learn</span>/<span class="title">py</span>/<span class="title">fund</span># 进入到<span class="title">fund</span>所在目录</span></span><br><span class="line"><span class="function"><span class="title">python</span> <span class="title">fund.py</span># 运行<span class="title">python</span>文件</span></span><br><span class="line"><span class="function"><span class="title">pause</span># 让屏幕停留</span></span><br></pre></td></tr></tbody></table></figure><p>功能：可以记录日常的基金走势，然后记录数据</p><p>不足：不能够自动删除 excel 中的重复的数据，（如同一天的数据）</p><h2 id="1-2-三支基金时的代码"><a href="#1-2-三支基金时的代码" class="headerlink" title="1.2 三支基金时的代码"></a>1.2 三支基金时的代码</h2><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> openpyxl <span class="keyword">as</span> xl</span><br><span class="line"><span class="keyword">from</span> openpyxl <span class="keyword">import</span> Workbook</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> plotly.offline <span class="keyword">as</span> ptly</span><br><span class="line"><span class="keyword">import</span> plotly.graph_objs <span class="keyword">as</span> go</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据初始化</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">daily_init</span><span class="params">()</span>:</span></span><br><span class="line">    wb = Workbook()</span><br><span class="line">    ws = wb.active</span><br><span class="line">    ws[<span class="string">'A1'</span>] = <span class="string">'日期'</span></span><br><span class="line">    ws[<span class="string">'B1'</span>] = <span class="string">'总额'</span></span><br><span class="line">    ws[<span class="string">'C1'</span>] = <span class="string">'嘉合'</span></span><br><span class="line">    ws[<span class="string">'D1'</span>] = <span class="string">'白酒'</span></span><br><span class="line">    ws[<span class="string">'E1'</span>] = <span class="string">'沪深'</span></span><br><span class="line"></span><br><span class="line">    ws[<span class="string">'A2'</span>] = <span class="string">'04/04/20'</span></span><br><span class="line">    ws[<span class="string">'B2'</span>] = <span class="number">810.00</span></span><br><span class="line">    ws[<span class="string">'C2'</span>] = <span class="number">100.00</span></span><br><span class="line">    ws[<span class="string">'D2'</span>] = <span class="number">210.00</span></span><br><span class="line">    ws[<span class="string">'E2'</span>] = <span class="number">500.00</span></span><br><span class="line">    wb.save(<span class="string">'fund3.xlsx'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据保存</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">daily_save</span><span class="params">()</span>:</span></span><br><span class="line">    filex = <span class="string">"fund3.xlsx"</span></span><br><span class="line">    <span class="keyword">if</span> os.path.exists(filex):</span><br><span class="line">        wb = xl.load_workbook(<span class="string">'fund3.xlsx'</span>)</span><br><span class="line">        sheet = wb[<span class="string">'Sheet'</span>]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        wb = Workbook()</span><br><span class="line">        sheet = wb[<span class="string">'Sheet'</span>]</span><br><span class="line"></span><br><span class="line">    ws = wb.active</span><br><span class="line">    ws[<span class="string">'A1'</span>] = <span class="string">'日期'</span></span><br><span class="line">    ws[<span class="string">'B1'</span>] = <span class="string">'总额'</span></span><br><span class="line">    ws[<span class="string">'C1'</span>] = <span class="string">'嘉合'</span></span><br><span class="line">    ws[<span class="string">'D1'</span>] = <span class="string">'白酒'</span></span><br><span class="line">    ws[<span class="string">'E1'</span>] = <span class="string">'沪深'</span></span><br><span class="line"></span><br><span class="line">    ws[<span class="string">'A2'</span>] = <span class="string">'04/04/20'</span></span><br><span class="line">    ws[<span class="string">'B2'</span>] = <span class="number">810.00</span></span><br><span class="line">    ws[<span class="string">'C2'</span>] = <span class="number">100.00</span></span><br><span class="line">    ws[<span class="string">'D2'</span>] = <span class="number">210.00</span></span><br><span class="line">    ws[<span class="string">'E2'</span>] = <span class="number">500.00</span></span><br><span class="line"></span><br><span class="line">    today = datag()</span><br><span class="line">    td_yues1 = today[<span class="number">1</span>]</span><br><span class="line">    td_yue1 = td_yues1[sheet.max_row<span class="number">-2</span>]</span><br><span class="line">    td_yues2 = today[<span class="number">2</span>]</span><br><span class="line">    td_yue2 = td_yues2[sheet.max_row<span class="number">-2</span>]</span><br><span class="line">    td_yues3 = today[<span class="number">3</span>]</span><br><span class="line">    td_yue3 = td_yues3[sheet.max_row<span class="number">-2</span>]</span><br><span class="line"></span><br><span class="line">    daily1 = float(input(<span class="string">"\n请输入嘉和今天的收益/亏损："</span>))</span><br><span class="line">    daily2 = float(input(<span class="string">"\n请输入白酒今天的收益/亏损："</span>))</span><br><span class="line">    daily3 = float(input(<span class="string">"\n请输入沪深今天的收益/亏损："</span>))</span><br><span class="line">    yue1 = td_yue1 + daily1</span><br><span class="line">    yue2 = td_yue2 + daily2</span><br><span class="line">    yue3 = td_yue3 + daily3</span><br><span class="line">    yue0 = round(yue1,<span class="number">2</span>) + round(yue2,<span class="number">2</span>) + round(yue3,<span class="number">2</span>)</span><br><span class="line">    dt = time.strftime(<span class="string">"%D"</span>, time.localtime())</span><br><span class="line">    maxrow = sheet.max_row + <span class="number">1</span></span><br><span class="line">    ws.cell(row=maxrow, column=<span class="number">1</span>, value=dt)</span><br><span class="line">    ws.cell(row=maxrow, column=<span class="number">2</span>, value=yue0)</span><br><span class="line">    ws.cell(row=maxrow, column=<span class="number">3</span>, value=yue1)</span><br><span class="line">    ws.cell(row=maxrow, column=<span class="number">4</span>, value=yue2)</span><br><span class="line">    ws.cell(row=maxrow, column=<span class="number">5</span>, value=yue3)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">f'\n数据已保存:<span class="subst">{dt}</span> \t <span class="subst">{yue0}</span> == <span class="subst">{yue1}</span> + <span class="subst">{yue2}</span> + <span class="subst">{yue3}</span> \n'</span>)</span><br><span class="line">    wb.save(<span class="string">'fund3.xlsx'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据获取</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">datag</span><span class="params">()</span>:</span></span><br><span class="line">    filex = <span class="string">'fund3.xlsx'</span></span><br><span class="line">    <span class="keyword">if</span> os.path.exists(filex):</span><br><span class="line">        wb = xl.load_workbook(<span class="string">'fund3.xlsx'</span>)</span><br><span class="line">        sheet = wb[<span class="string">'Sheet'</span>]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        wb = Workbook()</span><br><span class="line">        sheet = wb[<span class="string">'Sheet'</span>]</span><br><span class="line"></span><br><span class="line">    ws = wb.active</span><br><span class="line">    dts = []</span><br><span class="line"></span><br><span class="line">    yues1 = []</span><br><span class="line">    yues2 = []</span><br><span class="line">    yues3 = []</span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> ws.iter_rows(min_row=<span class="number">2</span>, min_col=<span class="number">1</span>, max_col=<span class="number">1</span>, max_row=sheet.max_row):</span><br><span class="line">        <span class="keyword">for</span> cell <span class="keyword">in</span> row:</span><br><span class="line">            dts.append(str(cell.value))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> ws.iter_rows(min_row=<span class="number">2</span>, min_col=<span class="number">3</span>, max_col=<span class="number">3</span>, max_row=sheet.max_row):</span><br><span class="line">        <span class="keyword">for</span> cell <span class="keyword">in</span> row:</span><br><span class="line">            yues1.append(cell.value)</span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> ws.iter_rows(min_row=<span class="number">2</span>, min_col=<span class="number">4</span>, max_col=<span class="number">4</span>, max_row=sheet.max_row):</span><br><span class="line">        <span class="keyword">for</span> cell <span class="keyword">in</span> row:</span><br><span class="line">            yues2.append(cell.value)</span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> ws.iter_rows(min_row=<span class="number">2</span>, min_col=<span class="number">5</span>, max_col=<span class="number">5</span>, max_row=sheet.max_row):</span><br><span class="line">        <span class="keyword">for</span> cell <span class="keyword">in</span> row:</span><br><span class="line">            yues3.append(cell.value)</span><br><span class="line">    wb.save(<span class="string">'fund3.xlsx'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> dts, yues1, yues2, yues3</span><br><span class="line"></span><br><span class="line"><span class="comment"># 看数据</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">datalook</span><span class="params">()</span>:</span></span><br><span class="line">    wb = xl.load_workbook(<span class="string">'fund3.xlsx'</span>)</span><br><span class="line">    sheet = wb[<span class="string">'Sheet'</span>]</span><br><span class="line">    ws = wb.active</span><br><span class="line">    dts = []</span><br><span class="line">    yues0 = []</span><br><span class="line">    yues1 = []</span><br><span class="line">    yues2 = []</span><br><span class="line">    yues3 = []</span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> ws.iter_rows(min_row=<span class="number">2</span>, min_col=<span class="number">1</span>, max_col=<span class="number">1</span>, max_row=sheet.max_row):</span><br><span class="line">        <span class="keyword">for</span> cell <span class="keyword">in</span> row:</span><br><span class="line">            dts.append(str(cell.value))</span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> ws.iter_rows(min_row=<span class="number">2</span>, min_col=<span class="number">2</span>, max_col=<span class="number">2</span>, max_row=sheet.max_row):</span><br><span class="line">        <span class="keyword">for</span> cell <span class="keyword">in</span> row:</span><br><span class="line">            yues0.append(cell.value)</span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> ws.iter_rows(min_row=<span class="number">2</span>, min_col=<span class="number">3</span>, max_col=<span class="number">3</span>, max_row=sheet.max_row):</span><br><span class="line">        <span class="keyword">for</span> cell <span class="keyword">in</span> row:</span><br><span class="line">            yues1.append(cell.value)</span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> ws.iter_rows(min_row=<span class="number">2</span>, min_col=<span class="number">4</span>, max_col=<span class="number">4</span>, max_row=sheet.max_row):</span><br><span class="line">        <span class="keyword">for</span> cell <span class="keyword">in</span> row:</span><br><span class="line">            yues2.append(cell.value)</span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> ws.iter_rows(min_row=<span class="number">2</span>, min_col=<span class="number">5</span>, max_col=<span class="number">5</span>, max_row=sheet.max_row):</span><br><span class="line">        <span class="keyword">for</span> cell <span class="keyword">in</span> row:</span><br><span class="line">            yues3.append(cell.value)</span><br><span class="line">    yues0r = [round(i,<span class="number">2</span>) <span class="keyword">for</span> i <span class="keyword">in</span> yues0]</span><br><span class="line">    print(<span class="string">'日期'</span>,end=<span class="string">'\t\t'</span>)</span><br><span class="line">    print(<span class="string">'总额'</span>,end=<span class="string">'\t\t'</span>)</span><br><span class="line">    print(<span class="string">'嘉合'</span>,end=<span class="string">'\t'</span>)</span><br><span class="line">    print(<span class="string">'白酒'</span>,end=<span class="string">'\t'</span>)</span><br><span class="line">    print(<span class="string">'沪深'</span>,end=<span class="string">'\n'</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(sheet.max_row<span class="number">-1</span>):</span><br><span class="line">        print(dts[i], end=<span class="string">'\t'</span>)</span><br><span class="line">        print(yues0r[i],end=<span class="string">'\t\t'</span>)</span><br><span class="line">        print(yues1[i],end=<span class="string">'\t'</span>)</span><br><span class="line">        print(yues2[i],end=<span class="string">'\t'</span>)</span><br><span class="line">        print(yues3[i])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 看趋势图</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">qs</span><span class="params">()</span>:</span></span><br><span class="line">    dys = datag()</span><br><span class="line">    dts = dys[<span class="number">0</span>]</span><br><span class="line">    yues1 = dys[<span class="number">1</span>]</span><br><span class="line">    yues2 = dys[<span class="number">2</span>]</span><br><span class="line">    yues3 = dys[<span class="number">3</span>]</span><br><span class="line">    data = []</span><br><span class="line"></span><br><span class="line">    trace1 = go.Scatter(x=dts,</span><br><span class="line">                        y=yues1,</span><br><span class="line">                        mode=<span class="string">'lines+markers'</span>,  <span class="comment"># mode可选'markers','lines','lines+markers'</span></span><br><span class="line">                        name=<span class="string">'嘉和'</span>,</span><br><span class="line">                        marker=dict(size=<span class="number">10</span>,  <span class="comment"># 若设为变量则可用散点大小表示变量大小</span></span><br><span class="line">                                    color=<span class="string">'rgba(152, 0, 0, .8)'</span>,</span><br><span class="line">                                    line=dict(width=<span class="number">2</span>,</span><br><span class="line">                                              color=<span class="string">'rgb(0, 0, 0)'</span></span><br><span class="line">                                              ),</span><br><span class="line">                                    opacity=[]</span><br><span class="line">                                    )</span><br><span class="line">                        )</span><br><span class="line">    trace2 = go.Scatter(x=dts,</span><br><span class="line">                        y=yues2,</span><br><span class="line">                        mode=<span class="string">'lines+markers'</span>,  <span class="comment"># mode可选'markers','lines','lines+markers'</span></span><br><span class="line">                        name=<span class="string">'白酒'</span>,</span><br><span class="line">                        marker=dict(size=<span class="number">10</span>,  <span class="comment"># 若设为变量则可用散点大小表示变量大小</span></span><br><span class="line">                                    color=<span class="string">'rgba( 0,152, 0, .8)'</span>,</span><br><span class="line">                                    line=dict(width=<span class="number">2</span>,</span><br><span class="line">                                              color=<span class="string">'rgb(0, 0, 0)'</span></span><br><span class="line">                                              ),</span><br><span class="line">                                    opacity=[]</span><br><span class="line">                                    )</span><br><span class="line">                        )</span><br><span class="line">    trace3 = go.Scatter(x=dts,</span><br><span class="line">                        y=yues3,</span><br><span class="line">                        mode=<span class="string">'lines+markers'</span>,  <span class="comment"># mode可选'markers','lines','lines+markers'</span></span><br><span class="line">                        name=<span class="string">'沪深'</span>,</span><br><span class="line">                        marker=dict(size=<span class="number">10</span>,  <span class="comment"># 若设为变量则可用散点大小表示变量大小</span></span><br><span class="line">                                    color=<span class="string">'rgba( 0, 0, 152,.8)'</span>,</span><br><span class="line">                                    line=dict(width=<span class="number">2</span>,</span><br><span class="line">                                              color=<span class="string">'rgb(0, 0, 0)'</span></span><br><span class="line">                                              ),</span><br><span class="line">                                    opacity=[]</span><br><span class="line">                                    )</span><br><span class="line">                        )</span><br><span class="line"></span><br><span class="line">    data = [trace1, trace2, trace3]</span><br><span class="line">    axis_template = dict(</span><br><span class="line">        showgrid=<span class="literal">True</span>,  <span class="comment"># 网格</span></span><br><span class="line">        zeroline=<span class="literal">True</span>,  <span class="comment"># 是否显示基线,即沿着(0,0)画出x轴和y轴</span></span><br><span class="line">        nticks=<span class="number">20</span>,</span><br><span class="line">        showline=<span class="literal">True</span>,</span><br><span class="line">        title=<span class="string">'Date'</span>,</span><br><span class="line">        mirror=<span class="string">'all'</span>,</span><br><span class="line">        zerolinecolor=<span class="string">"#FF0000"</span></span><br><span class="line">    )</span><br><span class="line">    ayis_template = dict(</span><br><span class="line">        showgrid=<span class="literal">True</span>,  <span class="comment"># 网格</span></span><br><span class="line">        zeroline=<span class="literal">True</span>,  <span class="comment"># 是否显示基线,即沿着(0,0)画出x轴和y轴</span></span><br><span class="line">        nticks=<span class="number">20</span>,</span><br><span class="line">        showline=<span class="literal">True</span>,</span><br><span class="line">        title=<span class="string">'Money'</span>,</span><br><span class="line">        mirror=<span class="string">'all'</span>,</span><br><span class="line">        zerolinecolor=<span class="string">"#FF0000"</span></span><br><span class="line">    )</span><br><span class="line">    layout = go.Layout(font=dict(family=<span class="string">'Courier New, monospace'</span>, size=<span class="number">18</span>, color=<span class="string">'#3D3D3D'</span>),</span><br><span class="line">                       title=<span class="string">'基金实况'</span>, xaxis=axis_template, yaxis=ayis_template</span><br><span class="line">                       )</span><br><span class="line">    fig = go.Figure(data=data, layout=layout)</span><br><span class="line">    ptly.plot(fig, filename=<span class="string">'fund3.html'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    filexx = <span class="string">'fund3.xlsx'</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(filexx):</span><br><span class="line">        print(<span class="string">'----什么？这是你的第一次？好了，已经帮你弄好了（指初始化）----'</span>)</span><br><span class="line">        daily_init()</span><br><span class="line">        exit()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        p = int(input(<span class="string">'今天是否保存过数据了呢？0/1：'</span>))</span><br><span class="line">        <span class="keyword">if</span> p == <span class="number">1</span>:</span><br><span class="line">            print(<span class="string">'\n----哦，你已经好了？那算了----\n'</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            daily_save()</span><br><span class="line">            print(<span class="string">'----好了，保存好了----\n'</span>)</span><br><span class="line">    pd = int(input(<span class="string">'想不想看一下趋势图-0/1：'</span>))</span><br><span class="line">    <span class="keyword">if</span> pd == <span class="number">1</span>:</span><br><span class="line">        print(<span class="string">'\n----那就给你看一下吧----\n'</span>)</span><br><span class="line">        qs()</span><br><span class="line">        datalook()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'\n----既然不想看，那就算了吧----'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></tbody></table></figure><h1 id="2-图中图——将一幅图套娃"><a href="#2-图中图——将一幅图套娃" class="headerlink" title="2. 图中图——将一幅图套娃"></a>2. 图中图——将一幅图套娃</h1><p><a href="https://space.bilibili.com/39665558" target="_blank" rel="noopener">迷糊老师</a>的程序，hhh 很好玩，b 站<a href="https://www.bilibili.com/video/BV1QE411P7GV" target="_blank" rel="noopener">迷糊老师视频</a></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fill_img_with_img</span><span class="params">(imgParent, imgChild)</span>:</span></span><br><span class="line">    imgSize =(imgParent.width*imgChild.width, imgParent.height*imgChild.height)</span><br><span class="line">    imgRet = Image.new(<span class="string">'L'</span>, imgSize, <span class="string">'white'</span>)</span><br><span class="line"></span><br><span class="line">    i = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> w <span class="keyword">in</span> range(imgParent.width):</span><br><span class="line">        print(i)</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> h <span class="keyword">in</span> range(imgParent.height):</span><br><span class="line">            <span class="keyword">if</span> imgParent.getpixel((w, h)) &lt; <span class="number">127</span>:</span><br><span class="line">                imgRet.paste(imgChild,(w*imgChild.width, h*imgChild.height))</span><br><span class="line">    <span class="keyword">return</span> imgRet</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    imgParent = Image.open(<span class="string">'parent.jpg'</span>)</span><br><span class="line">    imgParent = imgParent.convert(<span class="string">'L'</span>)</span><br><span class="line"></span><br><span class="line">    imgChild = Image.open(<span class="string">'child2.png'</span>)</span><br><span class="line">    imgChild = imgChild.convert(<span class="string">'L'</span>)</span><br><span class="line"></span><br><span class="line">    imgRet = fill_img_with_img(imgParent,imgChild)</span><br><span class="line"></span><br><span class="line">    imgRet.save(<span class="string">'result.png'</span>)</span><br></pre></td></tr></tbody></table></figure><h1 id="3-好奇心——用程序检查哪些网站能打开"><a href="#3-好奇心——用程序检查哪些网站能打开" class="headerlink" title="3. 好奇心——用程序检查哪些网站能打开"></a>3. 好奇心——用程序检查哪些网站能打开</h1><h2 id="3-1-初步，只能检查-IP-地址-不成熟的探索"><a href="#3-1-初步，只能检查-IP-地址-不成熟的探索" class="headerlink" title="3.1 初步，只能检查 IP 地址##不成熟的探索"></a>3.1 初步，只能检查 IP 地址##不成熟的探索</h2><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> error , request</span><br><span class="line"></span><br><span class="line">f = open(<span class="string">'re.txt'</span>,<span class="string">"w"</span>,encoding=<span class="string">'utf-8'</span>)</span><br><span class="line"></span><br><span class="line">j = <span class="number">0</span></span><br><span class="line">k = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">255</span>):</span><br><span class="line">    htmls = []</span><br><span class="line">    https = []</span><br><span class="line">    http = <span class="string">'http://123.56.22.'</span> + str(i)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        reponse = request.urlopen(http)</span><br><span class="line">        https.append(http)</span><br><span class="line">        j += <span class="number">1</span></span><br><span class="line">        print(<span class="string">f'这是第<span class="subst">{j}</span>个网站了'</span>)</span><br><span class="line">        f.write(<span class="string">'url'</span> + <span class="string">'\t'</span> + http + <span class="string">'\n'</span> )</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">except</span> error.URLError <span class="keyword">as</span> e:</span><br><span class="line">        k += <span class="number">1</span></span><br><span class="line">        print(<span class="string">f'访问页面出错1,<span class="subst">{k}</span>次了'</span>)</span><br><span class="line">    <span class="keyword">except</span> urllib.error.URLError:</span><br><span class="line">        print(<span class="string">'访问页面出错2'</span>)</span><br><span class="line"><span class="comment"># print(f'总共是{https}')</span></span><br><span class="line">f.close()</span><br></pre></td></tr></tbody></table></figure><h2 id="3-2-开始加一点细节，也不太完善"><a href="#3-2-开始加一点细节，也不太完善" class="headerlink" title="3.2 开始加一点细节，也不太完善"></a>3.2 开始加一点细节，也不太完善</h2><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 技术力 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WindowsTerminal的配置</title>
      <link href="/2020/03/18/tools-wt/"/>
      <url>/2020/03/18/tools-wt/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><h1 id="发现"><a href="#发现" class="headerlink" title="发现"></a>发现</h1><p>偶然间看到了<a href="https://sspai.com/post/59380" target="_blank" rel="noopener">这篇文章</a>，然后发现Windows terminal(wt)真的香，以下内容都是这篇文章的具体概况（自己的垃圾理解，太过于概括，建议看原文）</p><h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>想要自定义一个美观的Windows terminal窗口，只需要打开Windows terminal的配置文件，即settings中设置<code>profiles.json</code>文件就可以配置了。</p><h1 id="配置介绍"><a href="#配置介绍" class="headerlink" title="配置介绍"></a>配置介绍</h1><p>配置文件<code>profiles.json</code>中分为几个部分</p><ul><li><strong>全局属性</strong>：位于 JSON 最外侧，包含有设置亮暗主题、默认 Profile 等项目的配置</li><li><strong>环境入口 <code>profiles</code></strong>：一个列表，其中包含有 Windows Terminal 下拉菜单中唤起的各种环境（比如打开 PowerShell 环境、WSL 环境或 SSH 至远程服务器的环境……）与各种环境里 Windows Terminal 的显示方案（比如字体、背景、色彩方案等）</li><li><strong>配色主题 <code>schemes</code></strong>：一个配色方案列表，其中包含有 Windows Terminal 在上一项「环境入口」中可以调用的「色彩主题」</li><li><strong>快捷键绑定 <code>keybindings</code></strong>：自定义快捷键</li></ul><p><img src="https://cdn.sspai.com/editor/u_spencerwoo/15836861908691.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="profiles.json的文件格式"></p><h2 id="全局属性"><a href="#全局属性" class="headerlink" title="全局属性"></a>全局属性</h2><ul><li><code>"defaultProfile"</code>即打开wt默认打开的环境,相对应得就是底下得<code>"guid"</code>后面的唯一标识码</li></ul><ul><li><p>Terminal 亮暗主题设置 <code>"requestedTheme"</code>：可以为 <code>"system"</code>（跟随系统）、<code>"light"</code> 或 <code>"dark"</code></p></li><li><p>Terminal 初始大小：<code>"initialCols"</code> 和 <code>"initialRows"</code></p></li></ul><h2 id="profiles"><a href="#profiles" class="headerlink" title="profiles"></a>profiles</h2><p>可以看到刚下载下来的已经配置好的窗口有三个：PowerShell、cmd以及Azure Cloud Shell</p><p>在每一个窗口的配置中有着几个属性：</p><ul><li><code>"guid"</code>唯一标识码 、<code>"name"</code>窗口名称、<code>"commandline"</code>打开的命令行</li><li>接下来就是自定义的属性（基础）<ul><li><code>"background"</code>背景颜色：<code>"#000000"</code></li><li><code>"acrylicOpacity"</code>亚克力效果透明度：<code>0.6</code></li><li><code>"useAcrylic"</code>亚克力效果：<code>true</code></li><li><code>"colorScheme"</code>底下的schemes中配置的颜色名字：<code>"name"</code></li><li><code>"backgroundImage"</code>背景图片，放在<code>C:\Users\{用户名}\AppData\Local\Packages\Microsoft.WindowsTerminal_8wekyb3d8bbwe</code>目录的<code>RoamingState</code>文件夹中假如命名为<code>back.png</code>,然后配置：<code>"ms-appdata:///roaming/back.png"</code></li><li><code>"backgroundImageStretchMode"</code><em>按比例放大</em>:<code>"uniformToFill"</code></li><li><code>"backgroundImageOpacity"</code>图片的透明度:<code>0.6</code></li><li><code>"foreground"</code>字体颜色 : <code>"#e03c8a"</code>，<code>fontFace</code> 字体样式:<code>Consolas</code>, <code>fontSize</code> 字体大小:<code>16</code></li><li><code>"icon"</code> 添加小图标: <code>"ms-appdata:///roaming/sshicon.ico"</code>也是放在<code>RoamingState</code>中</li><li>进一步的美化<ul><li><code>"cursorColor"</code>光标颜色: <code>"#7EA2B4"</code></li><li><code>"cursorShape"</code>光标形状: <code>"bar"</code></li><li>更进一步具体配置看<a href="https://www.baidu.com/" target="_blank" rel="noopener">百度上的大佬</a>_,或者参考<a href="https://github.com/mbadolato/iTerm2-Color-Schemes" target="_blank" rel="noopener">schemes</a>中的配置可以在<a href="https://iterm2colorschemes.com/" target="_blank" rel="noopener">官网</a>预览</li></ul></li></ul></li></ul><p><strong>详情可以参考我的配置文件</strong></p><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">    <span class="attr">"$schema"</span>: <span class="string">"https://aka.ms/terminal-profiles-schema"</span>,</span><br><span class="line"></span><br><span class="line">    <span class="attr">"defaultProfile"</span>: <span class="string">"{61c54bbd-c2c6-5271-96e7-009a87ff44bf}"</span>,</span><br><span class="line"></span><br><span class="line">    <span class="attr">"requestedTheme"</span>: <span class="string">"light"</span>,</span><br><span class="line"></span><br><span class="line">    <span class="attr">"profiles"</span>:</span><br><span class="line">    {</span><br><span class="line">    </span><br><span class="line">        <span class="attr">"defaults"</span>:</span><br><span class="line">        {</span><br><span class="line">            <span class="comment">// Put settings here that you want to apply to all profiles</span></span><br><span class="line">        },</span><br><span class="line">        <span class="attr">"list"</span>:</span><br><span class="line">        [</span><br><span class="line">            {</span><br><span class="line">                <span class="comment">// Make changes here to the powershell.exe profile</span></span><br><span class="line">                <span class="attr">"guid"</span>: <span class="string">"{61c54bbd-c2c6-5271-96e7-009a87ff44bf}"</span>,</span><br><span class="line">                <span class="attr">"name"</span>: <span class="string">"PowerShell"</span>,</span><br><span class="line">                <span class="attr">"commandline"</span>: <span class="string">"powershell.exe"</span>,</span><br><span class="line">                <span class="attr">"hidden"</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="comment">// "profiles": [ ... ] 项目中 PowerShell 环境的配置</span></span><br><span class="line">            </span><br><span class="line">                <span class="comment">// "background": "#013456",</span></span><br><span class="line">                <span class="comment">// "acrylicOpacity": 0.8,  // 亚克力效果透明度</span></span><br><span class="line">                <span class="comment">// "useAcrylic": true  // 亚克力效果</span></span><br><span class="line">                <span class="comment">// "colorScheme": "name",//schemes中配置的主题颜色</span></span><br><span class="line">                <span class="attr">"backgroundImage"</span>: <span class="string">"ms-appdata:///roaming/back.png"</span>,</span><br><span class="line">                <span class="attr">"backgroundImageStretchMode"</span>: <span class="string">"uniformToFill"</span>, <span class="comment">// 按比例放大</span></span><br><span class="line">                <span class="attr">"backgroundImageOpacity"</span>: <span class="number">0.6</span> <span class="comment">//图片透明的</span></span><br><span class="line">            },</span><br><span class="line">            {</span><br><span class="line">                <span class="comment">// Make changes here to the cmd.exe profile</span></span><br><span class="line">                <span class="attr">"guid"</span>: <span class="string">"{0caa0dad-35be-5f56-a8ff-afceeeaa6101}"</span>,</span><br><span class="line">                <span class="attr">"name"</span>: <span class="string">"cmd"</span>,</span><br><span class="line">                <span class="attr">"commandline"</span>: <span class="string">"cmd.exe"</span>,</span><br><span class="line">                <span class="attr">"hidden"</span>: <span class="literal">false</span>,</span><br><span class="line">                <span class="attr">"backgroundImage"</span>: <span class="string">"ms-appdata:///roaming/cmd.jpg"</span>,</span><br><span class="line">                <span class="attr">"backgroundImageStretchMode"</span>: <span class="string">"uniformToFill"</span>,</span><br><span class="line">                <span class="attr">"backgroundImageOpacity"</span>: <span class="number">0.6</span></span><br><span class="line">            },</span><br><span class="line">            {</span><br><span class="line">                <span class="attr">"guid"</span>: <span class="string">"{b453ae62-4e3d-5e58-b989-0a998ec441b8}"</span>,</span><br><span class="line">                <span class="attr">"hidden"</span>: <span class="literal">false</span>,</span><br><span class="line">                <span class="attr">"name"</span>: <span class="string">"Azure Cloud Shell"</span>,</span><br><span class="line">                <span class="attr">"source"</span>: <span class="string">"Windows.Terminal.Azure"</span>,</span><br><span class="line">                <span class="attr">"backgroundImage"</span>: <span class="string">"ms-appdata:///roaming/azu.jpg"</span>,</span><br><span class="line">                <span class="attr">"backgroundImageStretchMode"</span>: <span class="string">"uniformToFill"</span>,</span><br><span class="line">                <span class="attr">"backgroundImageOpacity"</span>: <span class="number">0.6</span>,</span><br><span class="line">                <span class="attr">"foreground"</span>: <span class="string">"#e03c8a"</span>  <span class="comment">//字体颜色 fontFace 字体样式, fontSize 字体大小</span></span><br><span class="line">            },</span><br><span class="line">            {</span><br><span class="line">                <span class="attr">"guid"</span>: <span class="string">"{a060905f-d089-43d9-9422-cd748e7f0230}"</span>,</span><br><span class="line">                <span class="attr">"name"</span>: <span class="string">"SSH-aliyun"</span>,</span><br><span class="line">                <span class="attr">"commandline"</span>: <span class="string">"powershell.exe ssh yq@123.56.22.122"</span>,</span><br><span class="line">                <span class="attr">"icon"</span>: <span class="string">"ms-appdata:///roaming/sshicon.ico"</span>,  <span class="comment">// 添加小图标</span></span><br><span class="line">                <span class="attr">"backgroundImage"</span>: <span class="string">"ms-appdata:///roaming/ssh.jpg"</span>,</span><br><span class="line">                <span class="attr">"backgroundImageStretchMode"</span>: <span class="string">"uniformToFill"</span>,</span><br><span class="line">                <span class="attr">"backgroundImageOpacity"</span>: <span class="number">0.6</span></span><br><span class="line">            },</span><br><span class="line">            {</span><br><span class="line">                <span class="attr">"acrylicOpacity"</span> : <span class="number">0.75</span>,               <span class="comment">//毛玻璃透明效果透明度</span></span><br><span class="line">                <span class="attr">"closeOnExit"</span> : <span class="literal">true</span>,</span><br><span class="line">                <span class="attr">"commandline"</span> : <span class="string">"bash.exe"</span>,</span><br><span class="line">                <span class="attr">"cursorColor"</span> : <span class="string">"#7EA2B4"</span>,           <span class="comment">//光标颜色</span></span><br><span class="line">                <span class="attr">"cursorShape"</span> : <span class="string">"bar"</span>,               <span class="comment">//光标形状</span></span><br><span class="line">                <span class="attr">"fontFace"</span> : <span class="string">"Consolas"</span>,</span><br><span class="line">                <span class="attr">"fontSize"</span> : <span class="number">16</span>,                      <span class="comment">//字体大小</span></span><br><span class="line">                <span class="attr">"guid"</span> : <span class="string">"{019f913c-595c-4498-a934-e01e71cd4cbf}"</span>,</span><br><span class="line">                <span class="attr">"historySize"</span> : <span class="number">9001</span>,</span><br><span class="line">                <span class="attr">"icon"</span> : <span class="string">"ms-appdata:///roaming/bashicon.ico"</span>, <span class="comment">//图标地址</span></span><br><span class="line">                <span class="attr">"name"</span> : <span class="string">"Git-bash"</span>,</span><br><span class="line">                <span class="attr">"padding"</span> : <span class="string">"0, 0, 0, 0"</span>,</span><br><span class="line">                <span class="attr">"snapOnInput"</span> : <span class="literal">true</span>,</span><br><span class="line">                <span class="attr">"startingDirectory"</span> : <span class="string">"%USERPROFILE%"</span>,</span><br><span class="line">                <span class="attr">"useAcrylic"</span> : <span class="literal">true</span>,</span><br><span class="line">                <span class="attr">"backgroundImage"</span>: <span class="string">"ms-appdata:///roaming/bash.jpg"</span>,</span><br><span class="line">                <span class="attr">"backgroundImageStretchMode"</span>: <span class="string">"uniformToFill"</span>,</span><br><span class="line">                <span class="attr">"backgroundImageOpacity"</span>: <span class="number">0.6</span></span><br><span class="line">            }</span><br><span class="line">        ]</span><br><span class="line">    },</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Add custom color schemes to this array</span></span><br><span class="line">    <span class="attr">"schemes"</span>: [],</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Add any keybinding overrides to this array.</span></span><br><span class="line">    <span class="comment">// To unbind a default keybinding, set the command to "unbound"</span></span><br><span class="line">    <span class="attr">"keybindings"</span>: [</span><br><span class="line">        { <span class="attr">"command"</span>: <span class="string">"closePane"</span>, <span class="attr">"keys"</span>: [<span class="string">"ctrl+w"</span>] },</span><br><span class="line">        { <span class="attr">"command"</span>: <span class="string">"closeWindow"</span>, <span class="attr">"keys"</span>: [<span class="string">"alt+f4"</span>] },</span><br><span class="line">        { <span class="attr">"command"</span>: <span class="string">"copy"</span>, <span class="attr">"keys"</span>: [<span class="string">"ctrl+c"</span>] },</span><br><span class="line">        { <span class="attr">"command"</span>: <span class="string">"paste"</span>, <span class="attr">"keys"</span>: [<span class="string">"ctrl+v"</span>] },</span><br><span class="line">        { <span class="attr">"command"</span>: <span class="string">"newTab"</span>, <span class="attr">"keys"</span>: [<span class="string">"ctrl+t"</span>] }</span><br><span class="line">    ]</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="schemes"><a href="#schemes" class="headerlink" title="schemes"></a>schemes</h2><p><a href="https://iterm2colorschemes.com/" target="_blank" rel="noopener">scheme官网</a>有着最丰富的颜色配置</p><p>参照着schemes的配置学习如何自定义配置</p><p>也可以<a href="https://www.cnblogs.com/KiraYoshikage/p/11443741.html" target="_blank" rel="noopener">参考大佬学习</a></p><h2 id="keybindings快捷键"><a href="#keybindings快捷键" class="headerlink" title="keybindings快捷键"></a><code>keybindings</code>快捷键</h2><p><img src="/img/sys/key.png" alt="快捷键配置"></p><blockquote><p>参考文档：<a href="https://sspai.com/post/59380" target="_blank" rel="noopener">少数派</a></p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 资源力 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>盗梦空间</title>
      <link href="/2020/03/15/yq-dream/"/>
      <url>/2020/03/15/yq-dream/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><h1 id="1-奇怪の梦"><a href="#1-奇怪の梦" class="headerlink" title="1. 奇怪の梦"></a>1. 奇怪の梦</h1><h2 id="1-1-双重人格"><a href="#1-1-双重人格" class="headerlink" title="1.1 双重人格"></a>1.1 双重人格</h2><p>一个人有两个人格，而且喜欢的是不同的人，然后👴忘了，以后再写</p><h2 id="1-2-三人决战怪兽"><a href="#1-2-三人决战怪兽" class="headerlink" title="1.2 三人决战怪兽"></a>1.2 <del>三人决战怪兽</del></h2><p>  今天做了一个更加奇怪的梦，主要是我好像进入了一个奇怪的空间，这个空间的时间是静止的，然后等到我出来的时候—–我好像又忘记了hhh，总的来说就是出来后先是见到了几个人，包括小说了的一个人名，好像叫“帝释月”（大概是牧神记里的，对就是她，草，淦，这梦神了）接着就遇到了一个非常可怕的东西，这个东西就是那种打不死的怪，他会把他的身体分裂开来，然后独立行动等等的，然后我就醒了，总体来说这个梦挺奇怪的hhhh</p><h1 id="2-伤心の梦"><a href="#2-伤心の梦" class="headerlink" title="2. 伤心の梦"></a>2. 伤心の梦</h1><h2 id="2-1-回到民国"><a href="#2-1-回到民国" class="headerlink" title="2.1 回到民国"></a>2.1 <del>回到民国</del></h2><p>  这个梦可能是在某个地方看过的电视剧，反正不止梦到过这一次了，有好几次都梦到了这个。但回想起来，只能想起一些断断续续的片段，而想不起具体的细节</p><p>  我是在梦的某个时期然后直接进入民国，跟上了一位大将军，然后一直 打仗（好像没有），反正是跟了他很短又很长的一段时间，做了一段时间的事情，期间我也认识到了几位好朋友，其中有三姑娘跟我的关系特别好（没有🍑，应为我当时很无知），一个是最好的，这个姑娘救了我很多次，另外是一个府邸老爷的两个女儿，然后不知道过了多久，我就跟他们分开了，（好像是我打仗不太行）没有了联系然后我就直接做了这位府邸老爷的教书先生，教这些老爷府邸下的孩子读书，我就发现我教书很nice。很多年后，我教书也有了些成就，但是老爷并不希望我教的这些孩子过于聪明（焚书坑儒吗hhh），所以这个老爷十分讨厌我，我当时就想是不是我太厉害，威胁到他的地位hhh，然后他就要派人来杀我，这个时候那位救了我很多次的姑娘就来通知我，并且想带着我走，我也答应了下来，因为我也意识到了危险，然后再某一天，我偷偷地离开了这个府邸，然后发现真相是那位将军又回来了，是想将这位府邸满门抄斩，然后当我知道了这件事请后，我跑了进府邸，发现已经晚了一步，这个府邸的老爷，孩子们，还有所有人，都已经被杀害，突然间我就很痛苦，但是那个时候我也许已经意识到了什么，然后我就什么也没说。最后我还是离开了这个队伍，自己离去。</p><p>  这种体会可能现在梦醒了，体会不到，但是还是能够回想起来当时的痛苦，我的表情，那位姑娘似笑似哭的表情。真的非常痛苦，这个人也许不是我，但是我却能够感受到他的痛苦。</p><p>  一个人也许是由很多个灵魂组成的，但是却有着一个主灵魂，这个灵魂是个体控制权最大的灵魂，当主灵魂清醒时，会直接压制其他地灵魂，但是当主灵魂休息（睡觉）的时候，其他灵魂就会开始拥有他们的意识，并且可以将他们的想象或者可以说是记忆默默地偷偷地传输到主灵魂，让主灵魂感受到他们的意识，有时候是悲伤的，但有时候也是开心的。<del>（自己地胡乱猜想，感觉可以写小说了hhh</del></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 想象力 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Life </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux-Note</title>
      <link href="/2020/03/15/learn-linux/"/>
      <url>/2020/03/15/learn-linux/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><h1 id="1-Linux文件系统的概况"><a href="#1-Linux文件系统的概况" class="headerlink" title="1. Linux文件系统的概况"></a>1. Linux文件系统的概况</h1><p><img src="/img/linux/linuxfile.png" alt="文件树状图"></p><blockquote><p><a href="https://turingplanet.org/2019/11/04/%e6%96%87%e6%9c%ac%e6%93%8d%e4%bd%9c/" target="_blank" rel="noopener">参考教程</a></p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 学习力 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>服务器学习</title>
      <link href="/2020/03/11/learn-server/"/>
      <url>/2020/03/11/learn-server/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><h1 id="1-入门概述"><a href="#1-入门概述" class="headerlink" title="1. 入门概述"></a>1. 入门概述</h1><p>一台云服务器（以下简称 ECS 实例）由实例规格、镜像、块存储、快照、安全组、弹性网卡等基础计算组件组成并协同提供服务。一般来说，阿里云服务器、云服务器、云服务器 ECS、ECS 实例等均指代云服务器 ECS。其中：</p><ul><li>实例规格：定义了 ECS 实例的 vCPU 和内存的配置，是计算能力的体现。</li><li>镜像：提供启动 ECS 实例所需的所有信息，包括操作系统和预装软件。</li><li>块存储：提供存储能力，包括系统盘和数据盘。存储类型包括云盘和本地盘等多种不同类型的磁盘。就像硬盘一样，您可以对挂载到 ECS 实例上的云盘做分区、格式化、创建文件系统等操作，并对数据进行持久化存储。</li><li>网络：使用专有网络（简称 VPC），相当于您自己构建了一个数据中心网络，有自己的路由、交换机和访问策略。</li><li>安全组：用来允许或拒绝公网请求和内网请求，为实例提供防护能力。绝大多数情况下，当实例加入一个新创建的安全组时，在提供业务访问前您都必须添加必要的安全组规则。一般来说，安全组等同于服务器防火<br>墙。</li></ul><h1 id="2-操作"><a href="#2-操作" class="headerlink" title="2. 操作"></a>2. 操作</h1><blockquote><p><a href="https://www.cnblogs.com/minhren/p/12337260.html" target="_blank" rel="noopener">参考博客</a></p></blockquote><h2 id="2-1-登录"><a href="#2-1-登录" class="headerlink" title="2.1 登录"></a>2.1 登录</h2><p><code>ssh root@ip地址</code></p><p>然后输入密码，可以到实例中重置密码</p><h2 id="2-2-更新系统"><a href="#2-2-更新系统" class="headerlink" title="2.2 更新系统"></a>2.2 更新系统</h2><p><code>apt-get update</code></p><h2 id="2-3-升级软件"><a href="#2-3-升级软件" class="headerlink" title="2.3 升级软件"></a>2.3 升级软件</h2><p><code>apt-get install upgrade</code><br>或者<br><code>apt-get upgrade</code></p><h2 id="2-4-接着安装桌面系统"><a href="#2-4-接着安装桌面系统" class="headerlink" title="2.4 接着安装桌面系统"></a>2.4 接着安装桌面系统</h2><p><code>apt-get install ubuntu-desktop</code></p><h2 id="2-5-打开"><a href="#2-5-打开" class="headerlink" title="2.5 打开"></a>2.5 打开</h2><p>等到图形界面安装完成输入 reboot 指令进行重启.接着我们用控制台里的远程连接管理:要选 VNC,如图</p><p><img src="https://img2018.cnblogs.com/i-beta/828103/202002/828103-20200220203209860-193153872.png" alt="图片链接"></p><p>然后输入远程连接密码</p><h1 id="3-连接服务器的方法"><a href="#3-连接服务器的方法" class="headerlink" title="3. 连接服务器的方法"></a>3. 连接服务器的方法</h1><h2 id="3-1-用-cmder-的-ssh"><a href="#3-1-用-cmder-的-ssh" class="headerlink" title="3.1 用 cmder 的 ssh"></a>3.1 用 cmder 的 ssh</h2><p><code>ssh root@ip</code><br>然后输入密码，即可连接</p><h2 id="3-2-使用网页端的-VNC-连接"><a href="#3-2-使用网页端的-VNC-连接" class="headerlink" title="3.2 使用网页端的 VNC 连接"></a>3.2 使用网页端的 VNC 连接</h2><p>在阿里云服务器实例中的远程连接中有一个 VNC 连接，网页版的连接占用小但是太卡了</p><h2 id="3-3-使用-Xshell-连接服务器"><a href="#3-3-使用-Xshell-连接服务器" class="headerlink" title="3.3 使用 Xshell 连接服务器"></a>3.3 使用 Xshell 连接服务器</h2><ul><li>Xshell:跟 cmder 差不多都是 ssh 连接然后命令行操作</li></ul><ul><li>Xftp:可以在本地与服务器之间传输文件</li><li>Xmanager:可以左到与 VNC 一样显示服务器的图形界面</li></ul><h1 id="服务器的一些用法（菜鸟）"><a href="#服务器的一些用法（菜鸟）" class="headerlink" title="服务器的一些用法（菜鸟）"></a>服务器的一些用法（菜鸟）</h1><h2 id="1-搭建网站"><a href="#1-搭建网站" class="headerlink" title="1. 搭建网站"></a>1. 搭建网站</h2><h3 id="1-1-第一步学习"><a href="#1-1-第一步学习" class="headerlink" title="1.1 第一步学习"></a>1.1 第一步学习</h3><ul><li>前端:html+css+js/vue 框架</li><li>后端:Django</li><li>数据库:Mysql</li><li>Linux 知识</li></ul><h3 id="1-2-使用框架"><a href="#1-2-使用框架" class="headerlink" title="1.2 使用框架"></a>1.2 使用框架</h3><p>word press + 主题</p><h3 id="1-3-另一种方式"><a href="#1-3-另一种方式" class="headerlink" title="1.3 另一种方式"></a>1.3 另一种方式</h3><blockquote><p>将本地的 hexo 博客内容部署到阿里云服务器：主要参考<a href="https://www.zhihu.com/question/60329559" target="_blank" rel="noopener">大佬的教程</a></p></blockquote><p>安装 nginx 和 git，我的是 Ubuntu，所以</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br><span class="line">apt-get install nginx</span><br><span class="line">apt-get install git</span><br></pre></td></tr></tbody></table></figure><p>新建 git 用户，并设置密码</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">adduser git</span><br><span class="line">passwd</span><br></pre></td></tr></tbody></table></figure><p>切换到 git 用户<code>su git</code></p><p>在用户目录下新建.git 目录</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd ~  # cd到用户目录</span><br><span class="line">mkdir .git</span><br><span class="line">cd .git</span><br></pre></td></tr></tbody></table></figure><p>将本地的密匙文件<code>id_rsa.pub</code>内容保存到<code>.git</code>目录下的<code>authorized_keys</code></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim authorized_keys</span><br></pre></td></tr></tbody></table></figure><p>使用vim将密匙粘贴在该文件中，然后保存退出就可以使用git用户ssh到服务器了</p><p><code>ssh git@ip地址</code></p><p>成功后，建立git库</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir hexo.git</span><br><span class="line">cd hexo.git</span><br><span class="line">git init --bare</span><br></pre></td></tr></tbody></table></figure><p>然后设置显示成网页</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd hooks </span><br><span class="line">vim post-receive</span><br></pre></td></tr></tbody></table></figure><p>将一下内容写入到<code>post-receive</code>中</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">rm -rf /home/git/hexo</span><br><span class="line">git clone /home/git/hexo.git /home/git/hexo</span><br><span class="line"></span><br><span class="line">rm -rf /usr/share/nginx/hexo/*</span><br><span class="line">mv /home/git/hexo/* /usr/share/nginx/hexo</span><br></pre></td></tr></tbody></table></figure><p>修改执行权限</p><p><code>chmod a+x post-receive</code></p><p>配置nginx</p><p><code>cd /usr/share/nginx</code></p><p>切换root用户</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">su</span><br><span class="line"></span><br><span class="line">创建hexo网页目录</span><br><span class="line">mkdir hexo </span><br><span class="line"></span><br><span class="line">将文件夹所有者设置为git</span><br><span class="line">chown git hexo </span><br><span class="line">chgrp git hexo</span><br></pre></td></tr></tbody></table></figure><p>到nginx中修改配置</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/nginx</span><br><span class="line">vim nginx.conf</span><br><span class="line"></span><br><span class="line">修改配置文件，修改location的目录,即加一行</span><br><span class="line">root /usr/share/nginx/hexo;</span><br></pre></td></tr></tbody></table></figure><p>然后将本地的hexo文件夹中的配置文件<code>_config.yml</code>修改<code>deploy</code></p><p><code>git@ip地址:hexo.git</code></p><p>如我的</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@服务器ip地址:hexo.git</span><br></pre></td></tr></tbody></table></figure><h2 id="2-内网穿透"><a href="#2-内网穿透" class="headerlink" title="2. 内网穿透"></a>2. 内网穿透</h2><h2 id="3-搭建一个文件系统"><a href="#3-搭建一个文件系统" class="headerlink" title="3. 搭建一个文件系统"></a>3. 搭建一个文件系统</h2><p>类似云盘</p><h3 id="3-1-搭建网盘owncloud"><a href="#3-1-搭建网盘owncloud" class="headerlink" title="3.1 搭建网盘owncloud"></a>3.1 搭建网盘owncloud</h3><blockquote><p>主要参考<a href="https://luomuxiaoxiao.com/?p=722" target="_blank" rel="noopener">这位大佬的教程</a><br>要先看<a href="https://luomuxiaoxiao.com/?p=707" target="_blank" rel="noopener">这篇</a></p></blockquote><p>只要跟着做一遍基本就能安装上，但是也有几个坑</p><p>几个坑：最后的登录时的用户名要在<code>/etc/mysql</code>下的<code>debian.cnf</code>中查看<br>直接输入：<br><code>sudo vim/vi /etc/mysql/debian.cnf</code><br>查看数据库的用户名密码，然后就可以了</p><p>可能我的服务器宽带不够hhh，搭建网盘还是没速度hhh，算了，等毕业以后在弄这些东西，主要是那个备案太烦了，太难了。所以现在光有域名没有备案，就不行，hhh只能通过ip地址访问hhh，太low了</p><h2 id="4-爬虫"><a href="#4-爬虫" class="headerlink" title="4. 爬虫"></a>4. 爬虫</h2><p>初步实现的爬虫程序：</p><ul><li><p>哔哩哔哩脚本</p></li><li><p>图片爬取</p></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 学习力 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Server </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Lua-Note</title>
      <link href="/2020/03/04/note-lua/"/>
      <url>/2020/03/04/note-lua/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><h1 id="1-基础知识"><a href="#1-基础知识" class="headerlink" title="1. 基础知识"></a>1. 基础知识</h1><h2 id="1-1-注释"><a href="#1-1-注释" class="headerlink" title="1.1 注释"></a>1.1 注释</h2><ul><li><p>单行注释 <code>--单行注释</code></p></li><li><p>多行注释</p></li></ul><figure class="highlight lua"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--[[</span></span><br><span class="line"><span class="comment">多行注释</span></span><br><span class="line"><span class="comment">下面两个--可有可无</span></span><br><span class="line"><span class="comment">--]]</span></span><br></pre></td></tr></tbody></table></figure><h3 id="1-2-标示符"><a href="#1-2-标示符" class="headerlink" title="1.2 标示符"></a>1.2 标示符</h3><p>变量，最好不要使用下划线夹大写字母的标示符<br>Lua 不允许使用特殊字符和@ $ % 来定义标示符</p><h3 id="1-3-关键字"><a href="#1-3-关键字" class="headerlink" title="1.3 关键字"></a>1.3 关键字</h3><p>不可以当作变量，function local nil repeat until 等等</p><h3 id="1-4-全局变量"><a href="#1-4-全局变量" class="headerlink" title="1.4 全局变量"></a>1.4 全局变量</h3><p>默认变量为全局变量<br>访问一个没有声明的全局变量返回 nil，无</p><figure class="highlight lua"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(aa)</span><br><span class="line"><span class="comment">-- nil</span></span><br></pre></td></tr></tbody></table></figure><p>删除全局变量：<code>a = nil</code></p><h3 id="1-5-Lua-数据类型"><a href="#1-5-Lua-数据类型" class="headerlink" title="1.5 Lua 数据类型"></a>1.5 Lua 数据类型</h3><p>lua 是动态类型语言，变量不需要类型定义，只需复制<br>lua 的数据基本类型：<br><strong>nil</strong> , <strong>boolean</strong> , <strong>number</strong> , <strong>string</strong> , userdata(用户自定义) , <strong>function(函数)</strong> , thread(进程) ,<strong>table(实现类与类的继承)</strong><br>nil：一个无效值（false）<br>boolean： true 、false/nil<br>number： 只有 double 双精度型<br>string：字符串，’’/“”都可以 <code>[[一串可换行字符串]]</code><br>userdata：表示任意存储在变量中的 c 数据结构<br>thread：表示执行的独立线路，用于执行协同程序<br>table：lua 中的他变了是一个关联数组，数组的索引可以实数字、字符串或表类型，构造表达式：{}表示创建一个空表</p><h4 id="1-5-1-number-amp-string"><a href="#1-5-1-number-amp-string" class="headerlink" title="1.5.1 number &amp; string"></a>1.5.1 number &amp; string</h4><p>几个例子：</p><figure class="highlight lua"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="number">11</span>+<span class="string">"11"</span>)</span><br><span class="line"><span class="comment">--22.0</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"11"</span>+<span class="string">"11"</span>)</span><br><span class="line"><span class="comment">--22.0   自动将字符串转换为number</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"a"</span> .. <span class="string">"b"</span>)</span><br><span class="line"><span class="comment">--ab</span></span><br><span class="line"><span class="comment">-- 用 .. 链接字符串，前后有空格</span></span><br><span class="line"><span class="built_in">print</span>(<span class="number">123</span> .. <span class="number">456</span>)</span><br><span class="line"><span class="comment">--123456</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">len</span> = <span class="string">"123456"</span></span><br><span class="line"><span class="built_in">print</span>(#<span class="built_in">len</span>)</span><br><span class="line"><span class="comment">-- 6</span></span><br><span class="line"><span class="comment">-- # 计算字符串长度</span></span><br></pre></td></tr></tbody></table></figure><h4 id="1-5-2-table"><a href="#1-5-2-table" class="headerlink" title="1.5.2 table"></a>1.5.2 table</h4><p>table 表的操作</p><figure class="highlight lua"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建空表</span></span><br><span class="line"><span class="keyword">local</span> tbl1 = {}</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 键值对形式添加数据</span></span><br><span class="line">tbl1 = {}</span><br><span class="line">tbl1[<span class="string">"red"</span>] = <span class="number">10</span></span><br><span class="line"><span class="built_in">print</span>(tbl1[<span class="string">"red"</span>])</span><br><span class="line"><span class="comment">--10</span></span><br><span class="line">rrr = {red=<span class="number">10</span>,blue=<span class="number">20</span>,yellow=<span class="number">30</span>}</span><br><span class="line"><span class="built_in">print</span>(rrr[<span class="string">"red"</span>])</span><br><span class="line"><span class="comment">--10</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 列表中的yyy[1] 不是下标，而是key |123</span></span><br><span class="line">yyy = {<span class="string">"red"</span>,<span class="string">"blue"</span>,<span class="string">"orange"</span>}</span><br><span class="line"><span class="built_in">print</span>(yyy[<span class="number">1</span>],yyy[<span class="number">2</span>],yyy[<span class="number">3</span>])</span><br><span class="line"><span class="comment">--red blueorange</span></span><br></pre></td></tr></tbody></table></figure><p>table 遍历</p><figure class="highlight lua"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">rrr = {red=<span class="number">10</span>,blue=<span class="number">20</span>,yellow=<span class="number">30</span>}</span><br><span class="line"><span class="keyword">for</span> k,v <span class="keyword">in</span> <span class="built_in">pairs</span>(rrr) <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">print</span>(k .. <span class="string">":"</span> .. v);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">--[[好像是随机排的</span></span><br><span class="line"><span class="comment">red:10</span></span><br><span class="line"><span class="comment">blue:20</span></span><br><span class="line"><span class="comment">yellow:30</span></span><br><span class="line"><span class="comment">]]</span></span><br></pre></td></tr></tbody></table></figure><h4 id="1-5-3-function"><a href="#1-5-3-function" class="headerlink" title="1.5.3 function"></a>1.5.3 function</h4><p>函数类型，定义函数</p><figure class="highlight lua"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">kkk</span> <span class="params">(v)</span></span></span><br><span class="line">    <span class="built_in">print</span>(v+v)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">kkk(<span class="number">6</span>)</span><br><span class="line"><span class="comment">-- 12</span></span><br><span class="line"></span><br><span class="line">a = kkk</span><br><span class="line">a(<span class="number">8</span>)</span><br><span class="line"><span class="comment">--16</span></span><br></pre></td></tr></tbody></table></figure><p><strong>难点:函数中函数</strong></p><figure class="highlight lua"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">kkk</span><span class="params">(tab,func)</span></span></span><br><span class="line">    <span class="keyword">for</span> k,v <span class="keyword">in</span> <span class="built_in">pairs</span>(tab) <span class="keyword">do</span></span><br><span class="line">        func(k,v)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">ttt = {red = <span class="number">10</span> , blue = <span class="number">20</span> }</span><br><span class="line">kkk(ttt,<span class="function"><span class="keyword">function</span><span class="params">(k1,v1)</span></span></span><br><span class="line">            <span class="built_in">print</span>(k1 .. v1)</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- blue20</span></span><br><span class="line"><span class="comment">-- red10</span></span><br></pre></td></tr></tbody></table></figure><h3 id="1-6-运算符"><a href="#1-6-运算符" class="headerlink" title="1.6 运算符"></a>1.6 运算符</h3><h4 id="1-6-1-算数运算符"><a href="#1-6-1-算数运算符" class="headerlink" title="1.6.1 算数运算符"></a>1.6.1 算数运算符</h4><p>+-*/ 加减乘除<br>% 取余<br>^ 乘幂<br>- 符号</p><h4 id="1-6-2-关系运算符"><a href="#1-6-2-关系运算符" class="headerlink" title="1.6.2 关系运算符"></a>1.6.2 关系运算符</h4><p>== / ~= / &gt; / &lt; / &gt;= / &lt;=</p><h4 id="1-6-3-逻辑运算符"><a href="#1-6-3-逻辑运算符" class="headerlink" title="1.6.3 逻辑运算符"></a>1.6.3 逻辑运算符</h4><p>and 与<br>or 或<br>not 非</p><h4 id="1-6-4-其他运算符"><a href="#1-6-4-其他运算符" class="headerlink" title="1.6.4 其他运算符"></a>1.6.4 其他运算符</h4><p>.. 连接两个字符串<br># 返回字符串长度或表的长度</p><h4 id="1-6-5-运算符优先级"><a href="#1-6-5-运算符优先级" class="headerlink" title="1.6.5 运算符优先级"></a>1.6.5 运算符优先级</h4><p>从上到下，优先级减小 ^优先级最大<br>^<br>not - * /<br>+ -<br>..<br>&gt; &lt; &lt;= &gt;= ~= ==<br>and<br>or</p><h3 id="1-7"><a href="#1-7" class="headerlink" title="1.7"></a>1.7</h3><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 学习力 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Note </tag>
            
            <tag> Lua </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用Scrcpy将手机投屏到电脑</title>
      <link href="/2020/03/02/tools-scrcpy/"/>
      <url>/2020/03/02/tools-scrcpy/</url>
      
        <content type="html"><![CDATA[<p><a href="https://github.com/Genymobile/scrcpy" target="_blank" rel="noopener">Scrcpy</a>是一款可以将安卓手机投屏到电脑上的开源软件，在电脑上控制手机，无需 root 手机</p><a id="more"></a><p><strong>用前提示：</strong><br>安卓系统版本要求 5.0 以上</p><p>几个缺陷：（建议忽略）<em>版本 v1.12.1</em></p><ul><li>不能直接用电脑键盘输入中文，而且中文模式下，数字和符号无法输入</li><li>不能很好地与电脑触摸板习惯相联系（如双指放大缩小操作），但问题不大</li><li>手机内容无法复制到电脑，但电脑内容可以复制到手机</li></ul><p><em>也许以后会作者大佬修复</em></p><p><strong>使用方法：</strong></p><h3 id="1-有线投屏"><a href="#1-有线投屏" class="headerlink" title="1. 有线投屏"></a>1. 有线投屏</h3><ul><li>用 usb 数据线将手机和电脑相连接</li><li>打开手机地 usb 调试功能（开发者选项里）</li><li>如果提示是否允许 usb 调试，点击确定</li><li>PC 端，windows 根据系统位数直接<a href="https://github.com/Genymobile/scrcpy/releases" target="_blank" rel="noopener">下载压缩包</a></li><li>将解压后的安装包里面有一个<strong>scrcpy.exe</strong>文件，使用 cmd 运行<br>然后就好了</li></ul><blockquote><p>更加详细的教程，参考<a href="https://www.iplaysoft.com/scrcpy.html" target="_blank" rel="noopener">这篇文章</a></p></blockquote><p>快捷键的使用<br><img src="https://raw.githubusercontent.com/yq010105/Blog_images/master/img/scrcpy.png" alt="快捷键的使用"></p><p>一些 scrcpy 代码操作</p><p><strong>Scrcpy 的命令参数</strong></p><ul><li>关闭手机屏幕 scrcpy -S</li><li>限制画面分辨率 scrcpy -m 1024 (比如限制为 1024)</li><li>修改视频码率 scrcpy -b 4M (默认 8Mbps，改成 4Mbps)</li><li>裁剪画面 scrcpy -c 1224:1440:0:0</li><li>表示分辨率 1224x1440 并且偏移坐标为 (0,0)</li><li>多设备切换 scrcpy -s 设备 ID (使用 adb devices 命令查看设备 ID)</li><li>窗口置顶 scrcpy -T</li><li>显示触摸点击 scrcpy -t</li><li>在演示或录制教程时，可在画面上对应显示出点击动作</li><li>全屏显示 scrcpy -f</li><li>文件传输默认路径 scrcpy –push-target /你的/目录，将文件拖放到 scrcpy 可以传输文件，此命令指定默认保存目录</li><li>只读模式(仅显示不控制) scrcpy -n</li><li>屏幕录像 scrcpy -r 视频文件名.mp4 或 .mkv</li><li>屏幕录像 (禁用电脑显示) scrcpy -Nr 文件名.mkv</li><li>设置窗口标题 scrcpy –window-title ‘异次元好棒！’</li></ul><h3 id="2-无线投屏"><a href="#2-无线投屏" class="headerlink" title="2. 无线投屏"></a>2. 无线投屏</h3><p>注意要在同一局域网下</p><ul><li>查询设备当前的 IP 地址 (设置 → 关于手机 → 状态)</li><li>启用 adb TCP/IP 连接，执行命令：adb tcpip 5555，其中 5555 为端口号</li><li>拔掉你的数据线</li><li>通过 WiFi 进行连接，执行命令：adb connect 设备 IP 地址:5555</li><li>重新启动 scrcpy 即可</li><li>如果 WiFi 较慢，可以调整码率：scrcpy -b 3M -m 800，意思是限制 3 Mbps，画面分辨率限制 800，数值可以随意调整。</li><li>如需切换回 USB 模式，执行：adb usb</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 技术力 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> Source </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python在终端中如何使用pip命令</title>
      <link href="/2020/02/27/python-pip/"/>
      <url>/2020/02/27/python-pip/</url>
      
        <content type="html"><![CDATA[<blockquote><p><a href="https://blog.csdn.net/qq_15260769/article/details/80731407" target="_blank" rel="noopener">参考博客</a></p></blockquote><a id="more"></a><h1 id="1-pip-自身的安装，更新，卸载"><a href="#1-pip-自身的安装，更新，卸载" class="headerlink" title="1. pip 自身的安装，更新，卸载"></a>1. pip 自身的安装，更新，卸载</h1><h2 id="1-1-pip-安装"><a href="#1-1-pip-安装" class="headerlink" title="1.1 pip 安装"></a>1.1 pip 安装</h2><p><a href="https://pypi.python.org/pypi/pip" target="_blank" rel="noopener">官网下载 pip</a>,下载 .tar.gz 压缩包</p><ul><li>解压后再文件目录中有一个<code>setup.py</code>文件</li><li>使用<code>python setup.py install</code>安装 pip</li><li>环境变量设置，找一下 pip.exe 所在位置，将其添加到系统的环境变量 path 中</li></ul><h1 id="1-2-pip-更新"><a href="#1-2-pip-更新" class="headerlink" title="1.2 pip 更新"></a>1.2 pip 更新</h1><p><code>python -m pip install --upgrade pip</code></p><h1 id="1-3-pip-卸载"><a href="#1-3-pip-卸载" class="headerlink" title="1.3 pip 卸载"></a>1.3 pip 卸载</h1><p><code>python -m pip uninstall pip</code></p><h1 id="2-pip-对-python-包的操作"><a href="#2-pip-对-python-包的操作" class="headerlink" title="2. pip 对 python 包的操作"></a>2. pip 对 python 包的操作</h1><h2 id="2-1-pip-安装包"><a href="#2-1-pip-安装包" class="headerlink" title="2.1 pip 安装包"></a>2.1 pip 安装包</h2><p><code>pip install 包名</code></p><h2 id="2-2-pip-更新包"><a href="#2-2-pip-更新包" class="headerlink" title="2.2 pip 更新包"></a>2.2 pip 更新包</h2><p><code>pip install --upgrade 包名</code></p><h2 id="2-3-pip-卸载包"><a href="#2-3-pip-卸载包" class="headerlink" title="2.3 pip 卸载包"></a>2.3 pip 卸载包</h2><p><code>pip uninstall 包名</code></p><h2 id="2-4-其他细节操作"><a href="#2-4-其他细节操作" class="headerlink" title="2.4 其他细节操作"></a>2.4 其他细节操作</h2><h3 id="2-4-1-查看安装的包"><a href="#2-4-1-查看安装的包" class="headerlink" title="2.4.1 查看安装的包"></a>2.4.1 查看安装的包</h3><p><code>pip list</code></p><h3 id="2-4-2-查看具体包的信息"><a href="#2-4-2-查看具体包的信息" class="headerlink" title="2.4.2 查看具体包的信息"></a>2.4.2 查看具体包的信息</h3><p><code>pip show 包名</code></p><h3 id="2-4-3-查看需要升级的包"><a href="#2-4-3-查看需要升级的包" class="headerlink" title="2.4.3 查看需要升级的包"></a>2.4.3 查看需要升级的包</h3><p><code>pip list --outdated</code></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 学习力 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows系统的各种问题</title>
      <link href="/2020/02/25/q-system/"/>
      <url>/2020/02/25/q-system/</url>
      
        <content type="html"><![CDATA[<p><strong>重置 Windows 后的软件装备过程</strong><br><strong>第一次重装系统</strong></p><a id="more"></a><h1 id="1-2-25-日"><a href="#1-2-25-日" class="headerlink" title="1. 2/25 日"></a>1. 2/25 日</h1><ul><li><p><strong>creo 的重装</strong><br>重装完成后的多出来的软件<br><img src="/img/sys/creo%E5%AE%8C%E6%88%90%E5%90%8E.png" alt="creo卸载处"></p></li><li><p><strong>VB 的重装</strong><br>重装后的<br><img src="/img/sys/vb%E5%AE%8C%E6%88%90%E5%90%8E.png" alt="vb卸载处"></p></li><li><p><strong>PSPR 的重装</strong><br>第一次装的时候安装包出错，待会儿再重下一遍<br>吧 2020 的删了，下了 2019 的，装上了<br>顺便装了一下 pr<br><img src="/img/sys/pspr%E5%AE%8C%E6%88%90%E5%90%8E.png" alt="pspr卸载处"></p></li><li><p><strong>jdk 的重装</strong><br>jdk 重装后 eclipse 终于打开了<br><img src="/img/sys/jdk%E5%AE%8C%E6%88%90%E5%90%8E.png" alt="jdk卸载处"></p></li></ul><h1 id="2-4-1-愚人节事件"><a href="#2-4-1-愚人节事件" class="headerlink" title="2. 4/1 愚人节事件"></a>2. 4/1 愚人节事件</h1><p><em>python文件打开的时候，屏幕卡住</em></p><p>今天是傻逼的一天，我想直接在浏览器中打开我的ejs文件，但是打了半天打不开，然后我以为是vscode的默认浏览器插件无法使用了，找了半天重装了几次，还是不行，然后我就开始下载chrome，结果下载完了还是不行，然后我就服了，搞了半天，什么系统的默认设置，还是什么VScode的配置文件，都不行，然后我就尝试了一下重置默认的系统程序，然后结果我的python文件就打不开了，而且在打开python文件的文件夹的时候会卡死，我还以为是电脑又要重装了，找了半天原因，百度了半天，还是没有解决，然后突然想到我前几天安装的vs，vs安装的时候又重新装了一遍python，结果两个python系统就冲突了，所以打开的时候会系统卡住，然后把vs的python删掉，ok终于弄好了，wc，我还以为又要重装系统了，慢慢找原因，也幸好问题不是很大</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 无力 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python中mysql数据库的学习</title>
      <link href="/2020/02/24/python-mysql/"/>
      <url>/2020/02/24/python-mysql/</url>
      
        <content type="html"><![CDATA[<p><strong>MySQL 数据库的学习</strong><br>根据<a href="https://www.bilibili.com/video/av49181542" target="_blank" rel="noopener">b 站视频</a>学习 MySQL 数据库</p><a id="more"></a><h1 id="0-安装完的一些基本操作"><a href="#0-安装完的一些基本操作" class="headerlink" title="0. 安装完的一些基本操作"></a>0. 安装完的一些基本操作</h1><h2 id="0-1-服务的启动与停止"><a href="#0-1-服务的启动与停止" class="headerlink" title="0.1 服务的启动与停止"></a>0.1 服务的启动与停止</h2><ul><li>管理员启动 cmd</li><li>输入<code>net stop mysql</code> 关闭服务</li><li>输入<code>net start mysql</code> 启动服务</li></ul><h2 id="0-2-登录和退出"><a href="#0-2-登录和退出" class="headerlink" title="0.2 登录和退出"></a>0.2 登录和退出</h2><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 学习力 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python中plotly的学习</title>
      <link href="/2020/02/22/python-plotly/"/>
      <url>/2020/02/22/python-plotly/</url>
      
        <content type="html"><![CDATA[<p><strong>数据可视化的 plotly</strong></p><blockquote><p><a href="https://blog.csdn.net/weixin_34407348/article/details/91371969" target="_blank" rel="noopener">参考教程</a></p></blockquote><a id="more"></a><h1 id="1-基本操作，初步理解代码"><a href="#1-基本操作，初步理解代码" class="headerlink" title="1. 基本操作，初步理解代码"></a>1. 基本操作，初步理解代码</h1><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生成一个直方图</span></span><br><span class="line"><span class="keyword">import</span> plotly.offline <span class="keyword">as</span> ptly</span><br><span class="line"><span class="keyword">import</span> plotly.graph_objs <span class="keyword">as</span> go</span><br><span class="line"></span><br><span class="line">data=[]</span><br><span class="line">trace1 = go.Bar(x=[<span class="string">'first'</span>,<span class="string">'second'</span>,<span class="string">'third'</span>],</span><br><span class="line">                y=[<span class="number">20</span>,<span class="number">40</span>,<span class="number">30</span>]</span><br><span class="line">    )</span><br><span class="line">data.append(trace1)</span><br><span class="line">layout = go.Layout(font=dict(family=<span class="string">'Courier New, monospace'</span>, size=<span class="number">18</span>, color=<span class="string">'#3D3D3D'</span>),</span><br><span class="line">                   title=<span class="string">'example'</span></span><br><span class="line">    )</span><br><span class="line">fig = go.Figure(data=data, layout=layout)</span><br><span class="line">ptly.plot(fig, filename = <span class="string">'example.html'</span>)</span><br></pre></td></tr></tbody></table></figure><p>或者用 dict 表示</p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">trace1 = {<span class="string">'type'</span>:<span class="string">'bar'</span>,</span><br><span class="line">          <span class="string">'x'</span>:[<span class="string">'first'</span>,<span class="string">'second'</span>,<span class="string">'third'</span>],</span><br><span class="line">          <span class="string">'y'</span>:[<span class="number">20</span>,<span class="number">40</span>,<span class="number">30</span>]</span><br><span class="line">    }</span><br></pre></td></tr></tbody></table></figure><h1 id="2-图形属性"><a href="#2-图形属性" class="headerlink" title="2. 图形属性`"></a>2. 图形属性`</h1><h2 id="2-1-柱状图"><a href="#2-1-柱状图" class="headerlink" title="2.1 柱状图"></a>2.1 柱状图</h2><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">trace1 = go.Bar(x=[],</span><br><span class="line">                y=[],</span><br><span class="line">                name=<span class="string">'thename'</span>,</span><br><span class="line">                width=<span class="number">0.5</span>,</span><br><span class="line">                marker=dict(color=<span class="string">"#c45ca2"</span>),</span><br><span class="line">                opacity=<span class="number">1</span></span><br><span class="line">            )</span><br></pre></td></tr></tbody></table></figure><h2 id="2-2-饼图"><a href="#2-2-饼图" class="headerlink" title="2.2 饼图"></a>2.2 饼图</h2><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">trace1 = go.Pie(labels=[],</span><br><span class="line">                values=[],</span><br><span class="line">                hoverinfo=<span class="string">'label+percent'</span>,</span><br><span class="line">                textinfo=<span class="string">'value'</span>,</span><br><span class="line">                textfont=dict(size=<span class="number">20</span>),</span><br><span class="line">                marker=dict(colors=colors,</span><br><span class="line">                           line=dict(color=<span class="string">'#000000'</span>, width=<span class="number">2</span>)),</span><br><span class="line">                hole= <span class="number">.4</span>,</span><br><span class="line">                name=<span class="string">"pie name"</span>,</span><br><span class="line">                domain=dict(x = [<span class="number">0</span>, <span class="number">.48</span>]),</span><br><span class="line">                opacity=<span class="number">1</span></span><br><span class="line">            )</span><br></pre></td></tr></tbody></table></figure><h2 id="2-3-散点图，折线图"><a href="#2-3-散点图，折线图" class="headerlink" title="2.3 散点图，折线图"></a>2.3 散点图，折线图</h2><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">trace1 = go.Scatter(x = [],</span><br><span class="line">                    y = [],</span><br><span class="line">                    mode = <span class="string">'markers'</span>,   <span class="comment">#mode可选'markers','lines','lines+markers'</span></span><br><span class="line">                    name = <span class="string">'the name'</span>,</span><br><span class="line">                    marker = dict(size = <span class="number">10</span>,        <span class="comment">#若设为变量则可用散点大小表示变量大小</span></span><br><span class="line">                                  color = <span class="string">'rgba(152, 0, 0, .8)'</span>,</span><br><span class="line">                                  line = dict(width = <span class="number">2</span>,</span><br><span class="line">                                              color = <span class="string">'rgb(0, 0, 0)'</span></span><br><span class="line">                                              ),</span><br><span class="line">                                  opacity=[]</span><br><span class="line">                                )</span><br><span class="line">            )</span><br></pre></td></tr></tbody></table></figure><h1 id="3-布局属性"><a href="#3-布局属性" class="headerlink" title="3. 布局属性"></a>3. 布局属性</h1><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 通用</span></span><br><span class="line">layout = go.Layout(title=<span class="string">'your title'</span>,  <span class="comment">#大标题</span></span><br><span class="line">                   font=dict(</span><br><span class="line">                     family=<span class="string">'Courier New, monospace'</span>,</span><br><span class="line">                     size=<span class="number">18</span>,</span><br><span class="line">                     color=<span class="string">'#3D3D3D'</span></span><br><span class="line">                               ),<span class="comment">#字体</span></span><br><span class="line">                   width=<span class="number">1400</span>,</span><br><span class="line">                   height=<span class="number">800</span>,              <span class="comment">#图形的大小</span></span><br><span class="line">                   margin=go.Margin(</span><br><span class="line">                                    l=<span class="number">100</span>,</span><br><span class="line">                                    r=<span class="number">100</span>,</span><br><span class="line">                                    b=<span class="number">200</span>,</span><br><span class="line">                                    t=<span class="number">200</span>,</span><br><span class="line">                                    pad=<span class="number">0</span></span><br><span class="line">                                    ),      <span class="comment">#边距设置</span></span><br><span class="line">                   plot_bgcolor=<span class="string">'#ffffff'</span>,   <span class="comment">#绘图部分背景颜色</span></span><br><span class="line">                   paper_bgcolor=<span class="string">'#ffffff'</span>,   <span class="comment">#整体背景颜色</span></span><br><span class="line">                   showlegend=<span class="literal">True</span>,        <span class="comment">#是否显示图例，也可放在每个trace里单独设置</span></span><br><span class="line">                   <span class="comment">#图例相关参数设置：</span></span><br><span class="line">                   legend=dict(orientation=<span class="string">"v"</span>,</span><br><span class="line">                                x=<span class="number">0</span>,</span><br><span class="line">                                y=<span class="number">1</span>,</span><br><span class="line">                                traceorder=<span class="string">'normal'</span>,</span><br><span class="line">                                font=dict(</span><br><span class="line">                                        family=<span class="string">'sans-serif'</span>,</span><br><span class="line">                                        size=<span class="number">12</span>,</span><br><span class="line">                                        color=<span class="string">'#000'</span></span><br><span class="line">                                            ),</span><br><span class="line">                                bgcolor=<span class="string">'#E2E2E2'</span>,</span><br><span class="line">                                bordercolor=<span class="string">'#FFFFFF'</span>,</span><br><span class="line">                                borderwidth=<span class="number">2</span></span><br><span class="line">                            ),</span><br><span class="line">                   <span class="comment">#x轴相关参数设置（y轴对应yaxis）：</span></span><br><span class="line">                   xaxis=dict(title=<span class="string">'x Axis'</span>,</span><br><span class="line">                              titlefont=dict(</span><br><span class="line">                                        family=<span class="string">'Courier New, monospace'</span>,</span><br><span class="line">                                        size=<span class="number">18</span>,</span><br><span class="line">                                        color=<span class="string">'#7f7f7f'</span></span><br><span class="line">                                            ),</span><br><span class="line">                               range=[],   <span class="comment">#x轴范围，如[0,30]</span></span><br><span class="line">                               type=<span class="string">'-'</span>,</span><br><span class="line">                              <span class="comment">#x轴类型，可选["-","linear","log","date","category"]</span></span><br><span class="line">                               domain=[<span class="number">0</span>,<span class="number">0.45</span>]</span><br><span class="line">                              <span class="comment">#设置x轴在整个图像占的位置范围（主要在有多张图时使用，第二个图用xaxis2设置相关参数）</span></span><br><span class="line">                            )</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 柱状图</span></span><br><span class="line">layout = go.Layout(bargap=<span class="number">0.3</span>,      <span class="comment">#0~1</span></span><br><span class="line">                   bargroupgap=<span class="number">0.1</span>,  <span class="comment">#0~1</span></span><br><span class="line">                   barmode=<span class="string">''</span>,</span><br><span class="line">                   <span class="comment">#barmode: ["stack","group","overlay","relative"],设置多个trace的组合方式</span></span><br><span class="line">                   barnorm=<span class="string">''</span></span><br><span class="line">    )</span><br></pre></td></tr></tbody></table></figure><h2 id="3-1-设置坐标轴"><a href="#3-1-设置坐标轴" class="headerlink" title="3.1 设置坐标轴"></a>3.1 设置坐标轴</h2><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">axis_template=dict(</span><br><span class="line">    showgrid=<span class="literal">True</span>,  <span class="comment">#网格</span></span><br><span class="line">    zeroline=<span class="literal">True</span>,  <span class="comment">#是否显示基线,即沿着(0,0)画出x轴和y轴</span></span><br><span class="line">    nticks=<span class="number">20</span>,</span><br><span class="line">    showline=<span class="literal">True</span>,</span><br><span class="line">    title=<span class="string">'X axis'</span>,</span><br><span class="line">    mirror=<span class="string">'all'</span>,</span><br><span class="line">    zerolinecolor=<span class="string">"#FF0000"</span></span><br><span class="line">)</span><br><span class="line">layout=go.Layout(</span><br><span class="line">    xaxis=axis_template,</span><br><span class="line">    yaxis=axis_template</span><br><span class="line">)</span><br></pre></td></tr></tbody></table></figure><blockquote><p><a href="https://blog.csdn.net/u012897374/article/details/77857980" target="_blank" rel="noopener">原文链接</a></p></blockquote><h1 id="4-图像整体属性"><a href="#4-图像整体属性" class="headerlink" title="4. 图像整体属性"></a>4. 图像整体属性</h1><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ptly.plot(figure_or_data, show_link=<span class="literal">True</span>, link_text=<span class="string">'Export to plot.ly'</span>,</span><br><span class="line">         validate=<span class="literal">True</span>, output_type=<span class="string">'file'</span>, include_plotlyjs=<span class="literal">True</span>,</span><br><span class="line">         filename=<span class="string">'temp-plot.html'</span>, auto_open=<span class="literal">True</span>, image=<span class="literal">None</span>,</span><br><span class="line">         image_filename=<span class="string">'plot_image'</span>, image_width=<span class="number">800</span>, image_height=<span class="number">600</span>,</span><br><span class="line">         config=<span class="literal">None</span>)s</span><br></pre></td></tr></tbody></table></figure><h1 id="5-数据处理"><a href="#5-数据处理" class="headerlink" title="5. 数据处理"></a>5. 数据处理</h1><p><strong>包括 aggregate,filter,groupby,sort</strong></p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># aggregate</span></span><br><span class="line">transforms = [dict(</span><br><span class="line">    type = <span class="string">'aggregate'</span>,</span><br><span class="line">    groups = [],        <span class="comment">#用于分组的数组</span></span><br><span class="line">    aggregations = [dict(</span><br><span class="line">        target = <span class="string">'y'</span>, func = <span class="string">'sum'</span>, enabled = <span class="literal">True</span>),</span><br><span class="line">    ]</span><br><span class="line">  )]</span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">func参数可用：</span></span><br><span class="line"><span class="string">"count","sum","avg","median","mode","rms","stddev","min","max","first","last"</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># filter</span></span><br><span class="line">transforms = [dict(</span><br><span class="line">    type = <span class="string">'filter'</span>,</span><br><span class="line">    target = <span class="string">'y'</span>,</span><br><span class="line">    operation = <span class="string">'&gt;'</span>,</span><br><span class="line">    value = <span class="number">4</span></span><br><span class="line">  )]</span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">operation参数可用:</span></span><br><span class="line"><span class="string">"=","!=","&lt;","&gt;=","&gt;","&lt;=","[]","()","[)","(]","][",")(","](",")[","{}","}{"</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># groupby</span></span><br><span class="line">transforms = [dict(</span><br><span class="line">    type = <span class="string">'groupby'</span>,</span><br><span class="line">    groups = [],     <span class="comment">#用于分组的数组</span></span><br><span class="line">    styles = [</span><br><span class="line">        dict(target = <span class="string">'Moe'</span>, value = dict(marker = dict(color = <span class="string">'blue'</span>))),</span><br><span class="line">        dict(target = <span class="string">'Larry'</span>, value = dict(marker = dict(color = <span class="string">'red'</span>))),</span><br><span class="line">        dict(target = <span class="string">'Curly'</span>, value = dict(marker = dict(color = <span class="string">'black'</span>)))</span><br><span class="line">    ]</span><br><span class="line">  )]</span><br><span class="line"></span><br><span class="line"><span class="comment"># sort</span></span><br><span class="line">transforms = [dict(</span><br><span class="line">    type = <span class="string">'sort'</span>,</span><br><span class="line">    target = <span class="string">'x'</span>,</span><br><span class="line">    order = <span class="string">'ascending'</span>   <span class="comment">#升序ascending，降序descending</span></span><br><span class="line">  )]</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 学习力 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python中openpyxl库的学习</title>
      <link href="/2020/02/22/python-openpyxl/"/>
      <url>/2020/02/22/python-openpyxl/</url>
      
        <content type="html"><![CDATA[<p><strong>Python openpyxl 的操作方法</strong></p><blockquote><p><a href="https://www.jb51.net/article/169356.htm" target="_blank" rel="noopener">参考教程</a></p></blockquote><a id="more"></a><h1 id="1-打开文件夹"><a href="#1-打开文件夹" class="headerlink" title="1. 打开文件夹"></a>1. 打开文件夹</h1><p><strong><code>from openpyxl import Workbook</code></strong></p><h2 id="1-1-创建"><a href="#1-1-创建" class="headerlink" title="1.1 创建"></a>1.1 创建</h2><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 实例化</span></span><br><span class="line">wb = Workbook()</span><br><span class="line"><span class="comment"># 激活worksheet</span></span><br><span class="line">ws = wb.active</span><br></pre></td></tr></tbody></table></figure><h2 id="1-2-储存"><a href="#1-2-储存" class="headerlink" title="1.2 储存"></a>1.2 储存</h2><p>每个文件操作完之后需要储存</p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wb.save(<span class="string">'文件名.xlsx'</span>)</span><br></pre></td></tr></tbody></table></figure><h2 id="1-3-打开已有"><a href="#1-3-打开已有" class="headerlink" title="1.3 打开已有"></a>1.3 打开已有</h2><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wb2 = load_workbook(<span class="string">'文件名.xlsx'</span>)</span><br></pre></td></tr></tbody></table></figure><h1 id="2-创建表"><a href="#2-创建表" class="headerlink" title="2. 创建表"></a>2. 创建表</h1><h1 id="2-1-创建表（sheet"><a href="#2-1-创建表（sheet" class="headerlink" title="2.1 创建表（sheet"></a>2.1 创建表（sheet</h1><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 方式一：插入到最后(default)</span></span><br><span class="line">ws1 = wb.create_sheet(<span class="string">"Mysheet"</span>)</span><br><span class="line"><span class="comment"># 方式二：插入到最开始的位置</span></span><br><span class="line">ws2 = wb.create_sheet(<span class="string">"Mysheet"</span>, <span class="number">0</span>)</span><br></pre></td></tr></tbody></table></figure><h2 id="2-2-选择表"><a href="#2-2-选择表" class="headerlink" title="2.2 选择表"></a>2.2 选择表</h2><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sheet 名称可以作为 key 进行索引</span></span><br><span class="line">ws3 = wb[<span class="string">"New Title"</span>]</span><br><span class="line">ws4 = wb.get_sheet_by_name(<span class="string">"New Title"</span>)</span><br></pre></td></tr></tbody></table></figure><h2 id="2-3-查看表名（sheet）"><a href="#2-3-查看表名（sheet）" class="headerlink" title="2.3 查看表名（sheet）"></a>2.3 查看表名（sheet）</h2><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示所有表名</span></span><br><span class="line">print(wb.sheetnames)</span><br><span class="line">[<span class="string">'Sheet2'</span>, <span class="string">'New Title'</span>, <span class="string">'Sheet1'</span>]</span><br><span class="line"><span class="comment"># 遍历所有表</span></span><br><span class="line"><span class="keyword">for</span> sheet <span class="keyword">in</span> wb:</span><br><span class="line">    print(sheet.title)</span><br></pre></td></tr></tbody></table></figure><h1 id="3-单元格"><a href="#3-单元格" class="headerlink" title="3. 单元格"></a>3. 单元格</h1><h2 id="3-1-储存数据"><a href="#3-1-储存数据" class="headerlink" title="3.1 储存数据"></a>3.1 储存数据</h2><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  方式一 数据可以直接分配到单元格中(可以输入公式)</span></span><br><span class="line">ws[<span class="string">'A1'</span>] = <span class="number">42</span></span><br><span class="line"><span class="comment"># 方式二：可以附加行，从第一列开始附加(从最下方空白处，最左开始)(可以输入多行)</span></span><br><span class="line">ws.append([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>])</span><br><span class="line"><span class="comment"># 方式三：Python 类型会被自动转换</span></span><br><span class="line">ws[<span class="string">'A3'</span>] = datetime.datetime.now().strftime(<span class="string">"%Y-%m-%d"</span>)</span><br></pre></td></tr></tbody></table></figure><h2 id="3-2-访问单元格（call）"><a href="#3-2-访问单元格（call）" class="headerlink" title="3.2 访问单元格（call）"></a>3.2 访问单元格（call）</h2><h3 id="3-2-1-单单元格访问"><a href="#3-2-1-单单元格访问" class="headerlink" title="3.2.1 单单元格访问"></a>3.2.1 单单元格访问</h3><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 方法一</span></span><br><span class="line">c = ws[<span class="string">'A4'</span>]</span><br><span class="line"><span class="comment"># 方法二：row 行；column 列</span></span><br><span class="line">d = ws.cell(row=<span class="number">4</span>, column=<span class="number">2</span>, value=<span class="number">10</span>)</span><br><span class="line"><span class="comment"># 方法三：只要访问就创建</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">101</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">101</span>):</span><br><span class="line">        ws.cell(row=i, column=j)</span><br></pre></td></tr></tbody></table></figure><h3 id="3-2-2-多单元格访问"><a href="#3-2-2-多单元格访问" class="headerlink" title="3.2.2 多单元格访问"></a>3.2.2 多单元格访问</h3><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 通过切片</span></span><br><span class="line">cell_range = ws[<span class="string">'A1'</span>:<span class="string">'C2'</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过行(列)</span></span><br><span class="line">colC = ws[<span class="string">'C'</span>]</span><br><span class="line">col_range = ws[<span class="string">'C:D'</span>]</span><br><span class="line">row10 = ws[<span class="number">10</span>]</span><br><span class="line">row_range = ws[<span class="number">5</span>:<span class="number">10</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过指定范围(行 → 行)</span></span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> ws.iter_rows(min_row=<span class="number">1</span>, max_col=<span class="number">3</span>, max_row=<span class="number">2</span>):</span><br><span class="line">    <span class="keyword">for</span> cell <span class="keyword">in</span> row:</span><br><span class="line">        print(cell)</span><br><span class="line">&lt;Cell Sheet1.A1&gt;</span><br><span class="line">&lt;Cell Sheet1.B1&gt;</span><br><span class="line">&lt;Cell Sheet1.C1&gt;</span><br><span class="line">&lt;Cell Sheet1.A2&gt;</span><br><span class="line">&lt;Cell Sheet1.B2&gt;</span><br><span class="line">&lt;Cell Sheet1.C2&gt;　</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过指定范围(列 → 列)</span></span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> ws.iter_rows(min_row=<span class="number">1</span>, max_col=<span class="number">3</span>, max_row=<span class="number">2</span>):</span><br><span class="line">    <span class="keyword">for</span> cell <span class="keyword">in</span> row:</span><br><span class="line">        print(cell)</span><br><span class="line">&lt;Cell Sheet1.A1&gt;</span><br><span class="line">&lt;Cell Sheet1.B1&gt;</span><br><span class="line">&lt;Cell Sheet1.C1&gt;</span><br><span class="line">&lt;Cell Sheet1.A2&gt;</span><br><span class="line">&lt;Cell Sheet1.B2&gt;</span><br><span class="line">&lt;Cell Sheet1.C2&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 遍历所有 方法一</span></span><br><span class="line">ws = wb.active</span><br><span class="line">ws[<span class="string">'C9'</span>] = <span class="string">'hello world'</span></span><br><span class="line">tuple(ws.rows)</span><br><span class="line">((&lt;Cell Sheet.A1&gt;, &lt;Cell Sheet.B1&gt;, &lt;Cell Sheet.C1&gt;),</span><br><span class="line">(&lt;Cell Sheet.A2&gt;, &lt;Cell Sheet.B2&gt;, &lt;Cell Sheet.C2&gt;),</span><br><span class="line">...</span><br><span class="line">(&lt;Cell Sheet.A8&gt;, &lt;Cell Sheet.B8&gt;, &lt;Cell Sheet.C8&gt;),</span><br><span class="line">(&lt;Cell Sheet.A9&gt;, &lt;Cell Sheet.B9&gt;, &lt;Cell Sheet.C9&gt;))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 遍历所有 方法二</span></span><br><span class="line">tuple(ws.columns)</span><br><span class="line">((&lt;Cell Sheet.A1&gt;,</span><br><span class="line">&lt;Cell Sheet.A2&gt;,</span><br><span class="line">&lt;Cell Sheet.A3&gt;,</span><br><span class="line">...</span><br><span class="line">&lt;Cell Sheet.B7&gt;,</span><br><span class="line">&lt;Cell Sheet.B8&gt;,</span><br><span class="line">&lt;Cell Sheet.B9&gt;),</span><br><span class="line">(&lt;Cell Sheet.C1&gt;,</span><br><span class="line">...</span><br><span class="line">&lt;Cell Sheet.C8&gt;,</span><br><span class="line">&lt;Cell Sheet.C9&gt;))</span><br></pre></td></tr></tbody></table></figure><h1 id="4-其他"><a href="#4-其他" class="headerlink" title="4. 其他"></a>4. 其他</h1><h2 id="4-1-改变-sheet-标签按钮颜色"><a href="#4-1-改变-sheet-标签按钮颜色" class="headerlink" title="4.1 改变 sheet 标签按钮颜色"></a>4.1 改变 sheet 标签按钮颜色</h2><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ws.sheet_properties.tabColor = <span class="string">"1072BA"</span></span><br></pre></td></tr></tbody></table></figure><h2 id="4-2-获取最大行，最大列"><a href="#4-2-获取最大行，最大列" class="headerlink" title="4.2 获取最大行，最大列"></a>4.2 获取最大行，最大列</h2><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获得最大列和最大行</span></span><br><span class="line">print(sheet.max_row)</span><br><span class="line">print(sheet.max_column)</span><br></pre></td></tr></tbody></table></figure><h2 id="4-3-获取每一行每一列"><a href="#4-3-获取每一行每一列" class="headerlink" title="4.3 获取每一行每一列"></a>4.3 获取每一行每一列</h2><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sheet.rows为生成器, 里面是每一行的数据，每一行又由一个tuple包裹。</span><br><span class="line">sheet.columns类似，不过里面是每个tuple是每一列的单元格。</span><br><span class="line"><span class="comment"># 因为按行，所以返回A1, B1, C1这样的顺序</span></span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> sheet.rows:</span><br><span class="line">  <span class="keyword">for</span> cell <span class="keyword">in</span> row:</span><br><span class="line">    print(cell.value)</span><br><span class="line"></span><br><span class="line"><span class="comment"># A1, A2, A3这样的顺序</span></span><br><span class="line"><span class="keyword">for</span> column <span class="keyword">in</span> sheet.columns:</span><br><span class="line">  <span class="keyword">for</span> cell <span class="keyword">in</span> column:</span><br><span class="line">    print(cell.value)</span><br></pre></td></tr></tbody></table></figure><h2 id="4-4-根据数字得到字母，根据字母得到数字"><a href="#4-4-根据数字得到字母，根据字母得到数字" class="headerlink" title="4.4 根据数字得到字母，根据字母得到数字"></a>4.4 根据数字得到字母，根据字母得到数字</h2><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> openpyxl.utils <span class="keyword">import</span> get_column_letter, column_index_from_string</span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据列的数字返回字母</span></span><br><span class="line">print(get_column_letter(<span class="number">2</span>)) <span class="comment"># B</span></span><br><span class="line"><span class="comment"># 根据字母返回列的数字</span></span><br><span class="line">print(column_index_from_string(<span class="string">'D'</span>)) <span class="comment"># 4</span></span><br></pre></td></tr></tbody></table></figure><h2 id="4-5-删除工作表"><a href="#4-5-删除工作表" class="headerlink" title="4.5 删除工作表"></a>4.5 删除工作表</h2><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 方式一</span></span><br><span class="line">wb.remove(sheet)</span><br><span class="line"><span class="comment"># 方式二</span></span><br><span class="line"><span class="keyword">del</span> wb[sheet]</span><br></pre></td></tr></tbody></table></figure><h2 id="4-6-矩阵置换（行-→-列）"><a href="#4-6-矩阵置换（行-→-列）" class="headerlink" title="4.6 矩阵置换（行 → 列）"></a>4.6 矩阵置换（行 → 列）</h2><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">rows = [</span><br><span class="line">  [<span class="string">'Number'</span>, <span class="string">'data1'</span>, <span class="string">'data2'</span>],</span><br><span class="line">  [<span class="number">2</span>, <span class="number">40</span>, <span class="number">30</span>],</span><br><span class="line">  [<span class="number">3</span>, <span class="number">40</span>, <span class="number">25</span>],</span><br><span class="line">  [<span class="number">4</span>, <span class="number">50</span>, <span class="number">30</span>],</span><br><span class="line">  [<span class="number">5</span>, <span class="number">30</span>, <span class="number">10</span>],</span><br><span class="line">  [<span class="number">6</span>, <span class="number">25</span>, <span class="number">5</span>],</span><br><span class="line">  [<span class="number">7</span>, <span class="number">50</span>, <span class="number">10</span>]]</span><br><span class="line"></span><br><span class="line">list(zip(*rows))</span><br><span class="line"></span><br><span class="line"><span class="comment"># out</span></span><br><span class="line">[(<span class="string">'Number'</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>),</span><br><span class="line"> (<span class="string">'data1'</span>, <span class="number">40</span>, <span class="number">40</span>, <span class="number">50</span>, <span class="number">30</span>, <span class="number">25</span>, <span class="number">50</span>),</span><br><span class="line"> (<span class="string">'data2'</span>, <span class="number">30</span>, <span class="number">25</span>, <span class="number">30</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">10</span>)]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 注意 方法会舍弃缺少数据的列(行)</span></span><br><span class="line">rows = [</span><br><span class="line">  [<span class="string">'Number'</span>, <span class="string">'data1'</span>, <span class="string">'data2'</span>],</span><br><span class="line">  [<span class="number">2</span>, <span class="number">40</span>  ], <span class="comment"># 这里少一个数据</span></span><br><span class="line">  [<span class="number">3</span>, <span class="number">40</span>, <span class="number">25</span>],</span><br><span class="line">  [<span class="number">4</span>, <span class="number">50</span>, <span class="number">30</span>],</span><br><span class="line">  [<span class="number">5</span>, <span class="number">30</span>, <span class="number">10</span>],</span><br><span class="line">  [<span class="number">6</span>, <span class="number">25</span>, <span class="number">5</span>],</span><br><span class="line">  [<span class="number">7</span>, <span class="number">50</span>, <span class="number">10</span>],</span><br><span class="line">]</span><br><span class="line"><span class="comment"># out</span></span><br><span class="line">[(<span class="string">'Number'</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>), (<span class="string">'data1'</span>, <span class="number">40</span>, <span class="number">40</span>, <span class="number">50</span>, <span class="number">30</span>, <span class="number">25</span>, <span class="number">50</span>)]</span><br></pre></td></tr></tbody></table></figure><h2 id="4-7-设置单元格风格"><a href="#4-7-设置单元格风格" class="headerlink" title="4.7 设置单元格风格"></a>4.7 设置单元格风格</h2><h3 id="4-7-1-需要导入的类"><a href="#4-7-1-需要导入的类" class="headerlink" title="4.7.1 需要导入的类"></a>4.7.1 需要导入的类</h3><p><code>from openpyxl.styles import Font, colors, Alignment</code></p><h3 id="4-7-2-字体"><a href="#4-7-2-字体" class="headerlink" title="4.7.2 字体"></a>4.7.2 字体</h3><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bold_itatic_24_font = Font(name=<span class="string">'等线'</span>, size=<span class="number">24</span>, italic=<span class="literal">True</span>, color=colors.RED, bold=<span class="literal">True</span>)</span><br><span class="line"><span class="comment"># 代码指定了等线24号，加粗斜体，字体颜色红色。直接使用cell的font属性，将Font对象赋值给它</span></span><br><span class="line">sheet[<span class="string">'A1'</span>].font = bold_itatic_24_font</span><br></pre></td></tr></tbody></table></figure><h3 id="4-7-3-对齐方式"><a href="#4-7-3-对齐方式" class="headerlink" title="4.7.3 对齐方式"></a>4.7.3 对齐方式</h3><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置B1中的数据垂直居中和水平居中</span></span><br><span class="line">sheet[<span class="string">'B1'</span>].alignment = Alignment(horizontal=<span class="string">'center'</span>, vertical=<span class="string">'center'</span>)</span><br></pre></td></tr></tbody></table></figure><h3 id="4-7-4-设置行高和列宽"><a href="#4-7-4-设置行高和列宽" class="headerlink" title="4.7.4 设置行高和列宽"></a>4.7.4 设置行高和列宽</h3><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 第2行行高</span></span><br><span class="line">sheet.row_dimensions[<span class="number">2</span>].height = <span class="number">40</span></span><br><span class="line"><span class="comment"># C列列宽</span></span><br><span class="line">sheet.column_dimensions[<span class="string">'C'</span>].width = <span class="number">30</span></span><br></pre></td></tr></tbody></table></figure><h3 id="4-7-5-合并和拆分单元格"><a href="#4-7-5-合并和拆分单元格" class="headerlink" title="4.7.5 合并和拆分单元格"></a>4.7.5 合并和拆分单元格</h3><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 合并单元格， 往左上角写入数据即可</span></span><br><span class="line">sheet.merge_cells(<span class="string">'B1:G1'</span>) <span class="comment"># 合并一行中的几个单元格</span></span><br><span class="line">sheet.merge_cells(<span class="string">'A1:C3'</span>) <span class="comment"># 合并一个矩形区域中的单元格</span></span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 学习力 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python中numpy库的学习</title>
      <link href="/2020/02/21/python-np/"/>
      <url>/2020/02/21/python-np/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><p><strong>函数引用，命名为 np：<code>import numpy as np</code></strong></p><h1 id="1-np-linspace"><a href="#1-np-linspace" class="headerlink" title="1. np.linspace()"></a>1. np.linspace()</h1><p><strong>用来创建等差数列</strong></p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">numpy.linspace(start, stop, num=<span class="number">50</span>, endpoint=<span class="literal">True</span>, retstep=<span class="literal">False</span>, dtype=<span class="literal">None</span>, axis=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">start:返回样本数据开始点</span><br><span class="line">stop:返回样本数据结束点</span><br><span class="line">num:生成的样本数据量，默认为<span class="number">50</span></span><br><span class="line">endpoint：<span class="literal">True</span>则包含stop；<span class="literal">False</span>则不包含stop</span><br><span class="line">retstep：If <span class="literal">True</span>, <span class="keyword">return</span> (samples, step), where step <span class="keyword">is</span> the spacing between samples.(即如果为<span class="literal">True</span>则结果会给出数据间隔)</span><br><span class="line">dtype：输出数组类型</span><br><span class="line">axis：<span class="number">0</span>(默认)或<span class="number">-1</span></span><br></pre></td></tr></tbody></table></figure><p>eg:</p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.linspace(<span class="number">2.0</span>, <span class="number">3.0</span>, num=<span class="number">5</span>)</span><br><span class="line">array([ <span class="number">2.</span>  ,  <span class="number">2.25</span>,  <span class="number">2.5</span> ,  <span class="number">2.75</span>,  <span class="number">3.</span>  ])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.linspace(<span class="number">2.0</span>, <span class="number">3.0</span>, num=<span class="number">5</span>, endpoint=<span class="literal">False</span>)</span><br><span class="line">array([ <span class="number">2.</span> ,  <span class="number">2.2</span>,  <span class="number">2.4</span>,  <span class="number">2.6</span>,  <span class="number">2.8</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.linspace(<span class="number">2.0</span>, <span class="number">3.0</span>, num=<span class="number">5</span>, retstep=<span class="literal">True</span>)</span><br><span class="line">(array([ <span class="number">2.</span>  ,  <span class="number">2.25</span>,  <span class="number">2.5</span> ,  <span class="number">2.75</span>,  <span class="number">3.</span>  ]), <span class="number">0.25</span>)</span><br></pre></td></tr></tbody></table></figure><blockquote><p><a href="https://blog.csdn.net/Asher117/article/details/87855493" target="_blank" rel="noopener">原文链接</a></p></blockquote><h1 id="2-np-arange"><a href="#2-np-arange" class="headerlink" title="2. np.arange()"></a>2. np.arange()</h1><p><strong>函数返回一个有终点和起点的固定步长的排列，如[1,2,3,4,5]，起点是 1，终点是 5，步长为 1</strong></p><ul><li>1）一个参数时，参数值为终点，起点取默认值 0，步长取默认值 1</li><li>2）两个参数时，第一个参数为起点，第二个参数为终点，步长取默认值 1</li><li>3）三个参数时，第一个参数为起点，第二个参数为终点，第三个参数为步长。其中步长支持小数</li></ul><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#一个参数 默认起点0，步长为1 输出：[0 1 2]</span></span><br><span class="line">a = np.arange(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#两个参数 默认步长为1 输出[3 4 5 6 7 8]</span></span><br><span class="line">a = np.arange(<span class="number">3</span>,<span class="number">9</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#三个参数 起点为0，终点为3，步长为0.1 输出[ 0.   0.1  0.2  0.3  0.4  0.5  0.6  0.7  0.8  0.9  1.   1.1  1.2  1.3  1.4 1.5  1.6  1.7  1.8  1.9  2.   2.1  2.2  2.3  2.4  2.5  2.6  2.7  2.8  2.9]</span></span><br><span class="line">a = np.arange(<span class="number">0</span>, <span class="number">3</span>, <span class="number">0.1</span>)</span><br></pre></td></tr></tbody></table></figure><blockquote><p><a href="https://blog.csdn.net/qq_41550480/article/details/89390579" target="_blank" rel="noopener">原文链接</a></p></blockquote><h1 id="3-np-random"><a href="#3-np-random" class="headerlink" title="3. np.random()"></a>3. np.random()</h1><h2 id="3-1-np-random-randint"><a href="#3-1-np-random-randint" class="headerlink" title="3.1 np.random.randint"></a>3.1 np.random.randint</h2><p>low、high、size 三个参数。默认 high 是 None,如果只有 low，那范围就是[0,low)。如果有 high，范围就是[low,high)</p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.random.randint(<span class="number">2</span>, size=<span class="number">10</span>)</span><br><span class="line">array([<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>])</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.random.randint(<span class="number">1</span>, size=<span class="number">10</span>)</span><br><span class="line">array([<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>])</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.random.randint(<span class="number">5</span>, size=(<span class="number">2</span>, <span class="number">4</span>))</span><br><span class="line">array([[<span class="number">4</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">1</span>],</span><br><span class="line">&nbsp; &nbsp; &nbsp; &nbsp;[<span class="number">3</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">0</span>]])</span><br></pre></td></tr></tbody></table></figure><blockquote><p><a href="https://blog.csdn.net/weixin_42029738/article/details/81977492" target="_blank" rel="noopener">原文链接</a></p></blockquote><h2 id="3-2-numpy-random-randn-与-rand"><a href="#3-2-numpy-random-randn-与-rand" class="headerlink" title="3.2 numpy.random.randn()与 rand()"></a>3.2 numpy.random.randn()与 rand()</h2><ul><li>numpy.random.randn(d0, d1, …, dn)是从标准正态分布中返回一个或多个样本值</li><li>numpy.random.rand(d0, d1, …, dn)的随机样本位于[0, 1)中</li></ul><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">arr1 = np.random.randn(<span class="number">2</span>,<span class="number">4</span>)</span><br><span class="line">print(arr1)</span><br><span class="line">print(<span class="string">'******************************************************************'</span>)</span><br><span class="line">arr2 = np.random.rand(<span class="number">2</span>,<span class="number">4</span>)</span><br><span class="line">print(arr2)</span><br><span class="line"></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">正负数都有</span></span><br><span class="line"><span class="string">[[-1.03021018 0.5197033 0.52117459 -0.70102661]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[ 0.98268569 1.21940697 -1.095241 -0.38161758]]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">******************************************************************</span></span><br><span class="line"><span class="string">正数部分</span></span><br><span class="line"><span class="string">[[ 0.19947349 0.05282713 0.56704222 0.45479972]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[ 0.28827103 0.1643551 0.30486786 0.56386943]]</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></tbody></table></figure><h2 id="3-3-np-random-seed"><a href="#3-3-np-random-seed" class="headerlink" title="3.3 np.random.seed()"></a>3.3 np.random.seed()</h2><p><strong>seed( ) 用于指定随机数生成时所用算法开始的整数值</strong></p><ul><li>1.如果使用相同的 seed( )值，则每次生成的随即数都相同</li><li>2.如果不设置这个值，则系统根据时间来自己选择这个值，此时每次生成的随机数因时间差异而不同</li><li>3.设置的 seed()值仅一次有效</li></ul><p><img src="/img/np/random_seed.webp" alt="seed示例"></p><h2 id="3-4-np-random-normal-loc-scale-size"><a href="#3-4-np-random-normal-loc-scale-size" class="headerlink" title="3.4 np.random.normal([loc,scale,size])"></a>3.4 np.random.normal([loc,scale,size])</h2><p>正态(高斯)分布</p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mu,sigma = <span class="number">0</span>,<span class="number">0.1</span></span><br><span class="line">s = np.random.normal(mu,sigma,<span class="number">10</span>)</span><br><span class="line">print(s)</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string"> [-0.14154151 -0.04927673  0.01828343  0.05323477  0.05350814 -0.14129784</span></span><br><span class="line"><span class="string">  0.06566983 -0.05441259 -0.01597307  0.16633013]</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 学习力 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python中Plt库的学习</title>
      <link href="/2020/02/21/python-plt/"/>
      <url>/2020/02/21/python-plt/</url>
      
        <content type="html"><![CDATA[<blockquote><p><a href="https://blog.csdn.net/qiurisiyu2016/article/details/80187177" target="_blank" rel="noopener">参考教程</a></p></blockquote><a id="more"></a><h1 id="0-plt-打开-opencv-图像"><a href="#0-plt-打开-opencv-图像" class="headerlink" title="0. plt 打开 opencv 图像"></a>0. plt 打开 opencv 图像</h1><p><strong>BGR 用 RGB 打开</strong></p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">img=cv2.imread(<span class="string">'lena.jpg'</span>,cv2.IMREAD_COLOR)</span><br><span class="line"></span><br><span class="line"><span class="comment">#method1</span></span><br><span class="line">b,g,r=cv2.split(img)</span><br><span class="line">img2=cv2.merge([r,g,b])</span><br><span class="line">plt.imshow(img2)</span><br><span class="line">plt.show()</span><br><span class="line"></span><br><span class="line"><span class="comment">#method2</span></span><br><span class="line">img3=img[:,:,::<span class="number">-1</span>]</span><br><span class="line">plt.imshow(img3)</span><br><span class="line">plt.show()</span><br><span class="line"></span><br><span class="line"><span class="comment">#method3</span></span><br><span class="line">img4=cv2.cvtColor(img, cv2.COLOR_BGR2RGB)</span><br><span class="line">plt.imshow(img4)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><h1 id="1-plt-plot-x-y"><a href="#1-plt-plot-x-y" class="headerlink" title="1. plt.plot(x,y)"></a>1. plt.plot(x,y)</h1><p><code>format_string的内容</code><br><img src="/img/plt/plot1.png" alt="string内容图片"><br><img src="/img/plt/plot2.png" alt="string内容图片"><br><img src="/img/plt/plot3.png" alt="string内容图片"><br><code>**kwargs</code></p><p>**kwards：<br>color 颜色<br>linestyle 线条样式<br>marker 标记风格<br>markerfacecolor 标记颜色<br>markersize 标记大小 等等</p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># plt.plot(x,y,format_string,**kwargs)</span></span><br><span class="line"><span class="comment"># x轴数据，y轴数据，控制曲线格式的字符串format_string颜色字符，风格字符，和标记字符</span></span><br><span class="line">plt.plot([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">6</span>],[<span class="number">4</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">1</span>],<span class="string">'r-s'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><strong>展示</strong><br><img src="/img/plt/plot4.png" alt="plot"></p><h1 id="2-plt-figure-用来画图，自定义画布大小"><a href="#2-plt-figure-用来画图，自定义画布大小" class="headerlink" title="2. plt.figure()用来画图，自定义画布大小"></a>2. plt.figure()用来画图，自定义画布大小</h1><p>定义画布大小，然后用 plot 画图</p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># plt.figure() # 用来画图,自定义画布大小</span></span><br><span class="line">fig1 = plt.figure(num=<span class="string">'fig111111'</span>, figsize=(<span class="number">10</span>, <span class="number">3</span>), dpi=<span class="number">75</span>, facecolor=<span class="string">'#FFFFFF'</span>, edgecolor=<span class="string">'#0000FF'</span>)</span><br><span class="line"><span class="comment"># 名字,宽*高，dpi图像每英寸长度内的像素点数 一般75，</span></span><br><span class="line">plt.plot([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>])</span><br><span class="line">plt.show()</span><br><span class="line">plt.close()</span><br></pre></td></tr></tbody></table></figure><p><img src="/img/plt/figure1.png" alt="展示图片"></p><h1 id="3、plt-subplot-222"><a href="#3、plt-subplot-222" class="headerlink" title="3、plt.subplot(222)"></a>3、plt.subplot(222)</h1><p>将 figure 设置的画布大小分成几个部分，参数‘221’表示 2(row)x2(colu),即将画布分成 2x2，两行两列的 4 块区域，1 表示选择图形输出的区域在第一块，图形输出区域参数必须在“行 x 列”范围，此处必须在 1 和 2 之间选择——如果参数设置为 subplot(111)，则表示画布整个输出，不分割成小块区域，图形直接输出在整块画布上</p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">plt.subplot(<span class="number">222</span>)&nbsp;</span><br><span class="line">plt.plot(y,xx)&nbsp; &nbsp; <span class="comment">#在2x2画布中第二块区域输出图形</span></span><br><span class="line">plt.show()</span><br><span class="line">plt.subplot(<span class="number">223</span>)&nbsp; <span class="comment">#在2x2画布中第三块区域输出图形</span></span><br><span class="line">plt.plot(y,xx)</span><br><span class="line">plt.subplot(<span class="number">224</span>)&nbsp; <span class="comment"># 在在2x2画布中第四块区域输出图形</span></span><br><span class="line">plt.plot(y,xx)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 子图</span></span><br><span class="line">plt.add_subplot(<span class="number">221</span>)</span><br><span class="line">plt.add_subplot(<span class="number">222</span>)</span><br></pre></td></tr></tbody></table></figure><h1 id="4、plt-xlim-设置-x-轴或者-y-轴刻度范围"><a href="#4、plt-xlim-设置-x-轴或者-y-轴刻度范围" class="headerlink" title="4、plt.xlim 设置 x 轴或者 y 轴刻度范围"></a>4、plt.xlim 设置 x 轴或者 y 轴刻度范围</h1><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plt.xlim(<span class="number">0</span>,<span class="number">1000</span>)  <span class="comment">#  设置x轴刻度范围，从0~1000         #lim为极限，范围</span></span><br><span class="line">plt.ylim(<span class="number">0</span>,<span class="number">20</span>)   <span class="comment"># 设置y轴刻度的范围，从0~20</span></span><br></pre></td></tr></tbody></table></figure><h1 id="5、plt-xticks-：设置-x-轴刻度的表现方式"><a href="#5、plt-xticks-：设置-x-轴刻度的表现方式" class="headerlink" title="5、plt.xticks()：设置 x 轴刻度的表现方式"></a>5、plt.xticks()：设置 x 轴刻度的表现方式</h1><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">fig2 = plt.figure(num=<span class="string">'fig222222'</span>, figsize=(<span class="number">6</span>, <span class="number">3</span>), dpi=<span class="number">75</span>, facecolor=<span class="string">'#FFFFFF'</span>, edgecolor=<span class="string">'#FF0000'</span>)</span><br><span class="line">plt.plot()</span><br><span class="line"><span class="comment"># np.linspace 创建等差数列</span></span><br><span class="line">plt.xticks(np.linspace(<span class="number">0</span>,<span class="number">1000</span>,<span class="number">15</span>,endpoint=<span class="literal">True</span>))</span><br><span class="line"><span class="comment"># 设置x轴刻度</span></span><br><span class="line">plt.yticks(np.linspace(<span class="number">0</span>,<span class="number">20</span>,<span class="number">10</span>,endpoint=<span class="literal">True</span>))</span><br><span class="line">plt.show()</span><br><span class="line">plt.close()</span><br></pre></td></tr></tbody></table></figure><p><strong>展示</strong><br><img src="/img/plt/xticks.png" alt="xticks代码展示"></p><h1 id="6-plt-scatter-–散点图"><a href="#6-plt-scatter-–散点图" class="headerlink" title="6. plt.scatter()–散点图"></a>6. plt.scatter()–散点图</h1><p><code>matplotlib.pyplot.scatter(x, y, s=None, c=None, marker=None, cmap=None, norm=None, vmin=None, vmax=None,alpha=None, linewidths=None, verts=None, edgecolors=None, *, data=None, **kwargs)</code></p><ul><li>x，y：表示的是大小为(n,)的数组，也就是我们即将绘制散点图的数据点</li><li>s:是一个实数或者是一个数组大小为(n,)，这个是一个可选的参数</li><li>c:表示的是颜色，也是一个可选项。默认是蓝色’b’,表示的是标记的颜色，或者可以是一个表示颜色的字符，或者是一个长度为 n 的表示颜色的序列等等</li><li>marker:表示的是标记的样式，默认的是’o’</li><li>cmap:Colormap 实体或者是一个 colormap 的名字，cmap 仅仅当 c 是一个浮点数数组的时候才使用。如果没有申明就是 image.cmap</li><li>norm:Normalize 实体来将数据亮度转化到 0-1 之间，也是只有 c 是一个浮点数的数组的时候才使用。如果没有申明，就是默认为 colors.Normalize</li><li>vmin,vmax:实数，当 norm 存在的时候忽略。用来进行亮度数据的归一化</li><li>alpha：实数，0-1 之间</li><li>linewidths:也就是标记点的长度</li></ul><blockquote><p><a href="https://blog.csdn.net/m0_37393514/article/details/81298503" target="_blank" rel="noopener">参考教程</a></p></blockquote><h1 id="7、ax2-set-title-‘xxx’-设置标题，画图"><a href="#7、ax2-set-title-‘xxx’-设置标题，画图" class="headerlink" title="7、ax2.set_title(‘xxx’)设置标题，画图"></a>7、ax2.set_title(‘xxx’)设置标题，画图</h1><p><code>plt.xlabel()</code> <code>plt.ylabel()</code>xy 轴标签</p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#产生[1,2,3,...,9]的序列</span></span><br><span class="line">x = np.arange(<span class="number">1</span>,<span class="number">10</span>)</span><br><span class="line">y = x</span><br><span class="line">fig = plt.figure()</span><br><span class="line">ax1 = fig.add_subplot(<span class="number">221</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#设置标题</span></span><br><span class="line">ax1.set_title(<span class="string">'Scatter Plot1'</span>)</span><br><span class="line">plt.xlabel(<span class="string">'M'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'N'</span>)</span><br><span class="line">ax2 = fig.add_subplot(<span class="number">222</span>)</span><br><span class="line">ax2.set_title(<span class="string">'Scatter Plot2clf'</span>)</span><br><span class="line"><span class="comment">#设置X轴标签</span></span><br><span class="line">plt.xlabel(<span class="string">'X'</span>) &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="comment">#设置X/Y轴标签是在对应的figure后进行操作才对应到该figure</span></span><br><span class="line"><span class="comment">#设置Y轴标签</span></span><br><span class="line">plt.ylabel(<span class="string">'Y'</span>)</span><br><span class="line"><span class="comment">#画散点图</span></span><br><span class="line">ax1.scatter(x,y,c = <span class="string">'r'</span>,marker = <span class="string">'o'</span>) &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="comment">#可以看出画散点图是在对figure进行操作</span></span><br><span class="line">ax2.scatter(x,y,c = <span class="string">'b'</span>,marker = <span class="string">'x'</span>)</span><br><span class="line"><span class="comment">#设置图标</span></span><br><span class="line">plt.legend(<span class="string">'show picture x1 '</span>)</span><br><span class="line"><span class="comment">#显示所画的图</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><strong>展示</strong><br><img src="/img/plt/title1.png" alt="title展示"></p><h1 id="8-plt-hist（）绘制直方图"><a href="#8-plt-hist（）绘制直方图" class="headerlink" title="8. plt.hist（）绘制直方图"></a>8. plt.hist（）绘制直方图</h1><p><em>可以将高斯函数这些画出来</em></p><p><code>n, bins, patches = plt.hist(arr, bins=10, normed=0, facecolor='black', edgecolor='black',alpha=1，histtype='bar')</code><br>hist 的参数非常多，但常用的就这六个，只有第一个是必须的，后面四个可选</p><ul><li>arr: 需要计算直方图的一维数组</li><li>bins: 直方图的柱数，可选项，默认为 10</li><li>normed: 是否将得到的直方图向量归一化。默认为 0</li><li>facecolor: 直方图颜色</li><li>edgecolor: 直方图边框颜色</li><li>alpha: 透明度</li><li>histtype: 直方图类型，‘bar’, ‘barstacked’, ‘step’, ‘stepfilled’<br>返回值 ：<br>n: 直方图向量，是否归一化由参数 normed 设定<br>bins: 返回各个 bin 的区间范围<br>patches: 返回每个 bin 里面包含的数据，是一个 list</li></ul><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mu, sigma = 0, .1</span><br><span class="line">s = np.random.normal(loc=mu, scale=sigma, size=1000)</span><br><span class="line">a,b,c = plt.hist(s, bins=3)</span><br><span class="line">print("a: ",a)</span><br><span class="line">print("b: ",b)</span><br><span class="line">print("c: ",c)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br><span class="line"></span><br><span class="line">结果：</span><br><span class="line"></span><br><span class="line">a:&nbsp; [ 85. 720. 195.]&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;#每个柱子的值</span><br><span class="line">b:&nbsp; [-0.36109509 -0.1357318&nbsp; &nbsp;0.08963149&nbsp; 0.31499478]&nbsp; &nbsp;#每个柱的区间范围</span><br><span class="line">c:&nbsp; &lt;a list of 3 Patch objects&gt;&nbsp; &nbsp; &nbsp; &nbsp;#总共多少柱子</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 学习力 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python中math库的学习</title>
      <link href="/2020/02/20/python-math/"/>
      <url>/2020/02/20/python-math/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><p><strong>python 中的 math 库</strong><br>非常的有意思 hhh<br>暂时先写一部分；没什么时间深入研究，等过段时间再说</p><!--more--><h1 id="1-角度相关函数"><a href="#1-角度相关函数" class="headerlink" title="1. 角度相关函数"></a>1. 角度相关函数</h1><h2 id="1-1-角弧度转换"><a href="#1-1-角弧度转换" class="headerlink" title="1.1 角弧度转换"></a>1.1 角弧度转换</h2><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line">math.degrees(math.pi/<span class="number">2</span>)</span><br><span class="line"><span class="comment"># 90.0</span></span><br><span class="line">math.radians(<span class="number">90</span>)</span><br><span class="line"><span class="comment"># 1.5707963267948966</span></span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 学习力 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>萌芽杯项目的python代码</title>
      <link href="/2020/02/19/example-mengya/"/>
      <url>/2020/02/19/example-mengya/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><h1 id="1-测试"><a href="#1-测试" class="headerlink" title="1. 测试"></a>1. 测试</h1><h2 id="1-1-视频经过梯度处理"><a href="#1-1-视频经过梯度处理" class="headerlink" title="1.1 视频经过梯度处理"></a>1.1 视频经过梯度处理</h2><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line">vc = cv2.VideoCapture(<span class="string">'./video/1.mp4'</span>)</span><br><span class="line"><span class="keyword">if</span> vc.isOpened():</span><br><span class="line">    open, frame = vc.read()</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    open = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> open:</span><br><span class="line">    ret, frame = vc.read()</span><br><span class="line">    <span class="keyword">if</span> frame <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> ret == <span class="literal">True</span>:</span><br><span class="line">        gray = cv2.cvtColor(frame,cv2.COLOR_BGR2GRAY)</span><br><span class="line">        <span class="comment"># sobelx = cv2.Sobel(gray,cv2.CV_64F,1,0)</span></span><br><span class="line">        <span class="comment"># sobely = cv2.Sobel(gray,cv2.CV_64F,0,1)</span></span><br><span class="line">        <span class="comment"># sobelx = cv2.convertScaleAbs(sobelx)</span></span><br><span class="line">        <span class="comment"># sobely = cv2.convertScaleAbs(sobely)</span></span><br><span class="line">        <span class="comment"># sobelxy = cv2.addWeighted(sobelx,0.5,sobely,0.5,0)</span></span><br><span class="line">        v1 = cv2.Canny(gray,<span class="number">10</span>,<span class="number">50</span>)</span><br><span class="line">        cv2.namedWindow(<span class="string">'result'</span>,<span class="number">0</span>)</span><br><span class="line">        <span class="comment"># cv2.imshow('result',sobelxy)</span></span><br><span class="line">        cv2.imshow(<span class="string">'result'</span>,v1)</span><br><span class="line">        <span class="keyword">if</span> cv2.waitKey(<span class="number">10</span>) &amp; <span class="number">0xFF</span> == <span class="number">27</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">vc.release()</span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></tbody></table></figure><h2 id="1-2-检测指针，绘制直线"><a href="#1-2-检测指针，绘制直线" class="headerlink" title="1.2 检测指针，绘制直线"></a>1.2 检测指针，绘制直线</h2><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">img = cv2.imread(<span class="string">'./img/clock2.jpg'</span>)    <span class="comment"># + input('请输入文件路径：')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cv_show</span><span class="params">(name,img)</span>:</span></span><br><span class="line">    cv2.namedWindow(name,<span class="number">0</span>)</span><br><span class="line">    cv2.imshow(name,img)</span><br><span class="line">    cv2.waitKey(<span class="number">0</span>)</span><br><span class="line">    cv2.destroyAllWindows()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">linedraw</span><span class="params">(image)</span>:</span></span><br><span class="line">    gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)</span><br><span class="line">        <span class="comment"># edges = cv.Canny(gray, 50, 150, apertureSize=3)</span></span><br><span class="line">        <span class="comment"># 自动检测可能的直线，返回的是一条条线段</span></span><br><span class="line">    ret, thresohold = cv2.threshold(gray, <span class="number">55</span>, <span class="number">255</span>, cv2.THRESH_BINARY)</span><br><span class="line">    <span class="comment"># aussian = cv2.GaussianBlur(thresohold, (5, 5), 1) 高斯</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># kernel = np.ones((5, 5), np.uint8)  # （5，5）腐蚀大小</span></span><br><span class="line">    <span class="comment"># erosion = cv2.erode(thresohold, kernel, iterations=1) 去噪音点</span></span><br><span class="line"></span><br><span class="line">    edges = cv2.Canny(thresohold, <span class="number">10</span>, <span class="number">150</span>, apertureSize=<span class="number">3</span>)</span><br><span class="line">    lines = cv2.HoughLinesP(edges, <span class="number">1</span>, np.pi / <span class="number">180</span>, <span class="number">80</span>, minLineLength=<span class="number">110</span>, maxLineGap=<span class="number">10</span>)</span><br><span class="line">        <span class="comment"># print(type(lines))</span></span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> lines:</span><br><span class="line">        x1, y1, x2, y2 = line[<span class="number">0</span>]</span><br><span class="line">        cv2.line(image, (x1, y1), (x2, y2), (<span class="number">0</span>, <span class="number">255</span>,<span class="number">0</span>), <span class="number">2</span>)</span><br><span class="line">    cv_show(<span class="string">'result'</span>,image)</span><br><span class="line"></span><br><span class="line">linedraw(img)</span><br><span class="line">os.system(<span class="string">"pause"</span>)</span><br></pre></td></tr></tbody></table></figure><h2 id="1-3-小综合；根据表盘识别指针并求出斜率"><a href="#1-3-小综合；根据表盘识别指针并求出斜率" class="headerlink" title="1.3 小综合；根据表盘识别指针并求出斜率"></a>1.3 小综合；根据表盘识别指针并求出斜率</h2><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line">img = cv2.imread(<span class="string">'./img/clock1.jpg'</span>, cv2.IMREAD_UNCHANGED)</span><br><span class="line"><span class="comment"># 裁剪图片  具体指针要改</span></span><br><span class="line">imgbufen = img[<span class="number">70</span>:<span class="number">566</span>,<span class="number">0</span>:<span class="number">1000</span>]</span><br><span class="line"><span class="comment"># 将图像的阈值化 小于阈值的为max 大于阈值的为0，</span></span><br><span class="line"><span class="comment"># 主要是因为这个指针是黑的,圆形遮罩也是黑的，所以先把指针反转为白的</span></span><br><span class="line"><span class="comment"># 具体指针要改</span></span><br><span class="line">imgfan = cv2.threshold(imgbufen,<span class="number">127</span>,<span class="number">255</span>,cv2.THRESH_BINARY_INV)[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出图像</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cv_show</span><span class="params">(name,img)</span>:</span></span><br><span class="line">    cv2.namedWindow(name,<span class="number">0</span>)</span><br><span class="line">    cv2.imshow(name,img)</span><br><span class="line">    cv2.waitKey(<span class="number">0</span>)</span><br><span class="line">    cv2.destroyAllWindows()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 得到一个圆形遮罩，返回中间圆形</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_zhezhao</span><span class="params">(imgfan)</span>:</span></span><br><span class="line">    <span class="comment">#获取图片尺寸</span></span><br><span class="line">    height, width = imgfan.shape[:<span class="number">2</span>]</span><br><span class="line">    height = int(height)</span><br><span class="line">    width = int(width)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#生成内显示模板</span></span><br><span class="line">    circleIn = np.zeros((height, width, <span class="number">1</span>), np.uint8)</span><br><span class="line">    circleIn = cv2.circle(circleIn, (width // <span class="number">2</span>, height // <span class="number">2</span>), min(height, width) // <span class="number">2</span>, (<span class="number">1</span>), <span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#原图与内显示模板融合</span></span><br><span class="line">    <span class="comment">#生成空白图片</span></span><br><span class="line">    imgIn = np.zeros((height, width, <span class="number">4</span>), np.uint8)</span><br><span class="line">    <span class="comment">#复制前3个通道</span></span><br><span class="line">    imgIn[:, :, <span class="number">0</span>] = np.multiply(imgfan[:, :, <span class="number">0</span>], circleIn[:, :, <span class="number">0</span>])</span><br><span class="line">    imgIn[:, :, <span class="number">1</span>] = np.multiply(imgfan[:, :, <span class="number">1</span>], circleIn[:, :, <span class="number">0</span>])</span><br><span class="line">    imgIn[:, :, <span class="number">2</span>] = np.multiply(imgfan[:, :, <span class="number">2</span>], circleIn[:, :, <span class="number">0</span>])</span><br><span class="line">    <span class="comment">#设置α通道的不透明部分</span></span><br><span class="line">    circleIn[circleIn == <span class="number">1</span>] = <span class="number">1</span></span><br><span class="line">    imgIn[:, :, <span class="number">3</span>] = circleIn[:, :, <span class="number">0</span>]</span><br><span class="line">    <span class="comment"># cv2.imwrite('./img/result1.jpg', imgIn)</span></span><br><span class="line">    <span class="comment"># cv_show('imgin',imgIn)</span></span><br><span class="line">    <span class="keyword">return</span> imgIn</span><br><span class="line"></span><br><span class="line"><span class="comment"># 得到线，霍夫直线</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getlines</span><span class="params">(imgIn)</span>:</span></span><br><span class="line">    gray = cv2.cvtColor(imgIn,cv2.COLOR_BGR2GRAY)</span><br><span class="line">    <span class="comment"># cv_show("gray",gray)</span></span><br><span class="line">    edges = cv2.Canny(gray, <span class="number">10</span>, <span class="number">150</span>, apertureSize=<span class="number">3</span>)</span><br><span class="line">    lines = cv2.HoughLinesP(edges, <span class="number">1</span>, np.pi / <span class="number">180</span>, <span class="number">80</span>, minLineLength=<span class="number">110</span>, maxLineGap=<span class="number">10</span>)</span><br><span class="line">            <span class="comment"># print(type(lines))</span></span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> lines:</span><br><span class="line">        x1, y1, x2, y2 = line[<span class="number">0</span>]</span><br><span class="line">        <span class="comment"># print(x1,y1,x2,y2)</span></span><br><span class="line">        cv2.line(imgbufen, (x1, y1), (x2, y2), (<span class="number">0</span>, <span class="number">255</span>,<span class="number">0</span>), <span class="number">2</span>)</span><br><span class="line">        <span class="comment"># cv_show('img',imgbufen)</span></span><br><span class="line">        floatx1.append(float(x1))</span><br><span class="line">        floaty1.append(float(y1))</span><br><span class="line">        floatx2.append(float(x2))</span><br><span class="line">        floaty2.append(float(y2))</span><br><span class="line">    <span class="comment"># cv_show('imgline',imgbufen)</span></span><br><span class="line">    <span class="keyword">return</span> floatx1,floaty1,floatx2,floaty2</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_thr_k</span><span class="params">()</span>:</span></span><br><span class="line">    thrs = []</span><br><span class="line">    ks = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(floatx1)):</span><br><span class="line">        x1 = floatx1[i]</span><br><span class="line">        y1 = floaty1[i]</span><br><span class="line">        x2 = floatx2[i]</span><br><span class="line">        y2 = floaty2[i]</span><br><span class="line">        k = (y1-y2)/(x2-x1)</span><br><span class="line">        thr = math.atan(k)</span><br><span class="line">        thr = math.degrees(thr)</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line">        ks.append(k)</span><br><span class="line">        thrs.append(thr)</span><br><span class="line">    <span class="keyword">return</span> ks,thrs</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">imgIn = get_zhezhao(imgfan)</span><br><span class="line">floatx1,floaty1,floatx2,floaty2 = [],[],[],[]</span><br><span class="line">getlines(imgIn)</span><br><span class="line"></span><br><span class="line"><span class="comment"># print(floatx1,floaty1,floatx2,floaty2)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 多条直线的角度列表，单条直线直接thrs[0]</span></span><br><span class="line">thrs = get_thr_k()</span><br><span class="line">print(<span class="string">f'直线的斜率为：<span class="subst">{thrs[<span class="number">0</span>][<span class="number">0</span>]}</span>'</span>)</span><br><span class="line">print(<span class="string">f'直线与横线间角度值：<span class="subst">{thrs[<span class="number">1</span>][<span class="number">0</span>]}</span>'</span>)</span><br><span class="line">cv_show(<span class="string">'imgline'</span>,imgbufen)</span><br></pre></td></tr></tbody></table></figure><h2 id="1-4-更高级的检测指针，然后返回指针斜率"><a href="#1-4-更高级的检测指针，然后返回指针斜率" class="headerlink" title="1.4 更高级的检测指针，然后返回指针斜率"></a>1.4 更高级的检测指针，然后返回指针斜率</h2><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">import</span> linekthr <span class="keyword">as</span> lt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_pointer_rad</span><span class="params">(img)</span>:</span></span><br><span class="line">    <span class="string">'''获取角度'''</span></span><br><span class="line">    shape = img.shape</span><br><span class="line">    c_y, c_x, depth = int(shape[<span class="number">0</span>] / <span class="number">2</span>), int(shape[<span class="number">1</span>] / <span class="number">2</span>), shape[<span class="number">2</span>]    <span class="comment"># h,w,cute</span></span><br><span class="line">    x1=c_x+c_x*<span class="number">1.5</span>  <span class="comment"># 指针长度--宽 2.5倍</span></span><br><span class="line">    src = img.copy()</span><br><span class="line">    freq_list = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">361</span>):        <span class="comment"># 算法</span></span><br><span class="line">        x = (x1 - c_x) * math.cos(i * math.pi / <span class="number">180</span>) + c_x</span><br><span class="line">        y = (x1 - c_x) * math.sin(i * math.pi / <span class="number">180</span>) + c_y</span><br><span class="line">        temp = src.copy()   <span class="comment"># 备份</span></span><br><span class="line">        cv2.line(temp, (c_x, c_y), (int(x), int(y)), (<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>), thickness=<span class="number">1</span>)  <span class="comment"># 在temp上画线</span></span><br><span class="line">        t1 = img.copy()</span><br><span class="line">        t1[temp[:, :, <span class="number">1</span>] == <span class="number">255</span>] = <span class="number">255</span></span><br><span class="line">        c = img[temp[:, :, <span class="number">1</span>] == <span class="number">255</span>]</span><br><span class="line">        points = c[c == <span class="number">0</span>]</span><br><span class="line">        freq_list.append((len(points), i))</span><br><span class="line">        cv2.imshow(<span class="string">'d'</span>, temp)</span><br><span class="line">        <span class="comment"># cv2.imshow('d1', t1)</span></span><br><span class="line">        cv2.waitKey(<span class="number">1</span>)</span><br><span class="line">    <span class="comment"># key = lambda x: float(x[0])</span></span><br><span class="line">    <span class="comment"># keytup = max(freq_list, key=key)</span></span><br><span class="line">    <span class="comment"># thrth = keytup[1]</span></span><br><span class="line">    <span class="comment"># print(f'当前角度:{thrth}度')</span></span><br><span class="line">    <span class="comment"># print('当前角度：',max(freq_list, key=key),'度')</span></span><br><span class="line">    cv2.destroyAllWindows()</span><br><span class="line">    <span class="keyword">return</span> max(freq_list, key=<span class="keyword">lambda</span> x: x[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">img = cv2.imread(<span class="string">'./img/clock_re.png'</span>)</span><br><span class="line">imgc = img[<span class="number">0</span>:<span class="number">165</span>,<span class="number">6</span>:<span class="number">171</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getthr</span><span class="params">()</span>:</span></span><br><span class="line">    thres = np.random.randint(<span class="number">40</span>,<span class="number">100</span>)   <span class="comment"># 随机数范围</span></span><br><span class="line">    <span class="comment"># print(thres)</span></span><br><span class="line">    imgfan = cv2.threshold(imgc, thres, <span class="number">255</span>, cv2.THRESH_BINARY)[<span class="number">1</span>]</span><br><span class="line">    max = get_pointer_rad(imgfan)</span><br><span class="line">    <span class="comment"># lt.cv_show('imgfan',imgfan)</span></span><br><span class="line">    <span class="comment"># print(max)</span></span><br><span class="line">    <span class="comment"># exit()</span></span><br><span class="line">    thrs = []</span><br><span class="line">    thr = max[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">return</span> thr</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_averg</span><span class="params">()</span>:</span></span><br><span class="line">    tol = <span class="number">0</span></span><br><span class="line">    h = <span class="number">20</span>          <span class="comment"># 统计次数</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(h):</span><br><span class="line">        thr = getthr()</span><br><span class="line">        tol = tol + thr</span><br><span class="line">        print(<span class="string">f'第<span class="subst">{i+<span class="number">1</span>}</span>次的角度:<span class="subst">{thr}</span>'</span>)</span><br><span class="line">    averg = tol / h</span><br><span class="line">    <span class="keyword">return</span> averg</span><br><span class="line"></span><br><span class="line">print(<span class="string">f'角度的平均值：<span class="subst">{get_averg()}</span>'</span>)</span><br></pre></td></tr></tbody></table></figure><h1 id="2-初步完成核心"><a href="#2-初步完成核心" class="headerlink" title="2. 初步完成核心"></a>2. 初步完成<del>核心</del></h1><p><code>line_get.py</code></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取指针角度值</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_pointer_rad</span><span class="params">(img)</span>:</span></span><br><span class="line">    shape = img.shape</span><br><span class="line">    c_y, c_x, depth = int(shape[<span class="number">0</span>] / <span class="number">2</span>), int(shape[<span class="number">1</span>] / <span class="number">2</span>), shape[<span class="number">2</span>]    <span class="comment"># h,w,cute</span></span><br><span class="line">    x1=c_x+c_x*<span class="number">1.5</span>  <span class="comment"># 指针长度--宽 2.5倍</span></span><br><span class="line">    src = img.copy()</span><br><span class="line">    freq_list = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">361</span>):        <span class="comment"># 算法</span></span><br><span class="line">        x = (x1 - c_x) * math.cos(i * math.pi / <span class="number">180</span>) + c_x</span><br><span class="line">        y = (x1 - c_x) * math.sin(i * math.pi / <span class="number">180</span>) + c_y</span><br><span class="line">        temp = src.copy()   <span class="comment"># 备份</span></span><br><span class="line">        cv2.line(temp, (c_x, c_y), (int(x), int(y)), (<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>), thickness=<span class="number">1</span>)  <span class="comment"># 在temp上画线</span></span><br><span class="line">        t1 = img.copy()</span><br><span class="line">        t1[temp[:, :, <span class="number">1</span>] == <span class="number">255</span>] = <span class="number">255</span></span><br><span class="line">        c = img[temp[:, :, <span class="number">1</span>] == <span class="number">255</span>]</span><br><span class="line">        points = c[c == <span class="number">0</span>]</span><br><span class="line">        freq_list.append((len(points), i))</span><br><span class="line">        <span class="comment"># 可以展示匹配过程</span></span><br><span class="line">        <span class="comment"># cv2.imshow('d', temp)</span></span><br><span class="line">        <span class="comment"># cv2.imshow('d1', t1)</span></span><br><span class="line">        <span class="comment"># 如果要求固定检测时间不要太快，可以在这里调慢</span></span><br><span class="line">        cv2.waitKey(<span class="number">1</span>)</span><br><span class="line">    cv2.destroyAllWindows()</span><br><span class="line">    <span class="keyword">return</span> max(freq_list, key=<span class="keyword">lambda</span> x: x[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getthr</span><span class="params">(imgc)</span>:</span></span><br><span class="line">    thres = np.random.randint(<span class="number">40</span>,<span class="number">100</span>)   <span class="comment"># 随机数范围</span></span><br><span class="line">    imgfan = cv2.threshold(imgc, thres, <span class="number">255</span>, cv2.THRESH_BINARY)[<span class="number">1</span>]</span><br><span class="line">    max = get_pointer_rad(imgfan)</span><br><span class="line">    thr = max[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">return</span> thr</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_averg</span><span class="params">(imgc,h)</span>:</span></span><br><span class="line">    tol = <span class="number">0</span></span><br><span class="line">    h = int(h)          <span class="comment"># 统计次数</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(h):</span><br><span class="line">        thr = getthr(imgc)</span><br><span class="line">        tol = tol + thr</span><br><span class="line">        <span class="comment"># debug 看看角度是否正确统计</span></span><br><span class="line">        <span class="comment"># print(f'第{i+1}次的角度:{thr}')</span></span><br><span class="line">        print(i+<span class="number">1</span>,end=<span class="string">'、'</span>)</span><br><span class="line">    averg = tol / h</span><br><span class="line">    <span class="keyword">return</span> averg</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    img = cv2.imread(<span class="string">'./img/clock_re.png'</span>)</span><br><span class="line">    imgc = img[<span class="number">0</span>:<span class="number">165</span>, <span class="number">6</span>:<span class="number">171</span>]</span><br><span class="line">    print(<span class="string">f'角度的平均值：<span class="subst">{get_averg(imgc,<span class="number">5</span>)}</span>'</span>)</span><br></pre></td></tr></tbody></table></figure><p><code>xlsx_get.py</code></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> openpyxl <span class="keyword">import</span> Workbook</span><br><span class="line"><span class="keyword">import</span> openpyxl <span class="keyword">as</span> xl</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> line_get <span class="keyword">as</span> lg</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_xlsx</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 新建xlsx或打开已有xlsx</span></span><br><span class="line">    filex = <span class="string">'data.xlsx'</span></span><br><span class="line">    <span class="keyword">if</span> os.path.exists(filex):</span><br><span class="line">        print(<span class="string">'--在result.xlsx中写入数据--'</span>)</span><br><span class="line">        wb = xl.load_workbook(<span class="string">'data.xlsx'</span>)</span><br><span class="line">        <span class="comment"># 文件表单定位</span></span><br><span class="line">        sheet = wb[<span class="string">'Sheet'</span>]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        wb = Workbook()</span><br><span class="line">        print(<span class="string">'--新建一个data.xlsx--'</span>)</span><br><span class="line">        sheet = wb[<span class="string">'Sheet'</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 储存数据</span></span><br><span class="line">    ws = wb.active</span><br><span class="line">    ws[<span class="string">'A1'</span>] = <span class="string">'指针角度'</span></span><br><span class="line">    ws[<span class="string">'B1'</span>] = <span class="string">'转换角度'</span></span><br><span class="line">    ws[<span class="string">'C1'</span>] = <span class="string">'测试时间'</span></span><br><span class="line">    img = cv2.imread(<span class="string">'./img/clock_re.png'</span>)</span><br><span class="line">    imgh = img[<span class="number">0</span>:<span class="number">165</span>,<span class="number">6</span>:<span class="number">171</span>]</span><br><span class="line"></span><br><span class="line">    cishu = int(input(<span class="string">'请输入需要多少组数据--一直测则输入0--：'</span>))</span><br><span class="line">    pingjun = int(input(<span class="string">'请输入多少组算一次平均值--推荐10--:'</span>))</span><br><span class="line"></span><br><span class="line">    row = <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> cishu == <span class="number">0</span> <span class="keyword">or</span> cishu &lt; <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">while</span> row &gt;= cishu :</span><br><span class="line">            maxrow = sheet.max_row</span><br><span class="line">            <span class="comment"># print(f'excel中第{maxrow + 1}行输入数据-----')</span></span><br><span class="line">            <span class="comment"># 测几次来算平均值 imgh,10--10次</span></span><br><span class="line">            thr = lg.get_averg(imgh,pingjun)</span><br><span class="line">            ws.cell(row=maxrow+<span class="number">1</span>,column=<span class="number">1</span>,value=thr)</span><br><span class="line">            print(<span class="string">f'第<span class="subst">{row + <span class="number">1</span>}</span>组-----角度平均值数据：<span class="subst">{thr}</span>，输入到第<span class="subst">{maxrow + <span class="number">1</span>}</span>行中'</span>)</span><br><span class="line">            <span class="keyword">if</span> thr&gt;<span class="number">0</span> <span class="keyword">and</span> thr&lt;=<span class="number">45</span>:</span><br><span class="line">                cdu = thr/<span class="number">2.25</span> +<span class="number">100</span></span><br><span class="line">            <span class="keyword">elif</span> thr&gt;=<span class="number">135</span> <span class="keyword">and</span> thr &lt;= <span class="number">360</span>:</span><br><span class="line">                cdu = (thr - <span class="number">135</span>)/<span class="number">2.25</span></span><br><span class="line">            <span class="keyword">else</span> :</span><br><span class="line">                cdu = <span class="string">'故障'</span></span><br><span class="line">            ws.cell(row=maxrow+<span class="number">1</span>,column=<span class="number">2</span>,value=cdu)</span><br><span class="line">            timed = time.strftime(<span class="string">"%H:%M:%S"</span>, time.localtime())  <span class="comment"># %Y-%m-%d</span></span><br><span class="line">            ws.cell(row=maxrow+<span class="number">1</span>,column=<span class="number">3</span>,value=timed)</span><br><span class="line">            row += <span class="number">1</span></span><br><span class="line">            wb.save(<span class="string">'result.xlsx'</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">while</span> row &lt; cishu :</span><br><span class="line">            maxrow = sheet.max_row</span><br><span class="line">            <span class="comment"># print(f'excel中第{maxrow + 1}行输入数据-----')</span></span><br><span class="line">            <span class="comment"># 测几次来算平均值 imgh,10--10次</span></span><br><span class="line">            thr = lg.get_averg(imgh,pingjun)</span><br><span class="line">            ws.cell(row=maxrow+<span class="number">1</span>,column=<span class="number">1</span>,value=thr)</span><br><span class="line">            print(<span class="string">f'第<span class="subst">{row + <span class="number">1</span>}</span>组-----角度平均值数据：<span class="subst">{thr}</span>，输入到第<span class="subst">{maxrow + <span class="number">1</span>}</span>行中'</span>)</span><br><span class="line">            <span class="keyword">if</span> thr&gt;<span class="number">0</span> <span class="keyword">and</span> thr&lt;=<span class="number">45</span>:</span><br><span class="line">                cdu = thr/<span class="number">2.25</span> +<span class="number">100</span></span><br><span class="line">            <span class="keyword">elif</span> thr&gt;=<span class="number">135</span> <span class="keyword">and</span> thr &lt;= <span class="number">360</span>:</span><br><span class="line">                cdu = (thr - <span class="number">135</span>)/<span class="number">2.25</span></span><br><span class="line">            <span class="keyword">else</span> :</span><br><span class="line">                cdu = <span class="string">'故障'</span></span><br><span class="line">            ws.cell(row=maxrow+<span class="number">1</span>,column=<span class="number">2</span>,value=cdu)</span><br><span class="line">            timed = time.strftime(<span class="string">"%H:%M:%S"</span>, time.localtime())  <span class="comment"># %Y-%m-%d</span></span><br><span class="line">            ws.cell(row=maxrow+<span class="number">1</span>,column=<span class="number">3</span>,value=timed)</span><br><span class="line">            row += <span class="number">1</span></span><br><span class="line">            wb.save(<span class="string">'data.xlsx'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    get_xlsx()</span><br></pre></td></tr></tbody></table></figure><p><code>keshihua_data.py</code><br><strong>主要运行文件</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> plotly.offline <span class="keyword">as</span> ptly</span><br><span class="line"><span class="keyword">import</span> plotly.graph_objs <span class="keyword">as</span> go</span><br><span class="line"><span class="keyword">import</span> openpyxl <span class="keyword">as</span> xl</span><br><span class="line"><span class="keyword">import</span> xlsx_get <span class="keyword">as</span> xg</span><br><span class="line"></span><br><span class="line">xg.get_xlsx()</span><br><span class="line">data=[]</span><br><span class="line">wb = xl.load_workbook(<span class="string">'data.xlsx'</span>)</span><br><span class="line">sheet = wb[<span class="string">'Sheet'</span>]</span><br><span class="line">ws = wb.active</span><br><span class="line"></span><br><span class="line">cdu = []</span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> ws.iter_rows(min_row=<span class="number">2</span>, min_col=<span class="number">2</span>,max_col=<span class="number">2</span>,max_row=sheet.max_row ):</span><br><span class="line">    <span class="keyword">for</span> cell <span class="keyword">in</span> row:</span><br><span class="line">        cdu.append(cell.value)</span><br><span class="line">timed = []</span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> ws.iter_rows(min_row=<span class="number">2</span>, min_col=<span class="number">3</span>,max_col=<span class="number">3</span>,max_row=sheet.max_row ):</span><br><span class="line">    <span class="keyword">for</span> cell <span class="keyword">in</span> row:</span><br><span class="line">        timed.append(cell.value)</span><br><span class="line"></span><br><span class="line">trace1 = go.Scatter(x = timed,</span><br><span class="line">                    y = cdu,</span><br><span class="line">                    mode = <span class="string">'lines+markers'</span>,   <span class="comment">#mode可选'markers','lines','lines+markers'</span></span><br><span class="line">                    name = <span class="string">'data'</span>,</span><br><span class="line">                    marker = dict(size = <span class="number">10</span>,        <span class="comment">#若设为变量则可用散点大小表示变量大小</span></span><br><span class="line">                                  color = <span class="string">'rgba(152, 0, 0, .8)'</span>,</span><br><span class="line">                                  line = dict(width = <span class="number">2</span>,</span><br><span class="line">                                              color = <span class="string">'rgb(0, 0, 0)'</span></span><br><span class="line">                                              ),</span><br><span class="line">                                  opacity=[]</span><br><span class="line">                                )</span><br><span class="line">            )</span><br><span class="line">data.append(trace1)</span><br><span class="line">layout = go.Layout(font=dict(family=<span class="string">'Courier New, monospace'</span>, size=<span class="number">18</span>, color=<span class="string">'#3D3D3D'</span>),</span><br><span class="line">                   title=<span class="string">'温度值'</span></span><br><span class="line">    )</span><br><span class="line">fig = go.Figure(data=data, layout=layout)</span><br><span class="line">ptly.plot(fig, filename = <span class="string">'data.html'</span>)</span><br></pre></td></tr></tbody></table></figure><h1 id="3-进一步优化，直接再存到-excel-同时绘制图线，达到粗略得实时"><a href="#3-进一步优化，直接再存到-excel-同时绘制图线，达到粗略得实时" class="headerlink" title="3. 进一步优化，直接再存到 excel 同时绘制图线，达到粗略得实时"></a>3. 进一步优化，直接再存到 excel 同时绘制图线，达到粗略得实时</h1><p><code>keshihua_data_shishi.py</code></p><ul><li>1.实时显示，但不太美观，而且不丝滑</li><li>2.界面美观，但不会实时显示</li></ul><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># import plotly.offline as ptly</span></span><br><span class="line"><span class="comment"># import plotly.graph_objs as go</span></span><br><span class="line"><span class="keyword">import</span> openpyxl <span class="keyword">as</span> xl</span><br><span class="line"><span class="keyword">from</span> openpyxl <span class="keyword">import</span> Workbook</span><br><span class="line"><span class="keyword">import</span> line_get <span class="keyword">as</span> lg</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save_xlsx</span><span class="params">(thr,cdu,timed)</span>:</span></span><br><span class="line">    filex = <span class="string">'ssdata.xlsx'</span></span><br><span class="line">    <span class="keyword">if</span> os.path.exists(filex):</span><br><span class="line">        print(<span class="string">f'--在ssdata.xlsx中写入数据--'</span>)</span><br><span class="line">        wb = xl.load_workbook(<span class="string">'ssdata.xlsx'</span>)</span><br><span class="line">        <span class="comment"># 文件表单定位</span></span><br><span class="line">        sheet = wb[<span class="string">'Sheet'</span>]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        wb = Workbook()</span><br><span class="line">        print(<span class="string">'--新建一个ssdata.xlsx--'</span>)</span><br><span class="line">        sheet = wb[<span class="string">'Sheet'</span>]</span><br><span class="line"></span><br><span class="line">    ws = wb.active</span><br><span class="line">    ws[<span class="string">'A1'</span>] = <span class="string">'指针角度'</span></span><br><span class="line">    ws[<span class="string">'B1'</span>] = <span class="string">'转换角度'</span></span><br><span class="line">    ws[<span class="string">'C1'</span>] = <span class="string">'测试时间'</span></span><br><span class="line"></span><br><span class="line">    maxrow = sheet.max_row + <span class="number">1</span></span><br><span class="line">    ws.cell(row=maxrow,column=<span class="number">1</span>,value=thr)</span><br><span class="line">    ws.cell(row=maxrow,column=<span class="number">2</span>,value=cdu)</span><br><span class="line">    ws.cell(row=maxrow,column=<span class="number">3</span>,value=timed)</span><br><span class="line"></span><br><span class="line">    wb.save(<span class="string">'ssdata.xlsx'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_cts</span><span class="params">()</span>:</span></span><br><span class="line">    filex = <span class="string">'ssdata.xlsx'</span></span><br><span class="line">    <span class="keyword">if</span> os.path.exists(filex):</span><br><span class="line">        print(<span class="string">f'--在ssdata.xlsx中写入数据--'</span>)</span><br><span class="line">        wb = xl.load_workbook(<span class="string">'ssdata.xlsx'</span>)</span><br><span class="line">        <span class="comment"># 文件表单定位</span></span><br><span class="line">        sheet = wb[<span class="string">'Sheet'</span>]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        wb = Workbook()</span><br><span class="line">        print(<span class="string">'--新建一个ssdata.xlsx--'</span>)</span><br><span class="line">        sheet = wb[<span class="string">'Sheet'</span>]</span><br><span class="line">    ws = wb.active</span><br><span class="line">    cdu = []</span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> ws.iter_rows(min_row=<span class="number">2</span>, min_col=<span class="number">2</span>,max_col=<span class="number">2</span>,max_row=sheet.max_row ):</span><br><span class="line">        <span class="keyword">for</span> cell <span class="keyword">in</span> row:</span><br><span class="line">            cdu.append(str(cell.value))</span><br><span class="line">    timed = []</span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> ws.iter_rows(min_row=<span class="number">2</span>, min_col=<span class="number">3</span>,max_col=<span class="number">3</span>,max_row=sheet.max_row ):</span><br><span class="line">        <span class="keyword">for</span> cell <span class="keyword">in</span> row:</span><br><span class="line">            timed.append(cell.value)</span><br><span class="line">    <span class="keyword">return</span> cdu,timed</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_shishi</span><span class="params">(cishu,pingjun)</span>:</span></span><br><span class="line">    img = cv2.imread(<span class="string">'./img/clock_re.png'</span>)</span><br><span class="line">    imgh = img[<span class="number">0</span>:<span class="number">165</span>,<span class="number">6</span>:<span class="number">171</span>]</span><br><span class="line"></span><br><span class="line">    row = <span class="number">0</span></span><br><span class="line">    cts = get_cts()</span><br><span class="line">    cdus = cts[<span class="number">0</span>]</span><br><span class="line">    timeds = cts[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> row &gt;= cishu :</span><br><span class="line">        thr = lg.get_averg(imgh,pingjun)</span><br><span class="line">        <span class="keyword">if</span> thr &gt; <span class="number">0</span> <span class="keyword">and</span> thr &lt;= <span class="number">45</span>:</span><br><span class="line">            cdu = thr / <span class="number">2.25</span> + <span class="number">100</span></span><br><span class="line">        <span class="keyword">elif</span> thr &gt;= <span class="number">135</span> <span class="keyword">and</span> thr &lt;= <span class="number">360</span>:</span><br><span class="line">            cdu = (thr - <span class="number">135</span>) / <span class="number">2.25</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            cdu = <span class="string">'测试故障'</span></span><br><span class="line">        cdus.append(str(cdu))</span><br><span class="line">        timed = time.strftime(<span class="string">"%H:%M:%S"</span>, time.localtime())</span><br><span class="line">        timeds.append(timed)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 保存数据</span></span><br><span class="line">        save_xlsx(thr,cdu,timed)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># plt.figure(1)</span></span><br><span class="line">        plt.clf()  <span class="comment"># 清空画布上的所有内容</span></span><br><span class="line">        fig1 = plt.figure(num=<span class="string">'温度-时间'</span>, figsize=(<span class="number">20</span>, <span class="number">10</span>), dpi=<span class="number">75</span>, facecolor=<span class="string">'#FFFFFF'</span>, edgecolor=<span class="string">'#0000FF'</span>)</span><br><span class="line">        plt.xlabel(<span class="string">'Time'</span>)</span><br><span class="line">        plt.ylabel(<span class="string">'Temp'</span>)</span><br><span class="line">        plt.plot(timeds, cdus, <span class="string">'r-s'</span>)</span><br><span class="line">        <span class="comment"># plt.draw()  # 注意此函数需要调用</span></span><br><span class="line">        <span class="comment"># time.sleep(0.01)</span></span><br><span class="line">        plt.pause(<span class="number">0.01</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> len(timeds) &gt;= <span class="number">22</span>:</span><br><span class="line">            timeds = []</span><br><span class="line">            cdus = []</span><br><span class="line">            plt.clf()</span><br><span class="line">        <span class="keyword">else</span> :</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># # plotly 数据可视化 美观，可是不会动态</span></span><br><span class="line">        <span class="comment"># data = []</span></span><br><span class="line">        <span class="comment"># namee = str(round(cdu,1)) + '°C'</span></span><br><span class="line">        <span class="comment"># trace1 = go.Scatter(x=timeds,</span></span><br><span class="line">        <span class="comment">#                     y=cdus,</span></span><br><span class="line">        <span class="comment">#                     mode='lines+markers',  # mode可选'markers','lines','lines+markers'</span></span><br><span class="line">        <span class="comment">#                     name= namee,</span></span><br><span class="line">        <span class="comment">#                     marker=dict(size=10,  # 若设为变量则可用散点大小表示变量大小</span></span><br><span class="line">        <span class="comment">#                                 color='rgba(152, 0, 0, .8)',</span></span><br><span class="line">        <span class="comment">#                                 line=dict(width=2,</span></span><br><span class="line">        <span class="comment">#                                           color='rgb(0, 0, 0)'</span></span><br><span class="line">        <span class="comment">#                                           ),</span></span><br><span class="line">        <span class="comment">#                                 opacity=[]</span></span><br><span class="line">        <span class="comment">#                                 )</span></span><br><span class="line">        <span class="comment">#                     )</span></span><br><span class="line">        <span class="comment"># data.append(trace1)</span></span><br><span class="line">        <span class="comment"># axis_template = dict(</span></span><br><span class="line">        <span class="comment">#     showgrid=True,  # 网格</span></span><br><span class="line">        <span class="comment">#     zeroline=True,  # 是否显示基线,即沿着(0,0)画出x轴和y轴</span></span><br><span class="line">        <span class="comment">#     nticks=20,</span></span><br><span class="line">        <span class="comment">#     showline=True,</span></span><br><span class="line">        <span class="comment">#     title='Time',</span></span><br><span class="line">        <span class="comment">#     mirror='all',</span></span><br><span class="line">        <span class="comment">#     zerolinecolor="#FF0000"</span></span><br><span class="line">        <span class="comment"># )</span></span><br><span class="line">        <span class="comment"># ayis_template = dict(</span></span><br><span class="line">        <span class="comment">#     showgrid=True,  # 网格</span></span><br><span class="line">        <span class="comment">#     zeroline=True,  # 是否显示基线,即沿着(0,0)画出x轴和y轴</span></span><br><span class="line">        <span class="comment">#     nticks=20,</span></span><br><span class="line">        <span class="comment">#     showline=True,</span></span><br><span class="line">        <span class="comment">#     title='Temp',</span></span><br><span class="line">        <span class="comment">#     mirror='all',</span></span><br><span class="line">        <span class="comment">#     zerolinecolor="#FF0000"</span></span><br><span class="line">        <span class="comment"># )</span></span><br><span class="line">        <span class="comment"># layout = go.Layout(font=dict(family='Courier New, monospace', size=18, color='#3D3D3D'),</span></span><br><span class="line">        <span class="comment">#                    title='温度值' ,xaxis=axis_template,yaxis=ayis_template</span></span><br><span class="line">        <span class="comment">#                    )</span></span><br><span class="line">        <span class="comment"># fig = go.Figure(data=data, layout=layout)</span></span><br><span class="line">        <span class="comment"># ptly.plot(fig, filename='ssdata.html')</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    get_shishi(<span class="number">0</span>,<span class="number">5</span>)</span><br></pre></td></tr></tbody></table></figure><p><code>keshihua_shishi.py</code></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> keshihua_data_shishi <span class="keyword">as</span> kds</span><br><span class="line"></span><br><span class="line">cishu = <span class="number">0</span>   <span class="comment"># 0 - 一直测</span></span><br><span class="line">pingjun = int(input(<span class="string">'请输入多少组算一次平均数--建议10组--:'</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    kds.get_shishi(cishu,pingjun)</span><br></pre></td></tr></tbody></table></figure><h1 id="4-粗糙的整合–待优化"><a href="#4-粗糙的整合–待优化" class="headerlink" title="4. 粗糙的整合–待优化"></a>4. 粗糙的整合–待优化</h1><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> openpyxl <span class="keyword">as</span> xl</span><br><span class="line"><span class="keyword">from</span> openpyxl <span class="keyword">import</span> Workbook</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> plotly.offline <span class="keyword">as</span> ptly</span><br><span class="line"><span class="keyword">import</span> plotly.graph_objs <span class="keyword">as</span> go</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取指针角度值</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_pointer_rad</span><span class="params">(img)</span>:</span></span><br><span class="line">    shape = img.shape</span><br><span class="line">    c_y, c_x, depth = int(shape[<span class="number">0</span>] / <span class="number">2</span>), int(shape[<span class="number">1</span>] / <span class="number">2</span>), shape[<span class="number">2</span>]    <span class="comment"># h,w,cute</span></span><br><span class="line">    x1=c_x+c_x*<span class="number">1.5</span>  <span class="comment"># 指针长度--宽 2.5倍</span></span><br><span class="line">    src = img.copy()</span><br><span class="line">    freq_list = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">361</span>):        <span class="comment"># 算法</span></span><br><span class="line">        x = (x1 - c_x) * math.cos(i * math.pi / <span class="number">180</span>) + c_x</span><br><span class="line">        y = (x1 - c_x) * math.sin(i * math.pi / <span class="number">180</span>) + c_y</span><br><span class="line">        temp = src.copy()   <span class="comment"># 备份</span></span><br><span class="line">        cv2.line(temp, (c_x, c_y), (int(x), int(y)), (<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>), thickness=<span class="number">1</span>)  <span class="comment"># 在temp上画线</span></span><br><span class="line">        t1 = img.copy()</span><br><span class="line">        t1[temp[:, :, <span class="number">1</span>] == <span class="number">255</span>] = <span class="number">255</span></span><br><span class="line">        c = img[temp[:, :, <span class="number">1</span>] == <span class="number">255</span>]</span><br><span class="line">        points = c[c == <span class="number">0</span>]</span><br><span class="line">        freq_list.append((len(points), i))</span><br><span class="line">        <span class="comment"># 可以展示匹配过程</span></span><br><span class="line">        <span class="comment"># cv2.imshow('d', temp)</span></span><br><span class="line">        <span class="comment"># cv2.imshow('d1', t1)</span></span><br><span class="line">        <span class="comment"># 如果要求固定检测时间不要太快，可以在这里调慢</span></span><br><span class="line">        cv2.waitKey(<span class="number">1</span>)</span><br><span class="line">    cv2.destroyAllWindows()</span><br><span class="line">    <span class="keyword">return</span> max(freq_list, key=<span class="keyword">lambda</span> x: x[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getthr</span><span class="params">(imgc)</span>:</span></span><br><span class="line">    thres = np.random.randint(<span class="number">40</span>,<span class="number">100</span>)   <span class="comment"># 随机数范围</span></span><br><span class="line">    imgfan = cv2.threshold(imgc, thres, <span class="number">255</span>, cv2.THRESH_BINARY)[<span class="number">1</span>]</span><br><span class="line">    max = get_pointer_rad(imgfan)</span><br><span class="line">    thr = max[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">return</span> thr</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_averg</span><span class="params">(imgc,h)</span>:</span></span><br><span class="line">    tol = <span class="number">0</span></span><br><span class="line">    h = int(h)          <span class="comment"># 统计次数</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(h):</span><br><span class="line">        thr = getthr(imgc)</span><br><span class="line">        tol = tol + thr</span><br><span class="line">        <span class="comment"># debug 看看角度是否正确统计</span></span><br><span class="line">        <span class="comment"># print(f'第{i+1}次的角度:{thr}')</span></span><br><span class="line">        print(i+<span class="number">1</span>,end=<span class="string">'、'</span>)</span><br><span class="line">    averg = tol / h</span><br><span class="line">    <span class="keyword">return</span> averg</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save_xlsx</span><span class="params">(thr,cdu,timed)</span>:</span></span><br><span class="line">    filex = <span class="string">'ssdata.xlsx'</span></span><br><span class="line">    <span class="keyword">if</span> os.path.exists(filex):</span><br><span class="line">        print(<span class="string">f'--在ssdata.xlsx中写入数据--'</span>)</span><br><span class="line">        wb = xl.load_workbook(<span class="string">'ssdata.xlsx'</span>)</span><br><span class="line">        <span class="comment"># 文件表单定位</span></span><br><span class="line">        sheet = wb[<span class="string">'Sheet'</span>]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        wb = Workbook()</span><br><span class="line">        print(<span class="string">'--新建一个ssdata.xlsx--'</span>)</span><br><span class="line">        sheet = wb[<span class="string">'Sheet'</span>]</span><br><span class="line"></span><br><span class="line">    ws = wb.active</span><br><span class="line">    ws[<span class="string">'A1'</span>] = <span class="string">'指针角度'</span></span><br><span class="line">    ws[<span class="string">'B1'</span>] = <span class="string">'转换角度'</span></span><br><span class="line">    ws[<span class="string">'C1'</span>] = <span class="string">'测试时间'</span></span><br><span class="line"></span><br><span class="line">    maxrow = sheet.max_row + <span class="number">1</span></span><br><span class="line">    ws.cell(row=maxrow,column=<span class="number">1</span>,value=thr)</span><br><span class="line">    ws.cell(row=maxrow,column=<span class="number">2</span>,value=cdu)</span><br><span class="line">    ws.cell(row=maxrow,column=<span class="number">3</span>,value=timed)</span><br><span class="line"></span><br><span class="line">    wb.save(<span class="string">'ssdata.xlsx'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_cts</span><span class="params">()</span>:</span></span><br><span class="line">    filex = <span class="string">'ssdata.xlsx'</span></span><br><span class="line">    <span class="keyword">if</span> os.path.exists(filex):</span><br><span class="line">        print(<span class="string">f'--在ssdata.xlsx中写入数据--'</span>)</span><br><span class="line">        wb = xl.load_workbook(<span class="string">'ssdata.xlsx'</span>)</span><br><span class="line">        <span class="comment"># 文件表单定位</span></span><br><span class="line">        sheet = wb[<span class="string">'Sheet'</span>]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        wb = Workbook()</span><br><span class="line">        print(<span class="string">'--新建一个ssdata.xlsx--'</span>)</span><br><span class="line">        sheet = wb[<span class="string">'Sheet'</span>]</span><br><span class="line">    ws = wb.active</span><br><span class="line">    cdu = []</span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> ws.iter_rows(min_row=<span class="number">2</span>, min_col=<span class="number">2</span>,max_col=<span class="number">2</span>,max_row=sheet.max_row ):</span><br><span class="line">        <span class="keyword">for</span> cell <span class="keyword">in</span> row:</span><br><span class="line">            cdu.append(str(cell.value))</span><br><span class="line">    timed = []</span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> ws.iter_rows(min_row=<span class="number">2</span>, min_col=<span class="number">3</span>,max_col=<span class="number">3</span>,max_row=sheet.max_row ):</span><br><span class="line">        <span class="keyword">for</span> cell <span class="keyword">in</span> row:</span><br><span class="line">            timed.append(cell.value)</span><br><span class="line">    <span class="keyword">return</span> cdu,timed</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_shishi</span><span class="params">(cishu,pingjun)</span>:</span></span><br><span class="line">    <span class="comment"># img = cv2.imread('./img/clock_re.png')</span></span><br><span class="line">    imgh = cv2.imread(<span class="string">'frame.jpg'</span>)</span><br><span class="line">    <span class="comment"># imgh = img[0:165,6:171]</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 读取excle中数据</span></span><br><span class="line">    cts = get_cts()</span><br><span class="line">    cdus = cts[<span class="number">0</span>]</span><br><span class="line">    timeds = cts[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">    row = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">while</span> row:</span><br><span class="line">        thr = get_averg(imgh,pingjun)</span><br><span class="line">        <span class="keyword">if</span> thr &gt; <span class="number">0</span> <span class="keyword">and</span> thr &lt;= <span class="number">45</span>:</span><br><span class="line">            cdu = thr / <span class="number">2.25</span> + <span class="number">100</span></span><br><span class="line">        <span class="keyword">elif</span> thr &gt;= <span class="number">135</span> <span class="keyword">and</span> thr &lt;= <span class="number">360</span>:</span><br><span class="line">            cdu = (thr - <span class="number">135</span>) / <span class="number">2.25</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            cdu = <span class="string">'测试故障'</span></span><br><span class="line">        cdus.append(str(cdu))</span><br><span class="line">        timed = time.strftime(<span class="string">"%H:%M:%S"</span>, time.localtime())</span><br><span class="line">        timeds.append(timed)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 保存数据</span></span><br><span class="line">        save_xlsx(thr,cdu,timed)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment"># # plotly 数据可视化 美观，可是不会动态</span></span><br><span class="line">        <span class="comment"># data = []</span></span><br><span class="line">        <span class="comment"># cdu1 = round(cdu ,1)</span></span><br><span class="line">        <span class="comment"># namee = str(cdu1) + '°C'</span></span><br><span class="line">        <span class="comment"># trace1 = go.Scatter(x=timeds,</span></span><br><span class="line">        <span class="comment">#                     y=cdus,</span></span><br><span class="line">        <span class="comment">#                     mode='lines+markers',  # mode可选'markers','lines','lines+markers'</span></span><br><span class="line">        <span class="comment">#                     name= namee,</span></span><br><span class="line">        <span class="comment">#                     marker=dict(size=10,  # 若设为变量则可用散点大小表示变量大小</span></span><br><span class="line">        <span class="comment">#                                 color='rgba(152, 0, 0, .8)',</span></span><br><span class="line">        <span class="comment">#                                 line=dict(width=2,</span></span><br><span class="line">        <span class="comment">#                                           color='rgb(0, 0, 0)'</span></span><br><span class="line">        <span class="comment">#                                           ),</span></span><br><span class="line">        <span class="comment">#                                 opacity=[]</span></span><br><span class="line">        <span class="comment">#                                 )</span></span><br><span class="line">        <span class="comment">#                     )</span></span><br><span class="line">        <span class="comment"># data.append(trace1)</span></span><br><span class="line">        <span class="comment"># axis_template = dict(</span></span><br><span class="line">        <span class="comment">#     showgrid=True,  # 网格</span></span><br><span class="line">        <span class="comment">#     zeroline=True,  # 是否显示基线,即沿着(0,0)画出x轴和y轴</span></span><br><span class="line">        <span class="comment">#     nticks=20,</span></span><br><span class="line">        <span class="comment">#     showline=True,</span></span><br><span class="line">        <span class="comment">#     title='Time',</span></span><br><span class="line">        <span class="comment">#     mirror='all',</span></span><br><span class="line">        <span class="comment">#     zerolinecolor="#FF0000"</span></span><br><span class="line">        <span class="comment"># )</span></span><br><span class="line">        <span class="comment"># ayis_template = dict(</span></span><br><span class="line">        <span class="comment">#     showgrid=True,  # 网格</span></span><br><span class="line">        <span class="comment">#     zeroline=True,  # 是否显示基线,即沿着(0,0)画出x轴和y轴</span></span><br><span class="line">        <span class="comment">#     nticks=20,</span></span><br><span class="line">        <span class="comment">#     showline=True,</span></span><br><span class="line">        <span class="comment">#     title='Temp',</span></span><br><span class="line">        <span class="comment">#     mirror='all',</span></span><br><span class="line">        <span class="comment">#     zerolinecolor="#FF0000"</span></span><br><span class="line">        <span class="comment"># )</span></span><br><span class="line">        <span class="comment"># layout = go.Layout(font=dict(family='Courier New, monospace', size=18, color='#3D3D3D'),</span></span><br><span class="line">        <span class="comment">#                    title='温度值' ,xaxis=axis_template,yaxis=ayis_template</span></span><br><span class="line">        <span class="comment">#                    )</span></span><br><span class="line">        <span class="comment"># fig = go.Figure(data=data, layout=layout)</span></span><br><span class="line">        <span class="comment"># ptly.plot(fig, filename='ssdata.html')</span></span><br><span class="line">        <span class="comment"># break</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 实时数据，停不下来</span></span><br><span class="line">        <span class="comment"># plt.figure(1)</span></span><br><span class="line">        plt.clf()  <span class="comment"># 清空画布上的所有内容</span></span><br><span class="line">        fig1 = plt.figure(num=<span class="string">'温度-时间'</span>, figsize=(<span class="number">20</span>, <span class="number">10</span>), dpi=<span class="number">75</span>, facecolor=<span class="string">'#FFFFFF'</span>, edgecolor=<span class="string">'#0000FF'</span>)</span><br><span class="line">        plt.xlabel(<span class="string">'Time'</span>)</span><br><span class="line">        plt.ylabel(<span class="string">'Temp'</span>)</span><br><span class="line">        plt.plot(timeds, cdus, <span class="string">'r-s'</span>)</span><br><span class="line">        <span class="comment"># plt.draw()  # 注意此函数需要调用</span></span><br><span class="line">        <span class="comment"># time.sleep(0.01)</span></span><br><span class="line">        plt.pause(<span class="number">0.01</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> len(timeds) &gt;= <span class="number">22</span>:</span><br><span class="line">            timeds = []</span><br><span class="line">            cdus = []</span><br><span class="line">            plt.clf()</span><br><span class="line">            row = <span class="literal">False</span></span><br><span class="line">        <span class="keyword">else</span> :</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">video_show</span><span class="params">(video,ci)</span>:</span></span><br><span class="line">    i = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        ret1,frame = video.read()</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> ret1:</span><br><span class="line">            print(<span class="string">"视频获取失败！"</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        framegray = cv2.cvtColor(frame,cv2.COLOR_BGR2GRAY)</span><br><span class="line"></span><br><span class="line">        template = cv2.imread(<span class="string">'./img/moban_c.jpg'</span>)</span><br><span class="line">        <span class="comment"># print(template.shape)</span></span><br><span class="line">        <span class="comment"># exit()</span></span><br><span class="line">        theight , twidth = template.shape[<span class="number">0</span>] , template.shape[<span class="number">1</span>]</span><br><span class="line">        result = cv2.matchTemplate(frame,template,cv2.TM_SQDIFF_NORMED)</span><br><span class="line">        cv2.normalize(result,result,<span class="number">0</span>,<span class="number">1</span>,cv2.NORM_MINMAX,<span class="number">-1</span>)</span><br><span class="line">        min_val,max_val,min_loc,max_loc = cv2.minMaxLoc(result)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># # min_loc：矩形定点</span></span><br><span class="line">        <span class="comment"># # (min_loc[0]+twidth,min_loc[1]+theight)：矩形的宽高</span></span><br><span class="line">        <span class="comment"># # (0,0,225)：矩形的边框颜色；2：矩形边框宽度</span></span><br><span class="line">        cv2.rectangle(frame ,min_loc ,(min_loc[<span class="number">0</span>] + twidth ,min_loc[<span class="number">1</span>] + theight) ,(<span class="number">255</span> ,<span class="number">0</span> ,<span class="number">0</span>) ,<span class="number">2</span>)</span><br><span class="line">        cv2.imshow(<span class="string">"Video_show"</span>,frame)</span><br><span class="line"></span><br><span class="line">        choose_data = framegray[min_loc[<span class="number">0</span>]:(min_loc[<span class="number">0</span>] + twidth ),min_loc[<span class="number">1</span>]: (min_loc[<span class="number">1</span>] + theight)]</span><br><span class="line">        <span class="comment"># choose_datafan = cv2.threshold(choose_data ,110,255 ,cv2.THRESH_BINARY_INV)[1]</span></span><br><span class="line">        cv2.imshow(<span class="string">"choose_video"</span>,choose_data)</span><br><span class="line">        <span class="keyword">if</span> i%ci == <span class="number">0</span> :</span><br><span class="line">            cv2.imwrite(<span class="string">f'frame.jpg'</span>,choose_data)</span><br><span class="line">            print(<span class="string">f'照片已保存--frame.jpg--：'</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> cv2.waitKey(<span class="number">1</span>) &amp; <span class="number">0xff</span> == ord(<span class="string">"e"</span>):</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    video.release()</span><br><span class="line">    cv2.destroyAllWindows()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span> :</span><br><span class="line">    cishu = <span class="number">0</span>  <span class="comment"># 0 - 一直测</span></span><br><span class="line">    <span class="comment"># pingjun = int(input('请输入多少组算一次平均数--建议2组--:'))</span></span><br><span class="line">    pingjun = <span class="number">5</span></span><br><span class="line">    ci = <span class="number">100</span></span><br><span class="line">    <span class="comment"># ci = int(input('请输入多少时间换一组照片--100大概3.638s左右--：'))</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        video = cv2.VideoCapture(<span class="number">0</span>)</span><br><span class="line">        video_show(video ,ci)</span><br><span class="line">        get_shishi(cishu ,pingjun)</span><br></pre></td></tr></tbody></table></figure><h1 id="5-进一步优化"><a href="#5-进一步优化" class="headerlink" title="5. 进一步优化"></a>5. 进一步优化</h1><h2 id="5-1-分析误差的准备"><a href="#5-1-分析误差的准备" class="headerlink" title="5.1 分析误差的准备"></a>5.1 分析误差的准备</h2><h3 id="5-1-1-构造一个桌面指针"><a href="#5-1-1-构造一个桌面指针" class="headerlink" title="5.1.1 构造一个桌面指针"></a>5.1.1 构造一个桌面指针</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle <span class="keyword">as</span> t</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> datetime <span class="keyword">as</span> dt</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">drawuse</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># background</span></span><br><span class="line">    game = t.Screen()</span><br><span class="line">    game.bgcolor(<span class="string">'#A4D3EE'</span>)</span><br><span class="line">    game.setup(<span class="number">500</span>,<span class="number">500</span>,<span class="number">0</span>,<span class="number">10</span>)</span><br><span class="line">    game.tracer(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    pen = t.Turtle()</span><br><span class="line">    pen.ht()</span><br><span class="line">    pen.speed(<span class="number">0</span>)</span><br><span class="line">    pen.up()</span><br><span class="line">    pen.pensize(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">draw</span><span class="params">()</span>:</span></span><br><span class="line">        i = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            pen.clear()</span><br><span class="line">            <span class="comment"># 圆</span></span><br><span class="line">            pen.pensize(<span class="number">3</span>)</span><br><span class="line">            pen.up()</span><br><span class="line">            pen.color(<span class="string">'black'</span>)</span><br><span class="line">            pen.goto(<span class="number">0</span>,<span class="number">-200</span>)</span><br><span class="line">            pen.down()</span><br><span class="line">            pen.seth(<span class="number">0</span>)</span><br><span class="line">            pen.circle(<span class="number">200</span>)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 刻度</span></span><br><span class="line">            pen.up()</span><br><span class="line">            pen.goto(<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line">            pen.seth(<span class="number">225</span>)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">13</span>):</span><br><span class="line">                pen.fd(<span class="number">180</span>)</span><br><span class="line">                pen.down()</span><br><span class="line">                pen.fd(<span class="number">20</span>)</span><br><span class="line">                pen.up()</span><br><span class="line">                pen.goto(<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line">                pen.right(<span class="number">22.5</span>)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 指针</span></span><br><span class="line">            pen.up()</span><br><span class="line">            pen.goto(<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line">            pen.down()</span><br><span class="line">            pen.seth(<span class="number">225</span> - i)</span><br><span class="line">            pen.color(<span class="string">'red'</span>)</span><br><span class="line">            pen.pensize(<span class="number">6</span>)</span><br><span class="line">            pen.fd(<span class="number">120</span>)</span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> i &gt;= <span class="number">271</span>:</span><br><span class="line">                i = <span class="number">0</span></span><br><span class="line">            game.update()</span><br><span class="line">            time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">drawgd</span><span class="params">(thr)</span>:</span></span><br><span class="line">        pen.clear()</span><br><span class="line">        <span class="comment"># 圆</span></span><br><span class="line">        pen.up()</span><br><span class="line">        pen.color(<span class="string">'black'</span>)</span><br><span class="line">        pen.goto(<span class="number">0</span>,<span class="number">-200</span>)</span><br><span class="line">        pen.down()</span><br><span class="line">        pen.seth(<span class="number">0</span>)</span><br><span class="line">        pen.circle(<span class="number">200</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 刻度</span></span><br><span class="line">        pen.up()</span><br><span class="line">        pen.goto(<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line">        pen.seth(<span class="number">225</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">13</span>):</span><br><span class="line">            pen.fd(<span class="number">180</span>)</span><br><span class="line">            pen.down()</span><br><span class="line">            pen.fd(<span class="number">20</span>)</span><br><span class="line">            pen.up()</span><br><span class="line">            pen.goto(<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line">            pen.right(<span class="number">22.5</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 指针</span></span><br><span class="line">        pen.up()</span><br><span class="line">        pen.goto(<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line">        pen.down()</span><br><span class="line">        pen.seth(<span class="number">225</span> - thr)</span><br><span class="line">        pen.color(<span class="string">'red'</span>)</span><br><span class="line">        pen.pensize(<span class="number">6</span>)</span><br><span class="line">        pen.fd(<span class="number">120</span>)</span><br><span class="line">        game.update()</span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 模式一--动态</span></span><br><span class="line">    draw()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># # 模式二--固定</span></span><br><span class="line">    <span class="comment"># thr = int(input("输入指针度数:--角度--"))</span></span><br><span class="line">    <span class="comment"># drawgd(thr)</span></span><br><span class="line"></span><br><span class="line">    game.mainloop()</span><br></pre></td></tr></tbody></table></figure><h3 id="5-1-2-手机上下载一个模拟时钟"><a href="#5-1-2-手机上下载一个模拟时钟" class="headerlink" title="5.1.2 手机上下载一个模拟时钟"></a>5.1.2 手机上下载一个模拟时钟</h3><h3 id="5-1-3-获取两者数据对比来分析误差"><a href="#5-1-3-获取两者数据对比来分析误差" class="headerlink" title="5.1.3 获取两者数据对比来分析误差"></a>5.1.3 获取两者数据对比来分析误差</h3><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 技术力 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Compete </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python中Opencv库的学习</title>
      <link href="/2020/02/18/python-open-cv/"/>
      <url>/2020/02/18/python-open-cv/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><h1 id="0-基本知识的学习"><a href="#0-基本知识的学习" class="headerlink" title="0.基本知识的学习"></a>0.基本知识的学习</h1><h2 id="0-1-基本操作"><a href="#0-1-基本操作" class="headerlink" title="0.1 基本操作"></a>0.1 基本操作</h2><p>引用库<br><code>import cv2</code></p><p>cv2.IMREAD_COLOR:彩色图像 RGB 三通道<br>cv2.IMREAD_GRAYSCALE：灰度图像 灰度一个通道</p><ul><li><code>img = cv2.imread('1.jpg')</code>打开图像—-type(img) = numpy.ndarry</li><li><code>img = cv2.imread('1.jpg',cv2.IMREAD_GRAYSCALE)</code>打开为灰度图像</li><li><code>cv2.imshow('image',img)</code>展示图像，窗口 image</li><li><code>cv2.waitKey(0)</code>窗口停留时间毫秒级，0 表示按任意键退出</li><li><code>cv2.destroyALLWindows()</code>销毁窗口</li><li><code>cv2.imwrite('result.jpg',img)</code>保存图像，（文件名，图片）</li></ul><p><em>可以直接定义一个函数</em></p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cv_show</span><span class="params">(name,img)</span>:</span></span><br><span class="line">    cv2.imshow(name,img)</span><br><span class="line">    cv2.waitKey(<span class="number">0</span>)</span><br><span class="line">    cv2.destroyALLWindows()</span><br></pre></td></tr></tbody></table></figure><h3 id="0-1-1-画直线"><a href="#0-1-1-画直线" class="headerlink" title="0.1.1 画直线"></a>0.1.1 画直线</h3><p>像素点坐标，左为零，上为零<br>左上角为坐标原点，而坐标系是从左到右 x 符合，从上到下，y 要取负</p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">img = np.zeros((<span class="number">320</span>, <span class="number">320</span>, <span class="number">3</span>), np.uint8) <span class="comment">#生成一个空灰度图像</span></span><br><span class="line">print(img.shape) <span class="comment"># 输出：(320, 320, 3)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cv_show</span><span class="params">(name,img)</span>:</span></span><br><span class="line">    cv2.namedWindow(name,<span class="number">0</span>)</span><br><span class="line">    cv2.imshow(name,img)</span><br><span class="line">    cv2.waitKey(<span class="number">0</span>)</span><br><span class="line">    cv2.destroyAllWindows()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 图片，初始坐标，结束坐标，图线颜色，图线粗细</span></span><br><span class="line">cv2.line(img,(<span class="number">0</span>,<span class="number">100</span>),(<span class="number">100</span>,<span class="number">0</span>),(<span class="number">0</span>,<span class="number">0</span>,<span class="number">255</span>),<span class="number">2</span>)</span><br><span class="line">cv2.line(img,(<span class="number">0</span>,<span class="number">200</span>),(<span class="number">100</span>,<span class="number">0</span>),(<span class="number">0</span>,<span class="number">255</span>,<span class="number">0</span>),<span class="number">2</span>)</span><br><span class="line">cv_show(<span class="string">'line'</span>,img)</span><br></pre></td></tr></tbody></table></figure><h3 id="0-1-2-调用笔记本摄像头"><a href="#0-1-2-调用笔记本摄像头" class="headerlink" title="0.1.2 调用笔记本摄像头"></a>0.1.2 调用笔记本摄像头</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">video = cv2.VideoCapture(<span class="number">0</span>) <span class="comment"># 参数是0，表示打开笔记本的内置摄像头，参数是视频文件路径则打开视频，如cap = cv2.VideoCapture("../test.avi")</span></span><br><span class="line">ret,frame = video.read() <span class="comment"># ret,frame是获cap.read()方法的两个返回值。其中ret是布尔值，如果读取帧是正确的则返回True，如果文件读取到结尾，它的返回值就为False</span></span><br><span class="line"></span><br><span class="line">cv2.waitKey(<span class="number">0</span>) <span class="comment"># 如cv2.waitKey(0)只显示当前帧图像，相当于视频暂停</span></span><br><span class="line">cv2.waitKey(<span class="number">1</span>) <span class="comment"># 表示延时1ms切换到下一帧图像，对于视频而言</span></span><br><span class="line">cv2.waitKey(<span class="number">1000</span>) <span class="comment"># 会因为延时过久而卡顿感觉到卡顿</span></span><br><span class="line"></span><br><span class="line">cv2.release()</span><br><span class="line">调用release()释放摄像头，调用destroyAllWindows()关闭所有图像窗口</span><br></pre></td></tr></tbody></table></figure><h2 id="0-2-基本属性-函数"><a href="#0-2-基本属性-函数" class="headerlink" title="0.2 基本属性/函数"></a>0.2 基本属性/函数</h2><p>img.shape # (414.500.3) (h,w,rgb=3)<br>img.size # h*w*rgb<br>img.dtype # uint8</p><h2 id="0-3-读取视频"><a href="#0-3-读取视频" class="headerlink" title="0.3 读取视频"></a>0.3 读取视频</h2><p>cv2.VideoCapture 捕获摄像头</p><ul><li><code>vc = cv2.VideoCapture('test.mp4')</code> 打开视频</li></ul><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检查是否正确打开</span></span><br><span class="line"><span class="keyword">if</span> vc.isOpened():</span><br><span class="line">    open. frame = vc.read()</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    open = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> open:</span><br><span class="line"></span><br><span class="line"><span class="comment"># 播放视频 循环每一帧</span></span><br><span class="line"><span class="keyword">while</span> open:</span><br><span class="line">    ret, frame = vc.read()</span><br><span class="line">    <span class="keyword">if</span> frame <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> ret == <span class="literal">True</span>:</span><br><span class="line">        gray = cv2.cvtColor(frame,cv2.COLOR_BGR2GRAY)   <span class="comment">#转化为灰度</span></span><br><span class="line">        cv2.namedWindow(<span class="string">'result'</span>,<span class="number">0</span>)</span><br><span class="line">        cv2.imshow(<span class="string">'result'</span>,gray)</span><br><span class="line">        <span class="keyword">if</span> cv2.waitKey(<span class="number">10</span>) &amp; <span class="number">0xFF</span> == <span class="number">27</span>: <span class="comment"># 10刚刚好速度，27按esc退出</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">vc.release()</span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></tbody></table></figure><h2 id="0-4-感兴趣区域"><a href="#0-4-感兴趣区域" class="headerlink" title="0.4 感兴趣区域"></a>0.4 感兴趣区域</h2><p>图像截取</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">img = cv.imread(<span class="string">'1.jpg'</span>)</span><br><span class="line">cat = img[<span class="number">0</span>:<span class="number">200</span>,<span class="number">0</span>:<span class="number">200</span>]</span><br><span class="line">cv.show(<span class="string">'cat'</span>,cat)</span><br></pre></td></tr></tbody></table></figure><p>图片截取，（识别技术将匹配到的数据展示）</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">image_clip = image_rgb[int(top):(int(top) + int(height)), int(left):(int(left) + int(width))]</span><br><span class="line">顺序为[y0:y1, x0:x1]</span><br></pre></td></tr></tbody></table></figure><h2 id="0-5-特殊选取-切分通道"><a href="#0-5-特殊选取-切分通道" class="headerlink" title="0.5 特殊选取,切分通道"></a>0.5 特殊选取,切分通道</h2><p>b：::0<br>g：::1<br>r：::2</p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">b,g,r = cv2.split(img)  <span class="comment"># 切分</span></span><br><span class="line">b.shape == g.shape == r.shape</span><br><span class="line"></span><br><span class="line">img = cv2.merge((b,g,r))    <span class="comment"># 合并</span></span><br><span class="line">img.shape</span><br></pre></td></tr></tbody></table></figure><h2 id="0-6-边界填充"><a href="#0-6-边界填充" class="headerlink" title="0.6 边界填充"></a>0.6 边界填充</h2><p>图像的边界</p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 上下左右填充大小</span></span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cv_show</span><span class="params">(name,img)</span>:</span></span><br><span class="line">    cv2.imshow(name,img)</span><br><span class="line">    cv2.waitKey(<span class="number">0</span>)</span><br><span class="line">    cv2.destroyALLWindows()</span><br><span class="line"></span><br><span class="line">img = cv2.imread(<span class="string">'./img/1.jpg'</span>)</span><br><span class="line"><span class="comment"># 定义边界大小</span></span><br><span class="line">top_size, bottom_size, left_size,right_size = (<span class="number">50</span>,<span class="number">50</span>,<span class="number">50</span>,<span class="number">50</span>)</span><br><span class="line"><span class="comment"># 复制法，复制最边缘像素</span></span><br><span class="line">replicate = cv2.copyMakeBorder(img,top_size,bottom_size,left_size,right_size,borderType = cv2.BORDER_REPLICATE)</span><br><span class="line"><span class="comment"># 反射法 对感兴趣的图像中的像素在两边进行复制  ba|abc|cb</span></span><br><span class="line">reflect = cv2.copyMakeBorder(img,top_size,bottom_size,left_size,right_size,borderType = cv2.BORDER_REFLECT)</span><br><span class="line"><span class="comment"># 反射法   edcb|abcdefgh|gfedc</span></span><br><span class="line">reflect2 = cv2.copyMakeBorder(img,top_size,bottom_size,left_size,right_size,borderType = cv2.BORDER_REFLECT_101)</span><br><span class="line"><span class="comment"># 外包装法  cdefgh|abcdefgh|abcdef</span></span><br><span class="line">wrap = cv2.copyMakeBorder(img,top_size,bottom_size,left_size,right_size,borderType = cv2.BORDER_WRAP)</span><br><span class="line"><span class="comment"># 常量法   常数值补充</span></span><br><span class="line">constant = cv2.copyMakeBorder(img,top_size,bottom_size,left_size,right_size,borderType = cv2.BORDER_CONSTANT)</span><br></pre></td></tr></tbody></table></figure><h2 id="0-7-数值计算-图像融合-大小放缩"><a href="#0-7-数值计算-图像融合-大小放缩" class="headerlink" title="0.7 数值计算\图像融合\大小放缩"></a>0.7 数值计算\图像融合\大小放缩</h2><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">img1 = cv2.imread(<span class="string">'1.jpg'</span>)</span><br><span class="line">img2 = cv2.imread(<span class="string">'2.jpg'</span>)</span><br><span class="line"></span><br><span class="line">img11 = img1 + <span class="number">10</span>  <span class="comment"># [500,500,3] 中每一块都加10</span></span><br><span class="line">img1[:<span class="number">5</span>,:,<span class="number">0</span>].shape 只打印前五行</span><br><span class="line">img11[:<span class="number">5</span>,:,<span class="number">0</span>]</span><br><span class="line">(img1+img11)[:<span class="number">5</span>,:,<span class="number">0</span>]    如果超出，则结果取余</span><br><span class="line">cv2.add(img1,img11)[:<span class="number">5</span>,:,<span class="number">0</span>] 如果超出<span class="number">255</span>，则不取余直接用<span class="number">255</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 图像融合</span></span><br><span class="line"></span><br><span class="line">img1+img2 <span class="comment">#shape不同，则加不了</span></span><br><span class="line">img1.shape  <span class="comment"># (414,500,3)</span></span><br><span class="line">img2.shape  <span class="comment"># (419,499,3)</span></span><br><span class="line">img2 = cv2.resize(img2,(<span class="number">500</span>,<span class="number">414</span>))   <span class="comment"># 改变大小</span></span><br><span class="line">img2.shape  <span class="comment"># (414,500,3)</span></span><br><span class="line"></span><br><span class="line">res = cv2.addWeighted(img1,<span class="number">0.4</span>,img2,<span class="number">0.6</span>,<span class="number">0</span>)</span><br><span class="line"><span class="comment"># res = img1*0.4+img2*0.6+0     权重</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 图像大小放缩</span></span><br><span class="line">res = cv2.resize(img,(<span class="number">0</span>,<span class="number">0</span>),fx=<span class="number">0.5</span>,fy=<span class="number">2</span>)</span><br></pre></td></tr></tbody></table></figure><h2 id="0-8-图像阈值"><a href="#0-8-图像阈值" class="headerlink" title="0.8 图像阈值"></a>0.8 图像阈值</h2><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">cv2.threshold():</span><br><span class="line">参数：</span><br><span class="line">    img:图像对象，必须是灰度图</span><br><span class="line">    thresh:阈值 <span class="number">0</span>~<span class="number">255</span>   eg:<span class="number">127</span></span><br><span class="line">    maxval：最大值  <span class="number">255</span></span><br><span class="line">    type:</span><br><span class="line">        cv2.THRESH_BINARY:     小于阈值的像素置为<span class="number">0</span>，大于阈值的置为maxval</span><br><span class="line">            超过阈值部分取最大值maxval=<span class="number">255</span> white，否则取<span class="number">0</span> black</span><br><span class="line">            亮的地方白，暗的地方黑</span><br><span class="line">        cv2.THRESH_BINARY_INV： 小于阈值的像素置为maxval，大于阈值的置为<span class="number">0</span></span><br><span class="line">            亮的地方黑，暗的地方白</span><br><span class="line">        cv2.THRESH_TRUNC：      小于阈值的像素不变，大于阈值的置为thresh</span><br><span class="line">            指定一个截断值，大于阈值部分变成阈值，小于的不变</span><br><span class="line">        cv2.THRESH_TOZERO       小于阈值的像素置<span class="number">0</span>，大于阈值的不变</span><br><span class="line">            大于阈值部分不变，小于的全变为<span class="number">0</span></span><br><span class="line">        cv2.THRESH_TOZERO_INV   小于阈值的不变，大于阈值的像素置<span class="number">0</span></span><br><span class="line">            大于阈值变为<span class="number">0</span>   ，小于阈值的不变</span><br><span class="line">返回两个值</span><br><span class="line">    ret:阈值</span><br><span class="line">    img：阈值化处理后的图像</span><br><span class="line"></span><br><span class="line">cv2.adaptiveThreshold() 自适应阈值处理，图像不同部位采用不同的阈值进行处理</span><br><span class="line">参数：</span><br><span class="line">    img: 图像对象，<span class="number">8</span>-bit单通道图</span><br><span class="line">    maxValue:最大值</span><br><span class="line">    adaptiveMethod: 自适应方法</span><br><span class="line">        cv2.ADAPTIVE_THRESH_MEAN_C     ：阈值为周围像素的平均值</span><br><span class="line">        cv2.ADAPTIVE_THRESH_GAUSSIAN_C : 阈值为周围像素的高斯均值（按权重）</span><br><span class="line">    threshType:</span><br><span class="line">        cv2.THRESH_BINARY:     小于阈值的像素置为<span class="number">0</span>，大于阈值的置为maxValuel</span><br><span class="line">        cv2.THRESH_BINARY_INV:  小于阈值的像素置为maxValue，大于阈值的置为<span class="number">0</span></span><br><span class="line">    blocksize: 计算阈值时，自适应的窗口大小,必须为奇数 （如<span class="number">3</span>：表示附近<span class="number">3</span>个像素范围内的像素点，进行计算阈值）</span><br><span class="line">    C： 常数值，通过自适应方法计算的值，减去该常数值</span><br><span class="line">(mean value of the blocksize*blocksize neighborhood of (x, y) minus C)</span><br></pre></td></tr></tbody></table></figure><h2 id="0-9-图像平滑-去掉噪音点"><a href="#0-9-图像平滑-去掉噪音点" class="headerlink" title="0.9 图像平滑-去掉噪音点"></a>0.9 图像平滑-去掉噪音点</h2><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">img = cv2.imread(<span class="string">'./img/1.jpg'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cv_show</span><span class="params">(name,img)</span>:</span></span><br><span class="line">    cv2.namedWindow(name,<span class="number">0</span>)</span><br><span class="line">    cv2.imshow(name,img)</span><br><span class="line">    cv2.waitKey(<span class="number">0</span>)</span><br><span class="line">    cv2.destroyALLWindows()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 均值滤波</span></span><br><span class="line"><span class="comment"># 简单的平均卷积操作 # (3,3)卷积盒</span></span><br><span class="line">blur = cv2.blur(img,(<span class="number">3</span>,<span class="number">3</span>))  <span class="comment"># （奇数，奇数） 中心的值根据周围数改变</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 方框滤波</span></span><br><span class="line"><span class="comment"># 与均值滤波相似   normalize 是否做归一化，true与均值一样</span></span><br><span class="line"><span class="comment">#                                       false 会越界&gt;255 ，所有越界值全为255</span></span><br><span class="line">box = cv2.boxFilter(img,<span class="number">-1</span>,(<span class="number">3</span>,<span class="number">3</span>),normalize =<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 高斯滤波</span></span><br><span class="line"><span class="comment"># 高斯模糊---正态分布，离中心值越远，值越小</span></span><br><span class="line">aussian = cv2.GaussianBlur(img,(<span class="number">5</span>,<span class="number">5</span>),<span class="number">1</span>)     <span class="comment"># (5,5)的盒</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 中值滤波</span></span><br><span class="line"><span class="comment"># 中间的值</span></span><br><span class="line">median = cv2.medianBlur(img,<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 展示所有的</span></span><br><span class="line"><span class="comment"># 三张图片拼接在一起</span></span><br><span class="line">res = np.hstack((blur,aussian,median))</span><br><span class="line">resv = np.vstack((blur,aussian,median))</span><br><span class="line"></span><br><span class="line">cv_show(<span class="string">'res'</span>,res)</span><br></pre></td></tr></tbody></table></figure><h2 id="0-10-形态学-腐蚀操作-去掉毛刺"><a href="#0-10-形态学-腐蚀操作-去掉毛刺" class="headerlink" title="0.10 形态学-腐蚀操作-去掉毛刺"></a>0.10 形态学-腐蚀操作-去掉毛刺</h2><p>边界里的盒子如果有 0 有 255，则全变为 0</p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="comment"># 去毛刺，r通道</span></span><br><span class="line">kernel = np.ones((<span class="number">5</span>,<span class="number">5</span>),np.uint8)    <span class="comment"># （5，5）腐蚀大小</span></span><br><span class="line">erosion = cv2.erode(img,kernel,iterations = <span class="number">2</span>)  <span class="comment"># iterations 做几次腐蚀</span></span><br></pre></td></tr></tbody></table></figure><h2 id="0-11-形态学-膨胀操作"><a href="#0-11-形态学-膨胀操作" class="headerlink" title="0.11 形态学-膨胀操作"></a>0.11 形态学-膨胀操作</h2><p><em>腐蚀后图像太细，使用膨胀</em><br>边界里的盒子如果有 0 有 255，则全变为 255 白</p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kernel = np.ones((<span class="number">3</span>,<span class="number">3</span>),np.uint8)</span><br><span class="line">dilate = cv2.dilate(erosion,kernel,iterations=<span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure><h2 id="0-12-开运算与闭运算"><a href="#0-12-开运算与闭运算" class="headerlink" title="0.12 开运算与闭运算"></a>0.12 开运算与闭运算</h2><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 开运算--先腐蚀后膨胀</span></span><br><span class="line">kernel = np.ones((<span class="number">5</span>,<span class="number">5</span>),np.uint8)</span><br><span class="line">opening = cv2.morphologyEx(img,cv2.MORPH_OPEN,KERNEL)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 闭运算--先膨胀后腐蚀</span></span><br><span class="line">kernel = np.ones((<span class="number">5</span>,<span class="number">5</span>),np.uint8)</span><br><span class="line">closing = cv2.morphologyEx(img,cv2.MORPH_CLOSE,kernel)</span><br></pre></td></tr></tbody></table></figure><h2 id="0-13-梯度运算"><a href="#0-13-梯度运算" class="headerlink" title="0.13 梯度运算"></a>0.13 梯度运算</h2><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 梯度运算 = 膨胀-腐蚀 = 轮廓</span></span><br><span class="line">kernel = np.ones((<span class="number">7</span>,<span class="number">7</span>),np.uint8)</span><br><span class="line">gradient = cv2.morphologyEx(img,cv2.MORPH_GRADIENT,kernel)  <span class="comment"># 轮廓</span></span><br></pre></td></tr></tbody></table></figure><h2 id="0-14-礼帽-黑帽"><a href="#0-14-礼帽-黑帽" class="headerlink" title="0.14 礼帽 黑帽"></a>0.14 礼帽 黑帽</h2><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 礼帽 = 原始输入 - 开运算 = 毛刺</span></span><br><span class="line">tophat = cv2.morphologyEx(img,cv2.MORPH_TOPHAT,kernel)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 黑帽 = 闭运算 - 原始输入 = 毛刺+更胖整体 - 毛刺</span></span><br><span class="line">blackhat = cv2.morphologyEx(img,cv2.MORPH_BLACKHAT,kernel)</span><br></pre></td></tr></tbody></table></figure><h2 id="0-15-图像梯度-Sobel-算子"><a href="#0-15-图像梯度-Sobel-算子" class="headerlink" title="0.15 图像梯度-Sobel 算子"></a>0.15 图像梯度-Sobel 算子</h2><p><img src="/img/opencv/1.jpg" alt="sobel"><br>梯度：边缘位置的像素数值不同，数值差越大，梯度越大<br>边缘检测，物体分辨<br>右减左，下减上   从右到左，从下至上</p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># dst = cv2.Sobel(img,ddepth,dx,dy,ksize)</span></span><br><span class="line"><span class="comment"># ddepth:图像深度 -1</span></span><br><span class="line"><span class="comment"># dx dy：水平，竖直 1 0</span></span><br><span class="line"><span class="comment"># ksize：盒的大小</span></span><br><span class="line"></span><br><span class="line">sobelx = cv2.Sobel(img,cv2.CV_64F,<span class="number">1</span>,<span class="number">0</span>,ksize = <span class="number">3</span>)</span><br><span class="line"><span class="comment"># cv2.CV_64F 负数形式</span></span><br><span class="line"><span class="comment"># 白-黑是正数，黑-白是负数，所有负数会被截断为0，所以要取绝对值</span></span><br><span class="line"></span><br><span class="line">sobelx = cv2.convertScaleAbs(sobelx)</span><br><span class="line"><span class="comment"># 取绝对值</span></span><br><span class="line"></span><br><span class="line">sobely = cv2.Sobel(img,cv2.CV_64F,<span class="number">0</span>,<span class="number">1</span>,ksize = <span class="number">3</span>)</span><br><span class="line"><span class="comment"># y方向</span></span><br><span class="line">sobely = cv2.convertScaleAbs(sobely)</span><br><span class="line"></span><br><span class="line"><span class="comment"># x,y分别求出，再求和</span></span><br><span class="line">sobelxy = cv2.addWeighted(sobelx,<span class="number">0.5</span>,sobely,<span class="number">0.5</span>,<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 不建议直接计算，及dx，dy都为 1</span></span><br><span class="line"><span class="comment"># 轮廓会更加的虚</span></span><br></pre></td></tr></tbody></table></figure><h2 id="0-16-图像梯度-Scharr-amp-amp-Laplacian-算子"><a href="#0-16-图像梯度-Scharr-amp-amp-Laplacian-算子" class="headerlink" title="0.16 图像梯度 Scharr&amp;&amp;Laplacian 算子"></a>0.16 图像梯度 Scharr&amp;&amp;Laplacian 算子</h2><p>scharr – 更敏感 – 描绘轮廓更细致<br><img src="/img/opencv/2.jpg" alt="sobel"></p><p>laplacian – 二阶导 – 更更敏感，对噪音点敏感，很少单独使用<br><img src="/img/opencv/3.png" alt="sobel"></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">scharrx = cv2.Scharr(img,cv2.CV_64F,1,0)</span><br><span class="line">scharry = cv2.Scharr(img,cv2.CV_64F,0,1)</span><br><span class="line">scharrx = cv2.convertScaleAbs(scharrx)</span><br><span class="line">scharry = cv2.convertScaleAbs(scharry)</span><br><span class="line">scharrxy = cv2.addWeighted(scharrx,0.5,scharry,0.5,0)</span><br><span class="line"></span><br><span class="line">laplacian = cv2.Laplacian(img,cv2.CV_64F)</span><br><span class="line">laplacian = cv2.convertScaleAbs(laplacian)</span><br><span class="line"></span><br><span class="line">res = np.hstack((scharrxy,laplacian))</span><br></pre></td></tr></tbody></table></figure><p>三种算子区别<br><img src="/img/opencv/123%E5%8C%BA%E5%88%AB.png" alt="三种算子区别"></p><h2 id="0-17-Canny-边缘检测–综合"><a href="#0-17-Canny-边缘检测–综合" class="headerlink" title="0.17 Canny 边缘检测–综合"></a>0.17 Canny 边缘检测–综合</h2><ul><li>高斯滤波器，平滑处理，滤除噪声</li><li>计算图像中每个像素点的梯度强度和方向</li><li>应用非极大值抑制，消除小的不明显的地方<br>a 检测出目标可能性 90%，b 是 80%，则会抑制掉 b，把 b 丢掉</li><li>应用双阈值，检测来确定真实的和潜在的边缘</li><li>通过抑制孤立的弱边缘最终完成边缘检测</li></ul><p>① 高斯滤波器<br>归一化平滑处理<br>② 梯度和方向，Sobel 算子<br>③ 非极大值抑制<br>a. 线性插值法<br>b. 简便算法;八个方向分别比较<br>④ 双阈值检测<br>maxVal|minVal<br>梯度值&gt;maxVal 边界<br>minVal &lt; 梯度 &lt; maxVal 连有边界，保留，否则舍弃<br>梯度 &lt; minVal 舍弃<br>⑤ 最终结果<br>canny 函数</p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">img = cv2.imread(<span class="string">'1.jpg'</span>,cv2.IMREAD_GRAYSCALE)</span><br><span class="line"></span><br><span class="line">v1 = cv2.Canny(img,<span class="number">80</span>,<span class="number">150</span>)  <span class="comment"># minVal,maxVal</span></span><br><span class="line">v2 = cv2.Canny(img,<span class="number">50</span>,<span class="number">150</span>)</span><br></pre></td></tr></tbody></table></figure><h2 id="0-18-图像金字塔"><a href="#0-18-图像金字塔" class="headerlink" title="0.18 图像金字塔"></a>0.18 图像金字塔</h2><p>越往上走图像越小<br>图像 800*800 变为 400*400<br>各层分别提取</p><ul><li>高斯金字塔（高斯滤波）</li></ul><ol><li>向下采样，缩小，往金字塔顶走<br>将偶数行和列去掉，1234 去掉 24，行列变为原来的一半<br>4*4 — 2*2</li><li>向上采样，放大<br>将数据高斯分布给周边新加列行<br>2*2 — 4*4</li></ol><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">img = cv2.imread(<span class="string">'1.jpg'</span>)</span><br><span class="line"><span class="comment"># 向上</span></span><br><span class="line">up = cv2.pyrUp(img)</span><br><span class="line"><span class="comment"># 向下</span></span><br><span class="line">down = cv2.pyrDown(img)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 先上 再下，，会变模糊</span></span><br><span class="line">down_up = cv2.pyrDown(up)</span><br></pre></td></tr></tbody></table></figure><p><img src="/img/opencv/%E6%8B%89%E6%99%AE%E6%8B%89%E6%96%AF.png" alt="拉普拉斯金字塔"></p><ul><li>拉普拉斯金字塔<br>原始 - 先 down 再 up = result<br>result - down up = reslt1</li></ul><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">down = cv2.pyrDown(img)</span><br><span class="line">down_up = cv2.pyrUp(down)</span><br><span class="line">result = img - down_up</span><br></pre></td></tr></tbody></table></figure><h2 id="0-19-图像轮廓"><a href="#0-19-图像轮廓" class="headerlink" title="0.19 图像轮廓"></a>0.19 图像轮廓</h2><p>图像边缘–零散<br>图像轮廓–完整<br>cv2.findContours(img,mode,method)</p><ul><li>mode:轮廓检测模式<br>RETR_EXTERNAL 只检测外轮廓<br>RETR_LIST 检索所有的轮廓，将其保存到一条链表中<br>RETR_CCOMP 检索所有轮廓，并将他们组织为两层，顶层是各部分的外部边界，第二层空洞边界<br>RETR_TREE（常用）检测所有轮廓，并重构嵌套轮廓的整个层次</li><li>method:轮廓逼近方法<br>CHAIN_APPROX_NONE：以 freeman 链码方式输出轮廓，其他方法输出多边形<br>CHAIN_APPROX_SIMPLE：压缩水平，垂直，斜的部分</li></ul><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">img = cv2.imread(<span class="string">'1.jpg'</span>)</span><br><span class="line">gray = cv2.cvColor(img,cv2.COLOR_BGR2GRAY)</span><br><span class="line"><span class="comment"># 使用二值图像---更好的边缘检测</span></span><br><span class="line">ret, thresh = cv2.threshold(gray,<span class="number">122</span>,<span class="number">255</span>,cv2.THRESH_BINARY)</span><br><span class="line"><span class="comment"># cv2.imshow('result',thresh)</span></span><br><span class="line"></span><br><span class="line">binary,contours,hierarchy = cv2.findContours(thresh,cv2.RETR_TREE,cv2.CHAIN_APPROX_NONE)</span><br><span class="line"><span class="comment"># binary 二值图像</span></span><br><span class="line"><span class="comment"># contours 轮廓信息</span></span><br><span class="line"><span class="comment"># hierarchy 层级</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制轮廓,必须先备份</span></span><br><span class="line">draw_img = img.copy()</span><br><span class="line">res = cv2.drawContours(draw_img,contours,<span class="number">-1</span>,(<span class="number">0</span>,<span class="number">0</span>,<span class="number">255</span>),<span class="number">2</span>)</span><br><span class="line"><span class="comment"># draw_img 原图像上绘制</span></span><br><span class="line"><span class="comment"># contours 轮廓信息</span></span><br><span class="line"><span class="comment"># -1 所有轮廓，（几个轮廓） 0 第一个轮廓外圈，1 轮廓里圈</span></span><br><span class="line"><span class="comment"># (0,0,255) BGR 红色的线</span></span><br><span class="line"><span class="comment"># 2 线条宽度--不能太大，能看出轮廓内外层差异</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 轮廓得到以后,具体轮廓拿出来，contours为list</span></span><br><span class="line">cnt = contours[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 算面积</span></span><br><span class="line">cv2.contourArea(cnt)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 周长 true 闭合</span></span><br><span class="line">cu2.arcLength(cnt,<span class="literal">True</span>)</span><br></pre></td></tr></tbody></table></figure><p><strong>轮廓近似</strong></p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 轮廓近似，将轮廓变得规则起来</span></span><br><span class="line"><span class="comment"># 用直线近似曲线,曲线上找一点，到直线的距离最大，</span></span><br><span class="line"><span class="comment"># d&lt;T 可以近似     d&gt;T,不可以直接用一条直线近似，而是分割开来，继续判断</span></span><br><span class="line">img = cv2.imread(<span class="string">'1.jpg'</span>)</span><br><span class="line">gray = cv2.cvColor(img,cv2.COLOR_BGR2GRAY)</span><br><span class="line">ret, thresh = cv2.threshold(gray,<span class="number">122</span>,<span class="number">255</span>,cv2.THRESH_BINARY)</span><br><span class="line">binary,contours,hierarchy = cv2.findContours(thresh,cv2.RETR_TREE,cv2.CHAIN_APPROX_NONE)</span><br><span class="line">cnt = contours[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">draw_img = img.copy()</span><br><span class="line">res = cv2.drawContours(draw_img,[cnt],<span class="number">-1</span>,(<span class="number">0</span>,<span class="number">0</span>,<span class="number">255</span>),<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">epsilon = <span class="number">0.1</span>*cv2.arcLength(cnt,<span class="literal">True</span>)   <span class="comment"># 周长百分比做阈值</span></span><br><span class="line"><span class="comment"># 0.1百分比，越大，轮廓变化越大</span></span><br><span class="line">approx = cv2.approxPolyDP(cnt,epsilon,<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">draw_img = img.copy()</span><br><span class="line">res = cv2.drawContours(draw_img,[approx],<span class="number">-1</span>,(<span class="number">0</span>,<span class="number">0</span>,<span class="number">255</span>),<span class="number">2</span>)</span><br></pre></td></tr></tbody></table></figure><p>边界矩形(外接矩形)</p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">cnt = contours[<span class="number">0</span>]</span><br><span class="line"><span class="comment"># 外接矩形</span></span><br><span class="line">x,y,w,h = cv2.boundingRect(cnt)</span><br><span class="line">img = cv2.rectangle(img,(x,y),(x+w,y+h),(<span class="number">0</span>,<span class="number">0</span>,<span class="number">255</span>),<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 矩形面积</span></span><br><span class="line">area = cv2.contourArea(cnt)</span><br><span class="line">x,y,w,h = cv2.boundingRect(cnt)</span><br><span class="line">rect_area = w*h</span><br><span class="line">extent = float(area) / rect_area</span><br><span class="line">print(<span class="string">f'轮廓面积与边界矩形比:<span class="subst">{extent}</span>'</span>)</span><br></pre></td></tr></tbody></table></figure><p>外接圆</p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(x,y).radius = cv2.minEnclosingCircle(cnt)</span><br><span class="line">center = (int(x),int(y))</span><br><span class="line">radius = int(radius)</span><br><span class="line">img = cv2.circle(img,center,radius,(<span class="number">0</span>,<span class="number">255</span>,<span class="number">0</span>),<span class="number">2</span>)</span><br></pre></td></tr></tbody></table></figure><h2 id="0-20-模板匹配—-匹配对象在另一个图像哪里"><a href="#0-20-模板匹配—-匹配对象在另一个图像哪里" class="headerlink" title="0.20 模板匹配—-匹配对象在另一个图像哪里"></a>0.20 模板匹配—-匹配对象在另一个图像哪里</h2><p>从左到右，从上到下，进行匹配<br>匹配计算方法</p><ul><li>TM_SQDIFF—-平方项匹配，值越小，越相关</li><li>TM_CCORR—–计算相关性，值越大，越相关</li><li>TM_CCOEFF—-计算相关系数，值越大，越相关</li><li>TM_SQDIFF_NORMED:计算归一化平方不同，越接近 0，越相关</li><li>TM_CCORR_NORMED:计算归一化相关性，越接近 1，越相关</li><li>TM_CCOEFF_NORMED:计算归一化的相关系数，越接近 1，越相关</li><li>最好用归一化的方法<br>返回结果<br>匹配的地方大小：<br>原图结果 A*B,模板大小 a*b,返回结果矩阵：(A-a+1)*(B-b+1)</li></ul><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">img = cv2.imread(<span class="string">'1.jpg'</span>,<span class="number">0</span>)</span><br><span class="line"><span class="comment"># (263,263)</span></span><br><span class="line">template = cv2.imread(<span class="string">'11.jpg'</span>,<span class="number">0</span>)</span><br><span class="line"><span class="comment"># (110,85)</span></span><br><span class="line">h,w = template.shape[:<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line">res = cv2.matchTemplate(img,template,cv2.TM_SQDIFE)</span><br><span class="line"><span class="comment"># (154,179)</span></span><br><span class="line"></span><br><span class="line">min_val,max_val,min_loc,max_loc = cv2.minMaxLoc(res)</span><br><span class="line"><span class="comment"># 最小值，最大值，最小值位置，最大值位置</span></span><br><span class="line"><span class="comment"># 该方法关注最小值位置 框左上角的点，根据res.shape画出图像</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># top_left &amp; res.shape得到最好匹配结果</span></span><br><span class="line">top_left = min_loc</span><br><span class="line">bottom_right = (top_left[<span class="number">0</span>] + w,top_left[<span class="number">1</span>] + h)</span><br><span class="line">img2 = img.copy()</span><br><span class="line">cv2.rectangle(img2,top_left,bottom_right,<span class="number">255</span>,<span class="number">2</span>)</span><br><span class="line"><span class="comment"># 展示出来</span></span><br><span class="line">cv_show(<span class="string">'res'</span>,img2)</span><br></pre></td></tr></tbody></table></figure><p>匹配多个对象</p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 匹配多个对象</span></span><br><span class="line">img_rgb = cv2.imread(<span class="string">'1.jpg'</span>)</span><br><span class="line">img_gray = cv2.cvtColor(img_rgb,cv2.COLOR_BGR2GRAY)</span><br><span class="line">template = cv2.imread(<span class="string">'11.jpg'</span>,<span class="number">0</span>)</span><br><span class="line">h,w = template.shape[:<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line">res = cv2.matchTemplate(img_gray,template,cv2.TM_CCOEFF_NORMED)</span><br><span class="line">threshold = <span class="number">0.8</span></span><br><span class="line"><span class="comment"># 取匹配程度大于0.8的坐标</span></span><br><span class="line">loc = np.where(res&gt;= threshold)</span><br><span class="line"><span class="keyword">for</span> pt <span class="keyword">in</span> zip(*loc[::<span class="number">1</span>]):   <span class="comment"># * 表示可选参数</span></span><br><span class="line">    bottom_right = (pt[<span class="number">0</span>]+w,pt[<span class="number">1</span>]+h)</span><br><span class="line">    cv2.rectangle(img_rgb,pt,bootom_right,(<span class="number">0</span>,<span class="number">0</span>,<span class="number">255</span>),<span class="number">2</span>)</span><br><span class="line">cv2.imshow(<span class="string">'img'</span>,img_rgb)</span><br><span class="line">cv2.waitKey(<span class="number">0</span>)</span><br></pre></td></tr></tbody></table></figure><h2 id="0-21-直方图"><a href="#0-21-直方图" class="headerlink" title="0.21 直方图"></a>0.21 直方图</h2><p>图片像素的统计直方图<br>cv2.calcHist(img,channels,mask,histSize,ranges)<br>img – 图片<br>channels–通道 0 – 自动灰度图 ‘b’ ‘g’ ‘r’<br>mask–淹模图像，掩码，统计某一部分<br>创建掩码<br>mask = np.zeros(img,shape[:2],np.uint8)<br>选择掩码保存部分<br>mask[100:300,100:400] = 255 白色保存部分 # masked_img = cv2.bitwise_and(img,img,mask=mask)<br>hisSize – BIN 的数目，直方图范围<br>ranges – 像素值取值反围</p><p><code>hist = cv2.calcHist([img],[0],None,[256],[0,256])</code></p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">img =cv2.imread(<span class="string">'1.jpg'</span>)</span><br><span class="line">hist = cv2.calcHist([img],[<span class="number">0</span>],<span class="literal">None</span>,[<span class="number">256</span>],[<span class="number">0</span>,<span class="number">256</span>])</span><br><span class="line"><span class="comment"># 画出直方图</span></span><br><span class="line">plt.hist(img,ravel(),<span class="number">256</span>):</span><br><span class="line">plt.show</span><br></pre></td></tr></tbody></table></figure><p>直方图均衡化</p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果统计出来的直方图 不太平均</span></span><br><span class="line"><span class="comment"># 平均化</span></span><br><span class="line">equ = cv2.equalizeHist(img)</span><br><span class="line">plt.hist(equ,ravel(),<span class="number">256</span>)</span><br><span class="line">plt.show</span><br><span class="line"></span><br><span class="line"><span class="comment"># 结果更加的明显</span></span><br><span class="line"><span class="comment"># 一个部分分给其他部分，进行均衡</span></span><br><span class="line"><span class="comment"># 分模块进行均衡化</span></span><br><span class="line"><span class="comment"># 但有的图会出现边界</span></span><br></pre></td></tr></tbody></table></figure><p>自适应直方图均衡化</p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">clahe = cv2.createCLAHE(clipLimit = <span class="number">2.0</span>,tileGridSize = (<span class="number">8</span>，<span class="number">8</span>))</span><br><span class="line">res_clahe = clahe.apply(img)</span><br><span class="line">cv2.imshow(<span class="string">'result'</span>,res_clahe)</span><br></pre></td></tr></tbody></table></figure><h2 id="0-22-傅里叶变换"><a href="#0-22-傅里叶变换" class="headerlink" title="0.22 傅里叶变换"></a>0.22 傅里叶变换</h2><p>现实中的事物都是运动的<br>而傅里叶的频域中一切都是静止的，现实中的东西在频域中分为高频，低频</p><ul><li>高频：变化剧烈的灰度分量，eg：边界</li><li>低频：变化缓慢的灰度变量，eg：一片大海<br><img src="/img/opencv/%E5%82%85%E9%87%8C%E5%8F%B6.png" alt="傅里叶"><br>滤波<br>低通滤波器：只保留低频，图像变得模糊<br>高通滤波器：只保留高频，图像细节增强</li></ul><p>在 频域中处理，更加方便</p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">cv2.dft()</span><br><span class="line"><span class="comment"># 逆变换</span></span><br><span class="line">cv2.idft()</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">img = cv2.imread(<span class="string">'1.jpg'</span>,<span class="number">0</span>)</span><br><span class="line"><span class="comment"># 输入图像必须先转换成float32格式</span></span><br><span class="line">img_float32 = np.float32(img)</span><br><span class="line"><span class="comment"># 得到的结果中 频率为0的部分在左上角，通常要转换到中心位置，用shift变换</span></span><br><span class="line">dft = cv2.dft(img_float32,flags = cv2.DFT_COMPLEX_OUTPUT)</span><br><span class="line">dft_shift = np.fft.fftshift(dft)</span><br><span class="line"><span class="comment"># cv2.dft()返回结果是双通道的，通常还要转换为图像格式</span></span><br><span class="line">magnitude_spectrum = <span class="number">20</span>*np.log(cv2.magnitude(dft_shift[:,:,<span class="number">0</span>],dft_shift[:,:,<span class="number">1</span>]))</span><br></pre></td></tr></tbody></table></figure><p>低通：</p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cv_show</span><span class="params">(name,img)</span>:</span></span><br><span class="line">    cv2.namedWindow(name,<span class="number">0</span>)</span><br><span class="line">    cv2.imshow(name,img)</span><br><span class="line">    cv2.waitKey(<span class="number">0</span>)</span><br><span class="line">    cv2.destroyAllWindows()</span><br><span class="line"></span><br><span class="line">img = cv2.imread(<span class="string">'./img/clock1.jpg'</span>,<span class="number">0</span>)</span><br><span class="line"><span class="comment"># 输入图像必须先转换成float32格式</span></span><br><span class="line">img_float32 = np.float32(img)</span><br><span class="line"><span class="comment"># 得到的结果中 频率为0的部分在左上角，通常要转换到中心位置，用shift变换</span></span><br><span class="line">dft = cv2.dft(img_float32,flags = cv2.DFT_COMPLEX_OUTPUT)</span><br><span class="line">dft_shift = np.fft.fftshift(dft)</span><br><span class="line"><span class="comment"># cv2.dft()返回结果是双通道的，通常还要转换为图像格式</span></span><br><span class="line"><span class="comment"># magnitude_spectrum = 20*np.log(cv2.magnitude(dft_shift[:,:,0],dft_shift[:,:,1]))</span></span><br><span class="line"></span><br><span class="line">rows,cols = img.shape</span><br><span class="line">crow,ccol = int(rows/<span class="number">2</span>) , int(cols/<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 要magn里面</span></span><br><span class="line"><span class="comment"># 创建一个掩码  zeros 全为0 全不要</span></span><br><span class="line">mask = np.zeros((rows,cols,<span class="number">2</span>),np.uint8)</span><br><span class="line">mask[crow<span class="number">-30</span>:crow+<span class="number">30</span>,ccol<span class="number">-30</span>:ccol+<span class="number">30</span>] = <span class="number">1</span>   <span class="comment"># 中间为低频，低频要</span></span><br><span class="line">fshift = dft_shift*mask</span><br><span class="line"><span class="comment"># shift 回去</span></span><br><span class="line">f_ishift = np.fft.ifftshift(fshift)</span><br><span class="line"></span><br><span class="line">img_back = cv2.idft(f_ishift)</span><br><span class="line">img_back = cv2.magnitude(img_back[:,:,<span class="number">0</span>],img_back[:,:,<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">121</span>), plt.imshow(img,cmap = <span class="string">'gray'</span>)</span><br><span class="line">plt.title(<span class="string">'input image'</span>), plt.xticks([]),plt.yticks([])</span><br><span class="line">plt.subplot(<span class="number">122</span>), plt.imshow(img_back, cmap = <span class="string">'gray'</span>)</span><br><span class="line">plt.title(<span class="string">'magnitude spectrum'</span>), plt.xticks([]),plt.yticks([])</span><br><span class="line">plt.show()</span><br><span class="line">图像模糊</span><br></pre></td></tr></tbody></table></figure><p>高通</p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cv_show</span><span class="params">(name,img)</span>:</span></span><br><span class="line">    cv2.namedWindow(name,<span class="number">0</span>)</span><br><span class="line">    cv2.imshow(name,img)</span><br><span class="line">    cv2.waitKey(<span class="number">0</span>)</span><br><span class="line">    cv2.destroyAllWindows()</span><br><span class="line"></span><br><span class="line">img = cv2.imread(<span class="string">'./img/clock1.jpg'</span>,<span class="number">0</span>)</span><br><span class="line"><span class="comment"># 输入图像必须先转换成float32格式</span></span><br><span class="line">img_float32 = np.float32(img)</span><br><span class="line"><span class="comment"># 得到的结果中 频率为0的部分在左上角，通常要转换到中心位置，用shift变换</span></span><br><span class="line">dft = cv2.dft(img_float32,flags = cv2.DFT_COMPLEX_OUTPUT)</span><br><span class="line">dft_shift = np.fft.fftshift(dft)</span><br><span class="line"><span class="comment"># cv2.dft()返回结果是双通道的，通常还要转换为图像格式</span></span><br><span class="line"><span class="comment"># magnitude_spectrum = 20*np.log(cv2.magnitude(dft_shift[:,:,0],dft_shift[:,:,1]))</span></span><br><span class="line"></span><br><span class="line">rows,cols = img.shape</span><br><span class="line">crow,ccol = int(rows/<span class="number">2</span>) , int(cols/<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 全为1 全要</span></span><br><span class="line">mask = np.ones((rows,cols,<span class="number">2</span>),np.uint8)</span><br><span class="line">mask[crow<span class="number">-30</span>:crow+<span class="number">30</span>,ccol<span class="number">-30</span>:ccol+<span class="number">30</span>] = <span class="number">0</span>   <span class="comment"># 中间为0，中间不要，即低频不要</span></span><br><span class="line">fshift = dft_shift*mask</span><br><span class="line"><span class="comment"># shift 回去</span></span><br><span class="line">f_ishift = np.fft.ifftshift(fshift)</span><br><span class="line"></span><br><span class="line">img_back = cv2.idft(f_ishift)</span><br><span class="line">img_back = cv2.magnitude(img_back[:,:,<span class="number">0</span>],img_back[:,:,<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 展示</span></span><br><span class="line">plt.subplot(<span class="number">121</span>), plt.imshow(img,cmap = <span class="string">'gray'</span>)</span><br><span class="line">plt.title(<span class="string">'input image'</span>), plt.xticks([]),plt.yticks([])</span><br><span class="line">plt.subplot(<span class="number">122</span>), plt.imshow(img_back, cmap = <span class="string">'gray'</span>)</span><br><span class="line">plt.title(<span class="string">'magnitude spectrum'</span>), plt.xticks([]),plt.yticks([])</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><h2 id="0-23-摄像头获取视频或图片获取感兴趣部分"><a href="#0-23-摄像头获取视频或图片获取感兴趣部分" class="headerlink" title="0.23 摄像头获取视频或图片获取感兴趣部分"></a>0.23 摄像头获取视频或图片获取感兴趣部分</h2><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">video_show</span><span class="params">()</span>:</span></span><br><span class="line">    choose_video = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        ret1,frame = video.read()</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> ret1:</span><br><span class="line">            print(<span class="string">"视频获取失败！"</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        cv2.imshow(<span class="string">"Video_show"</span>,frame)</span><br><span class="line">        <span class="keyword">if</span> cv2.waitKey(<span class="number">1</span>) &amp; <span class="number">0xff</span> == ord(<span class="string">"q"</span>):</span><br><span class="line">            <span class="comment"># rects = []</span></span><br><span class="line">            <span class="comment"># fromCenter = False</span></span><br><span class="line">            <span class="comment"># Select multiple rectangles</span></span><br><span class="line">            <span class="comment"># select_data = cv2.selectROI("Image", frame, rects, fromCenter)</span></span><br><span class="line">            select_data = cv2.selectROI(<span class="string">"Video_show"</span>,frame)</span><br><span class="line">            choose_video = <span class="literal">True</span></span><br><span class="line">        <span class="keyword">if</span> choose_video :</span><br><span class="line">            <span class="comment">#获取选择框内的图像</span></span><br><span class="line">            choose_data = frame[select_data[<span class="number">1</span>]:select_data[<span class="number">1</span>]+select_data[<span class="number">3</span>],select_data[<span class="number">0</span>]:select_data[<span class="number">0</span>]+select_data[<span class="number">2</span>]]</span><br><span class="line">            cv2.imshow(<span class="string">"choose_video"</span>,choose_data)</span><br><span class="line">        <span class="keyword">if</span> cv2.waitKey(<span class="number">1</span>) &amp; <span class="number">0xff</span> == ord(<span class="string">"p"</span>):</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    video.release()</span><br><span class="line">    <span class="comment"># cv2.destroyAllWindows()</span></span><br><span class="line">    <span class="keyword">return</span> choose_data</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    video = cv2.VideoCapture(<span class="number">0</span>)</span><br><span class="line">    video_show()</span><br></pre></td></tr></tbody></table></figure><h3 id="0-23-1-选取-roi-区域定义"><a href="#0-23-1-选取-roi-区域定义" class="headerlink" title="0.23.1 选取 roi 区域定义"></a>0.23.1 选取 roi 区域定义</h3><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 方法1：使用表示矩形区域的Rect，参数有矩形左上角坐标、矩形的长和宽</span></span><br><span class="line"><span class="comment"># Mat imageROI;</span></span><br><span class="line">imageROI = image(Rect(<span class="number">500</span>,<span class="number">250</span>,logo.cols,logo.rows));</span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法2：指定感兴趣的行或列的范围（Range），Range是指从起始索引到终止索引（不包括终止索引）的一段连续序列</span></span><br><span class="line"><span class="comment"># Mat imageROI;</span></span><br><span class="line">imageROI = image(Range(<span class="number">250</span>,<span class="number">250</span>+logoImage.rows),Range(<span class="number">200</span>,<span class="number">200</span>+logoImage.cols));</span><br></pre></td></tr></tbody></table></figure><h1 id="1-图像识别相关"><a href="#1-图像识别相关" class="headerlink" title="1. 图像识别相关"></a>1. 图像识别相关</h1><h2 id="1-1-两张图片对比"><a href="#1-1-两张图片对比" class="headerlink" title="1.1 两张图片对比"></a>1.1 两张图片对比</h2><p><strong>返回一张对比后的图片</strong></p><p>轮子安装<br><code>pip install pillow</code><br><code>pip install PIL</code></p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> ImageChops</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">compare_images</span><span class="params">(path_one, path_two, diff_save_location)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    比较图片，如果有不同则生成展示不同的图片</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    @参数一: path_one: 第一张图片的路径</span></span><br><span class="line"><span class="string">    @参数二: path_two: 第二张图片的路径</span></span><br><span class="line"><span class="string">    @参数三: diff_save_location: 不同图的保存路径</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    image_one = Image.open(path_one)</span><br><span class="line">    image_two = Image.open(path_two)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        diff = ImageChops.difference(image_one, image_two)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> diff.getbbox() <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="comment"># 图片间没有任何不同则直接退出</span></span><br><span class="line">            print(<span class="string">"【+】We are the same!"</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            diff.save(diff_save_location)</span><br><span class="line">    <span class="keyword">except</span> ValueError <span class="keyword">as</span> e:</span><br><span class="line">        text = (<span class="string">"表示图片大小和box对应的宽度不一致，参考API说明：Pastes another image into this image."</span></span><br><span class="line">                <span class="string">"The box argument is either a 2-tuple giving the upper left corner, a 4-tuple defining the left, upper, "</span></span><br><span class="line">                <span class="string">"right, and lower pixel coordinate, or None (same as (0, 0)). If a 4-tuple is given, the size of the pasted "</span></span><br><span class="line">                <span class="string">"image must match the size of the region.使用2纬的box避免上述问题"</span>)</span><br><span class="line">        print(<span class="string">"【{0}】{1}"</span>.format(e, text))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    name1 = <span class="string">'./对比图片/'</span> + input(<span class="string">'输入要对比的图片名字---带后缀格式----：'</span>)</span><br><span class="line">    name2 = <span class="string">'./对比图片/'</span> + input(<span class="string">'第二张图片的名字：'</span>)</span><br><span class="line">    name = <span class="string">'对比结果'</span> + input(<span class="string">'你的对比结果后缀是什么：'</span>)</span><br><span class="line">    compare_images(name1, name2, name)</span><br><span class="line">    print(<span class="string">'-------已完成-------'</span>)</span><br></pre></td></tr></tbody></table></figure><blockquote><p><a href="https://www.cnblogs.com/botoo/p/8416315.html" target="_blank" rel="noopener">参考教程</a></p></blockquote><h1 id="2-根据数据生成表格，图线"><a href="#2-根据数据生成表格，图线" class="headerlink" title="2. 根据数据生成表格，图线"></a>2. 根据数据生成表格，图线</h1><p><strong><a href="https://yq010105.github.io/2020/02/22/python-openpyxl/">openpyxl</a> and <a href="https://yq010105.github.io/2020/02/22/python-plotly/">plotly</a> or <a href="https://yq010105.github.io/2020/02/21/python-plt/">plt</a></strong></p><h1 id="3-慢慢学-opencv"><a href="#3-慢慢学-opencv" class="headerlink" title="3. 慢慢学 opencv"></a>3. 慢慢学 opencv</h1><p><a href="https://www.cnblogs.com/silence-cho/p/10926248.html" target="_blank" rel="noopener">先行教程</a></p><h2 id="3-1-在新窗口打开图片，保存图片，基操"><a href="#3-1-在新窗口打开图片，保存图片，基操" class="headerlink" title="3.1 在新窗口打开图片，保存图片，基操"></a>3.1 在新窗口打开图片，保存图片，基操</h2><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line">img_path = <span class="string">'./img/'</span> + input(<span class="string">'输入图像路径：--带后缀--'</span>)</span><br><span class="line"><span class="comment"># 读取图片</span></span><br><span class="line">h = cv2.imread(img_path,cv2.IMREAD_GRAYSCALE)</span><br><span class="line"><span class="comment"># 创建一个窗口</span></span><br><span class="line">cv2.namedWindow(<span class="string">'printwindow'</span>)</span><br><span class="line">cv2.namedWindow(<span class="string">'window'</span>,<span class="number">0</span>)    <span class="comment"># 0 自由改变窗口大小</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 改变图片颜色</span></span><br><span class="line">imgviewx = cv2.cvtColor(imgviewx,cv2.COLOR_BGR2GRAY)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示图片，（窗口名，读入的图像）</span></span><br><span class="line">cv2.imshow(<span class="string">'printwindow'</span>,h)</span><br><span class="line"><span class="comment"># 窗口等待任意键盘按键输入，0为一直等待</span></span><br><span class="line">cv2.waitKey(<span class="number">0</span>)</span><br><span class="line"><span class="comment"># 保存图片</span></span><br><span class="line">cv2.imwrite(<span class="string">'./img/result.jpg'</span>,imgviewx)</span><br><span class="line"><span class="comment"># 销毁窗口</span></span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></tbody></table></figure><h2 id="3-2-图像阈值化"><a href="#3-2-图像阈值化" class="headerlink" title="3.2 图像阈值化"></a>3.2 图像阈值化</h2><p><strong>参数说明：</strong></p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">cv2.threshold():</span><br><span class="line">参数：</span><br><span class="line">    img:图像对象，必须是灰度图</span><br><span class="line">    thresh:阈值</span><br><span class="line">    maxval：最大值</span><br><span class="line">    type:</span><br><span class="line">        cv2.THRESH_BINARY:     小于阈值的像素置为<span class="number">0</span>，大于阈值的置为maxval</span><br><span class="line">        cv2.THRESH_BINARY_INV： 小于阈值的像素置为maxval，大于阈值的置为<span class="number">0</span></span><br><span class="line">        cv2.THRESH_TRUNC：      小于阈值的像素不变，大于阈值的置为thresh</span><br><span class="line">        cv2.THRESH_TOZERO       小于阈值的像素置<span class="number">0</span>，大于阈值的不变</span><br><span class="line">        cv2.THRESH_TOZERO_INV   小于阈值的不变，大于阈值的像素置<span class="number">0</span></span><br><span class="line">返回两个值</span><br><span class="line">    ret:阈值</span><br><span class="line">    img：阈值化处理后的图像</span><br><span class="line"></span><br><span class="line">cv2.adaptiveThreshold() 自适应阈值处理，图像不同部位采用不同的阈值进行处理</span><br><span class="line">参数：</span><br><span class="line">    img: 图像对象，<span class="number">8</span>-bit单通道图</span><br><span class="line">    maxValue:最大值</span><br><span class="line">    adaptiveMethod: 自适应方法</span><br><span class="line">        cv2.ADAPTIVE_THRESH_MEAN_C     ：阈值为周围像素的平均值</span><br><span class="line">        cv2.ADAPTIVE_THRESH_GAUSSIAN_C : 阈值为周围像素的高斯均值（按权重）</span><br><span class="line">    threshType:</span><br><span class="line">        cv2.THRESH_BINARY:     小于阈值的像素置为<span class="number">0</span>，大于阈值的置为maxValuel</span><br><span class="line">        cv2.THRESH_BINARY_INV:  小于阈值的像素置为maxValue，大于阈值的置为<span class="number">0</span></span><br><span class="line">    blocksize: 计算阈值时，自适应的窗口大小,必须为奇数 （如<span class="number">3</span>：表示附近<span class="number">3</span>个像素范围内的像素点，进行计算阈值）</span><br><span class="line">    C： 常数值，通过自适应方法计算的值，减去该常数值</span><br><span class="line">(mean value of the blocksize*blocksize neighborhood of (x, y) minus C)</span><br></pre></td></tr></tbody></table></figure><p><strong>例子</strong></p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line">imgpath = <span class="string">'./img/'</span> + input(<span class="string">'输入图像路径'</span>)</span><br><span class="line">imgviewx = cv2.imread(imgpath)</span><br><span class="line"><span class="comment"># 将图像转化为灰度</span></span><br><span class="line">imgviewx = cv2.cvtColor(imgviewx,cv2.COLOR_BGR2GRAY)</span><br><span class="line"><span class="comment"># 边界设置</span></span><br><span class="line">imgresult = cv2.copyMakeBorder(imgviewx,<span class="number">20</span>,<span class="number">20</span>,<span class="number">20</span>,<span class="number">20</span>,cv2.BORDER_DEFAULT)</span><br><span class="line"></span><br><span class="line">ret,threl = cv2.threshold(imgviewx,<span class="number">127</span>,<span class="number">255</span>,cv2.THRESH_BINARY)</span><br><span class="line"></span><br><span class="line">cv2.namedWindow(<span class="string">'window2'</span>,<span class="number">0</span>)</span><br><span class="line">cv2.imshow(<span class="string">'window2'</span>,threl)</span><br><span class="line">cv2.waitKey(<span class="number">0</span>)</span><br><span class="line">cv2.destroyALLWindows()</span><br></pre></td></tr></tbody></table></figure><h2 id="3-3-图像形状变化"><a href="#3-3-图像形状变化" class="headerlink" title="3.3 图像形状变化"></a>3.3 图像形状变化</h2><h3 id="3-3-1-cv2-resize-图像缩放"><a href="#3-3-1-cv2-resize-图像缩放" class="headerlink" title="3.3.1 cv2.resize() 图像缩放"></a>3.3.1 cv2.resize() 图像缩放</h3><p>参数</p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">cv2.resize() 放大和缩小图像</span><br><span class="line">    参数：</span><br><span class="line">        src: 输入图像对象</span><br><span class="line">        dsize：输出矩阵/图像的大小，为<span class="number">0</span>时计算方式如下：dsize = Size(round(fx*src.cols),round(fy*src.rows))</span><br><span class="line">        fx: 水平轴的缩放因子，为<span class="number">0</span>时计算方式：  (double)dsize.width/src.cols</span><br><span class="line">        fy: 垂直轴的缩放因子，为<span class="number">0</span>时计算方式：  (double)dsize.heigh/src.rows</span><br><span class="line">        interpolation：插值算法</span><br><span class="line">            cv2.INTER_NEAREST : 最近邻插值法</span><br><span class="line">            cv2.INTER_LINEAR   默认值，双线性插值法</span><br><span class="line">            cv2.INTER_AREA        基于局部像素的重采样（resampling using pixel area relation）。对于图像抽取（image decimation）来说，这可能是一个更好的方法。但如果是放大图像时，它和最近邻法的效果类似。</span><br><span class="line">            cv2.INTER_CUBIC        基于<span class="number">4</span>x4像素邻域的<span class="number">3</span>次插值法</span><br><span class="line">            cv2.INTER_LANCZOS4     基于<span class="number">8</span>x8像素邻域的Lanczos插值</span><br><span class="line"></span><br><span class="line">    cv2.INTER_AREA 适合于图像缩小， cv2.INTER_CUBIC (slow) &amp; cv2.INTER_LINEAR 适合于图像放大</span><br></pre></td></tr></tbody></table></figure><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment"># 缩小图像为原来的一半</span></span><br><span class="line">img = cv2.imread(<span class="string">'messi5.jpg'</span>)</span><br><span class="line"></span><br><span class="line">res = cv2.resize(img,<span class="literal">None</span>,fx=<span class="number">2</span>, fy=<span class="number">2</span>, interpolation = cv2.INTER_CUBIC)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line"></span><br><span class="line">height, width = img.shape[:<span class="number">2</span>]</span><br><span class="line">res = cv2.resize(img,(<span class="number">2</span>*width, <span class="number">2</span>*height), interpolation = cv2.INTER_CUBIC)</span><br></pre></td></tr></tbody></table></figure><h3 id="3-3-2-仿射变换"><a href="#3-3-2-仿射变换" class="headerlink" title="3.3.2 仿射变换"></a>3.3.2 仿射变换</h3><p>仿射变换（从二维坐标到二维坐标之间的线性变换，且保持二维图形的“平直性”和“平行性”。仿射变换可以通过一系列的原子变换的复合来实现，包括平移，缩放，翻转，旋转和剪切）<br><strong>参数</strong></p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cv2.warpAffine()   仿射变换（从二维坐标到二维坐标之间的线性变换，且保持二维图形的“平直性”和“平行性”。仿射变换可以通过一系列的原子变换的复合来实现，包括平移，缩放，翻转，旋转和剪切）</span><br><span class="line">    参数：</span><br><span class="line">        img: 图像对象</span><br><span class="line">        M：<span class="number">2</span>*<span class="number">3</span> transformation matrix (转变矩阵)</span><br><span class="line">        dsize：输出矩阵的大小,注意格式为（cols，rows）  即width对应cols，height对应rows</span><br><span class="line">        flags：可选，插值算法标识符，有默认值INTER_LINEAR，</span><br><span class="line">               如果插值算法为WARP_INVERSE_MAP, warpAffine函数使用如下矩阵进行图像转dst(x,y)=src(M11*x+M12*y+M13,M21*x+M22*y+M23)</span><br><span class="line">        borderMode：可选， 边界像素模式，有默认值BORDER_CONSTANT</span><br><span class="line">        borderValue:可选，边界取值，有默认值Scalar()即<span class="number">0</span></span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 学习力 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Compete </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>厚墨书源学习如何制作</title>
      <link href="/2020/02/18/learn-selector-jsoup/"/>
      <url>/2020/02/18/learn-selector-jsoup/</url>
      
        <content type="html"><![CDATA[<p><strong>Jsoup 中 Selector 选择器用法</strong><br>暂时不学了先，事情太多了</p><a id="more"></a><blockquote><p><a href="https://blog.csdn.net/syt_boss/article/details/82863990" target="_blank" rel="noopener">Jsoup Selector</a> &gt; <a href="https://jsoup.org/apidocs/org/jsoup/select/Selector.html" target="_blank" rel="noopener">官方文档</a></p></blockquote><h1 id="1-Selector-选择器概述"><a href="#1-Selector-选择器概述" class="headerlink" title="1. Selector 选择器概述"></a>1. Selector 选择器概述</h1><ul><li>tagname: 通过标签查找元素，比如：a</li><li>ns|tag: 通过标签在命名空间查找元素，比如：可以用 fb|name 语法来查找 <a href="fb:name">fb:name</a> 元素</li><li>#id: 通过 ID 查找元素，比如：#logo</li><li>.class: 通过 class 名称查找元素，比如：.masthead</li><li>[attribute]: 利用属性查找元素，比如：[href]</li><li>[^attr]: 利用属性名前缀来查找元素，比如：可以用[^data-] 来查找带有 HTML5 Dataset 属性的元素</li><li>[attr=value]: 利用属性值来查找元素，比如：[width=500]</li><li>[attr^=value], [attr$=value], [attr<em>=value]: 利用匹配属性值开头、结尾或包含属性值来查找元素，比如：[href\</em>=/path/]</li><li>[attr~=regex]: 利用属性值匹配正则表达式来查找元素，比如： img[src~=(?i).(png|jpe?g)]</li><li>*: 这个符号将匹配所有元素</li></ul><h1 id="2-Selector-选择器组合使用"><a href="#2-Selector-选择器组合使用" class="headerlink" title="2. Selector 选择器组合使用"></a>2. Selector 选择器组合使用</h1><ul><li>el#id: 元素+ID，比如： div#logo</li><li>el.class: 元素+class，比如： div.masthead</li><li>el[attr]: 元素+class，比如： a[href]</li><li>任意组合，比如：a[href].highlight</li><li>ancestor child: 查找某个元素下子元素，比如：可以用.body p 查找在”body”元素下的所有 p 元素</li><li>parent &gt; child: 查找某个父元素下的直接子元素，比如：可以用 div.content &gt; p 查找 p 元素，也可以用 body &gt; * 查找 body 标签下所有直接子元素</li><li>siblingA + siblingB: 查找在 A 元素之前第一个同级元素 B，比如：div.head + div</li><li>siblingA ~ siblingX: 查找 A 元素之前的同级 X 元素，比如：h1 ~ p</li><li>el, el, el:多个选择器组合，查找匹配任一选择器的唯一元素，例如：div.masthead, div.logo</li></ul><h1 id="3-伪选择器-selectors"><a href="#3-伪选择器-selectors" class="headerlink" title="3. 伪选择器 selectors"></a>3. 伪选择器 selectors</h1><ul><li>:lt(n): 查找哪些元素的同级索引值（它的位置在 DOM 树中是相对于它的父节点）小于 n，比如：td:lt(3) 表示小于三列的元素</li><li>:gt(n):查找哪些元素的同级索引值大于 n，比如： div p:gt(2)表示哪些 div 中有包含 2 个以上的 p 元素</li><li>:eq(n): 查找哪些元素的同级索引值与 n 相等，比如：form input:eq(1)表示包含一个 input 标签的 Form 元素</li><li>:has(seletor): 查找匹配选择器包含元素的元素，比如：div:has(p)表示哪些 div 包含了 p 元素</li><li>:not(selector): 查找与选择器不匹配的元素，比如： div:not(.logo) 表示不包含 class=logo 元素的所有 div 列表</li><li>:contains(text): 查找包含给定文本的元素，搜索不区分大不写，比如： p:contains(jsoup)</li><li>:containsOwn(text): 查找直接包含给定文本的元素</li><li>:matches(regex): 查找哪些元素的文本匹配指定的正则表达式，比如：div:matches((?i)login)</li><li>:matchesOwn(regex): 查找自身包含文本匹配指定正则表达式的元素</li><li>注意：上述伪选择器索引是从 0 开始的，也就是说第一个元素索引值为 0，第二个元素 index 为 1 等</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 学习力 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Jsoup </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一些奇怪的想象</title>
      <link href="/2020/02/18/yq-imagination/"/>
      <url>/2020/02/18/yq-imagination/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><h1 id="1-音乐"><a href="#1-音乐" class="headerlink" title="1. 音乐"></a>1. 音乐</h1><h2 id="1-1-一款可以根据自己想象力，而自动播放音乐的耳机"><a href="#1-1-一款可以根据自己想象力，而自动播放音乐的耳机" class="headerlink" title="1.1 一款可以根据自己想象力，而自动播放音乐的耳机"></a>1.1 一款可以根据自己想象力，而自动播放音乐的耳机</h2><p>人脑电波识别技术<br>人脑电波信号破译<del>人脑信号的研究，人脑的本质</del></p><h2 id="1-2-AI唱片"><a href="#1-2-AI唱片" class="headerlink" title="1.2 AI唱片"></a>1.2 AI唱片</h2><p>由人工智能通过分析很多音乐的数据，然后生成了一首歌<br>这个可能已经实现了，让我百度一下，可能真的已经实现了，毕竟音乐也只是数据而已，通过AI生成的音乐，我也是突然看到了《自卑与超越》，然后想到了骨头社的周年巨作里就有用AI作曲的东西<br>AI作曲：Algorithmic Composition – 算法作曲，OpenAI发布了新的可以在线作曲的工具MuseNet</p><blockquote><p><a href="https://baijiahao.baidu.com/s?id=1632208319890143854&amp;wfr=spider&amp;for=pc" target="_blank" rel="noopener">详情看这篇文章</a><br><a href="https://zhuanlan.zhihu.com/p/80860774" target="_blank" rel="noopener">还有知乎上这个头像是傻夸的臭DD</a></p></blockquote><h1 id="2-读书（废话）"><a href="#2-读书（废话）" class="headerlink" title="2. 读书（废话）"></a>2. 读书（废话）</h1><h2 id="2-1-薛定谔的善恶"><a href="#2-1-薛定谔的善恶" class="headerlink" title="2.1 薛定谔的善恶"></a>2.1 薛定谔的善恶</h2><p>一个人有着表面和里面，通常我们之间相互交流只能看到人的表面，也许善的表面，但里面却是恶，如果没人发现，那么对他的认知就只有善，并且会持续下去，结束的方法就是判断出里面的善和恶，一善皆善，一恶皆恶。。。。。。。写的这是啥啊</p><h1 id="3-想做的一些小程序"><a href="#3-想做的一些小程序" class="headerlink" title="3. 想做的一些小程序"></a>3. 想做的一些小程序</h1><h2 id="3-1-图片相关"><a href="#3-1-图片相关" class="headerlink" title="3.1 图片相关"></a>3.1 图片相关</h2><h3 id="3-1-1-自动生成REOL封面的特效"><a href="#3-1-1-自动生成REOL封面的特效" class="headerlink" title="3.1.1 自动生成REOL封面的特效"></a>3.1.1 自动生成REOL封面的特效</h3><p>应该大致是把像素点做一个位移然后再叠加起来</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 想象力 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Life </tag>
            
            <tag> Imagination </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用python解决问题</title>
      <link href="/2020/02/17/q-spython/"/>
      <url>/2020/02/17/q-spython/</url>
      
        <content type="html"><![CDATA[<p><strong>这篇主要是记录一些生活学习中遇到的一些难题,想不通,就用 python 模拟出来</strong><br><em>虽然模拟出来了，但不会有可能还是不会 hhh</em></p><a id="more"></a><h1 id="1-概率类问题"><a href="#1-概率类问题" class="headerlink" title="1. 概率类问题"></a>1. 概率类问题</h1><h2 id="1-1-24-个朋友生日问题"><a href="#1-1-24-个朋友生日问题" class="headerlink" title="1.1 24 个朋友生日问题"></a>1.1 24 个朋友生日问题</h2><p>一道小题，材料力学老师引出</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">一年中同一天收到2个或2个以上朋友生日聚会邀请的概率</span><br><span class="line">A 、小于10%  B、20%  C、40%  D、大于50%</span><br></pre></td></tr></tbody></table></figure><p><em>将其大致概括就是：身边有 24 个朋友，他们中有两个人或两个以上的人同一天生日的概率是多少</em><br><strong>为了简单，就只算两个人生日相同的概率</strong></p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_same</span><span class="params">()</span>:</span></span><br><span class="line">    ris = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">24</span>):  <span class="comment"># 24个人，生成24个随机数</span></span><br><span class="line">        ri = random.randint(<span class="number">1</span>, <span class="number">365</span>)  <span class="comment"># 随机数范围则是一年365天</span></span><br><span class="line">        ris.append(ri)</span><br><span class="line"></span><br><span class="line">    d = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">24</span>):     <span class="comment"># 循环来比较随机数</span></span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> range(j+<span class="number">1</span>, <span class="number">24</span>):</span><br><span class="line">            <span class="keyword">if</span> ris[j] == ris[k]:</span><br><span class="line">                d += <span class="number">1</span></span><br><span class="line">                <span class="comment"># print(ris[k])</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">return</span> d        <span class="comment"># 如果有相同，不管有几个，d都不是0</span></span><br><span class="line">    <span class="comment"># 即如果d=0，说明这24个人里无同一天生日</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_gailv</span><span class="params">()</span>:</span></span><br><span class="line">    su = <span class="number">0</span>      <span class="comment"># 总次数</span></span><br><span class="line">    suancal = <span class="number">0</span>  <span class="comment"># 无相同，即d=0的次数</span></span><br><span class="line">    <span class="keyword">for</span> h <span class="keyword">in</span> range(<span class="number">0</span>, <span class="number">10000</span>):   <span class="comment"># 10000次</span></span><br><span class="line">        <span class="comment"># print(h)</span></span><br><span class="line">        suan = get_same()</span><br><span class="line">        <span class="keyword">if</span> suan == <span class="number">0</span>:   <span class="comment"># 如果suan为0，说明生日都不同</span></span><br><span class="line">            suancal = suancal + <span class="number">1</span></span><br><span class="line">        su += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> suancal/su    <span class="comment"># 24 人生日都不同的概率</span></span><br><span class="line"></span><br><span class="line">gailvs = []</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">10</span>):     <span class="comment"># 重复10次获得概率</span></span><br><span class="line">    gailv = get_gailv()</span><br><span class="line">    gailvs.append(gailv)</span><br><span class="line">print(gailvs)</span><br></pre></td></tr></tbody></table></figure><p><strong>结果为</strong><br><strong>[0.4609, 0.4626, 0.4719, 0.4608, 0.4528, 0.4607, 0.467, 0.4575, 0.4549, 0.4577]</strong></p><p><em>可以发现没有超过 0.5 的概率，说明生日都不相同的概率是大于 0.5 的，也就是说这 24 个人有超过 50%的概率是有两个或两个以上生日是同一天的</em><br><strong>接下来分析原因：</strong><br>不难猜想出，如果只有两个人，这两个人生日同一天概率很小，随着人数的增多，出现生日相同的概率越来越大<br>可以反过来思考，计算每个人生日都不同的概率<br>两个人不同：364/365<br>三个人不同：364/365 _ 363/365<br>四个人不同：364/365 _ 363/365 * 362/365<br>以此类推：当 24 个人生日不同时的概率：</p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">total = <span class="number">1</span></span><br><span class="line">j = <span class="number">365</span></span><br><span class="line">ren = int(input(<span class="string">'请输入人数：'</span>))    <span class="comment"># 24人</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(ren<span class="number">-1</span>):</span><br><span class="line">    j = j - <span class="number">1</span></span><br><span class="line">    total = j * total</span><br><span class="line"></span><br><span class="line">fenmu = <span class="number">365</span> ** (ren<span class="number">-1</span>)</span><br><span class="line">print(total/fenmu) <span class="comment"># 0.4616557420854712</span></span><br></pre></td></tr></tbody></table></figure><p>可以计算出概率为 0.46，即可以得出有两人或两人以上的概率为 0.54</p><h2 id="1-2-三门问题"><a href="#1-2-三门问题" class="headerlink" title="1.2 三门问题"></a>1.2 三门问题</h2><p>概率论与数理统计上课问题–无 python 代码，需要思考<br><a href="https://baike.baidu.com/item/%E4%B8%89%E9%97%A8%E9%97%AE%E9%A2%98/1242689?fr=aladdin" target="_blank" rel="noopener">百度百科</a></p><p><strong>问题大概</strong></p><p>三门问题（Monty Hall problem）亦称为蒙提霍尔问题、蒙特霍问题或蒙提霍尔悖论，大致出自美国的电视游戏节目 Let’s Make a Deal。问题名字来自该节目的主持人蒙提·霍尔（Monty Hall）。参赛者会看见三扇关闭了的门，其中一扇的后面有一辆汽车，选中后面有车的那扇门可赢得该汽车，另外两扇门后面则各藏有一只山羊。当参赛者选定了一扇门，但未去开启它的时候，节目主持人开启剩下两扇门的其中一扇，露出其中一只山羊。主持人其后会问参赛者要不要换另一扇仍然关上的门。问题是：换另一扇门会否增加参赛者赢得汽车的机率？如果严格按照上述的条件，即主持人清楚地知道，自己打开的那扇门后是羊，那么答案是会。不换门的话，赢得汽车的几率是 1/3。换门的话，赢得汽车的几率是 2/3</p><p><strong>解答</strong></p><ul><li>第一次选的空门 1（概率 1/3），之后主持人开另一个空门，换门，得到汽车。事件总概率 1/3。</li><li>第一次选的空门 2（概率 1/3），之后主持人开另一个空门，换门，得到汽车。事件总概率 1/3。</li><li>第一次选的汽车（概率 1/3），之后主持人开另一个空门 1（概率 1/2）<br>不换门，得到汽车 这个事件总概率 1/3 * 1/2 = 1/6</li><li>第一次选的汽车（概率 1/3），之后主持人开另一个空门 2（概率 1/2）<br>不换门，得到汽车 这个事件总概率 1/3 * 1/2 = 1/6</li></ul><p>所以换门赢得汽车的概率更大</p><p><strong>概率存在于被给予的条件下，概率不能寄托在实际的物体上</strong></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 技术力 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Questions </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VB-Note</title>
      <link href="/2020/02/16/note-vb/"/>
      <url>/2020/02/16/note-vb/</url>
      
        <content type="html"><![CDATA[<h1 id="5-正式学习"><a href="#5-正式学习" class="headerlink" title="5. 正式学习"></a>5. <strong>正式学习</strong></h1><h2 id="5-1-基础知识（零碎）"><a href="#5-1-基础知识（零碎）" class="headerlink" title="5.1 基础知识（零碎）"></a>5.1 基础知识（零碎）</h2><p>对象：数据和数据操作方式的综合体，如窗体、控件</p><p>对象三要素：属性、事件、方法</p><ul><li><p>属性：<br><code>对象.属性= 属性值</code></p></li><li><p>事件：</p></li></ul><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> 对象名_事件过程名[参数列表]</span><br><span class="line"><span class="comment">' click load ----</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></tbody></table></figure><ul><li>方法：</li></ul><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">对象.方法[参数名表]</span><br><span class="line">Form1.Print "avb"</span><br><span class="line">Text1.SetFocus</span><br></pre></td></tr></tbody></table></figure><p>暂停程序 Stop<br>结束程序 End</p><p>命令按钮改变背景必须变两个属性-bg 和 style<br>其他的只需改变 bg 就行了</p><h3 id="If-判断结构"><a href="#If-判断结构" class="headerlink" title="If 判断结构"></a>If 判断结构</h3><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> 表达式 <span class="keyword">then</span></span><br><span class="line">  语句<span class="number">1</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  语句<span class="number">2</span></span><br><span class="line"><span class="keyword">end</span> <span class="keyword">if</span></span><br></pre></td></tr></tbody></table></figure><p><strong>example：密码输入，限制输入 3 次</strong></p><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Dim</span> i <span class="keyword">As</span> <span class="built_in">Integer</span> <span class="comment">' 定义一个整型变量</span></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command2_Click()</span><br><span class="line">    <span class="keyword">If</span> Text1 = <span class="string">"buct"</span> <span class="keyword">Then</span></span><br><span class="line">        Text2.Visible = <span class="literal">True</span></span><br><span class="line">        Label2.Visible = <span class="literal">True</span></span><br><span class="line">        Command1.Visible = <span class="literal">True</span></span><br><span class="line">        Text1.Visible = <span class="literal">False</span></span><br><span class="line">        Label1.Visible = <span class="literal">False</span></span><br><span class="line">        Command2.Visible = <span class="literal">False</span></span><br><span class="line">        Label3.Visible = <span class="literal">False</span></span><br><span class="line">        Text2.SetFocus</span><br><span class="line">    <span class="keyword">Else</span></span><br><span class="line">       <span class="comment">' Text1 = ""</span></span><br><span class="line">       <span class="comment">' Label3.Visible = True</span></span><br><span class="line">       <span class="comment">' Label3 = "密码错误，请重新输入"</span></span><br><span class="line">       <span class="comment">' Text1.SetFocus</span></span><br><span class="line">        i = i +<span class="number">1</span></span><br><span class="line">        <span class="keyword">If</span> i &gt;= <span class="number">3</span> <span class="keyword">Then</span> <span class="keyword">End</span></span><br><span class="line">        Text1 = <span class="string">""</span></span><br><span class="line">        Text1.SetFocus</span><br><span class="line">        MsgBox <span class="string">"密码输入错误，请重新输入"</span> <span class="comment">' 弹出一个框</span></span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Form_Load()</span><br><span class="line">    Text2.Visible = <span class="literal">False</span></span><br><span class="line">    Label2.Visible = <span class="literal">False</span></span><br><span class="line">    Command1.Visible = <span class="literal">False</span></span><br><span class="line">    Label3.Visible = <span class="literal">False</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></tbody></table></figure><h2 id="5-2-VB-的语言成分"><a href="#5-2-VB-的语言成分" class="headerlink" title="5.2 VB 的语言成分"></a>5.2 VB 的语言成分</h2><p>编码规则：</p><ul><li>不区分字母大小写</li><li>语句书写自由:同一行可以写多条语句用<code>:</code>分开、一条语句多行写用<code>_</code>连接</li><li>代码注释： <code>'</code>或者<code>Rem</code>引导注释内容、快注释-视窗-工具栏-编辑-快注释</li><li>VB 的命名约定：字母或汉字开头，长度不超过 255 个字符，控件不超过 40 个字符<ul><li>不用 VB 关键字:<code>if loop</code></li><li>不能包含空格，小数点，其他声明字符<code>$ % &amp;</code></li></ul></li></ul><h3 id="5-2-1-基本数据类型"><a href="#5-2-1-基本数据类型" class="headerlink" title="5.2.1 基本数据类型"></a>5.2.1 基本数据类型</h3><p><img src="/img/VB/sjlx.png" alt="VB数据类型"></p><h3 id="5-2-2-直接常量"><a href="#5-2-2-直接常量" class="headerlink" title="5.2.2 直接常量"></a>5.2.2 直接常量</h3><p><img src="/img/VB/zjcl.png" alt="VB直接常量"></p><h3 id="5-2-3-变量"><a href="#5-2-3-变量" class="headerlink" title="5.2.3 变量"></a>5.2.3 变量</h3><ol><li>变量隐式声明：使用的变量未作声明，所有变量均为 Variant 类型</li><li>变量显式声明：</li></ol><ul><li>使用类型标示符直接声明变量 <code>MyName$ ="David"</code>–字符串型</li><li>使用 Dim 语句<ul><li>格式 1：Dim 变量名 As 数据类型[,变量名 As 数据类型，…..0]</li><li>格式 2：Dim 变量名 + 类型标识符</li></ul></li></ul><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Dim</span> A <span class="keyword">As</span> <span class="built_in">Integer</span>, B <span class="keyword">As</span> <span class="built_in">Double</span></span><br><span class="line"><span class="keyword">Dim</span> A%,B<span class="meta">#</span></span><br><span class="line"><span class="keyword">Dim</span> MyName1 <span class="keyword">As</span> <span class="built_in">String</span> , Myname2 <span class="keyword">As</span> <span class="built_in">String</span>*<span class="number">5</span> <span class="comment">'字符串只能是五个字符</span></span><br><span class="line"><span class="keyword">Dim</span> Vp1, Vp2 <span class="keyword">As</span> <span class="built_in">Single</span></span><br></pre></td></tr></tbody></table></figure><ol start="3"><li>变量的强制声明：在每个模块开始处自动加一条”Option Explicit”语句，所有变量需要指定数据类型</li></ol><p>工具菜单- 选项命令 - 选中编辑器中的要求变量声明</p><h3 id="5-2-4-模块"><a href="#5-2-4-模块" class="headerlink" title="5.2.4 模块"></a>5.2.4 模块</h3><p>VB 代码存储在模块中<br>三种模块：窗体模块、标准模块、类模块<br><img src="/img/VB/mk.png" alt="VB模块"></p><h3 id="5-2-5-变量的作用域"><a href="#5-2-5-变量的作用域" class="headerlink" title="5.2.5 变量的作用域"></a>5.2.5 变量的作用域</h3><ul><li>全局变量：在窗体或标准模块中声明 Public<ul><li><code>Public 变量名 As 数据类型</code></li></ul></li><li>模块级变量：在模块的声明部分使用 Dim 或 Private 声明<ul><li><code>Dim 变量名 As 数据类型</code></li></ul></li><li>局部变量：在过程中由 Dim 或 Static 关键字声明<ul><li><code>Static 变量名 As 数据类型</code></li></ul></li></ul><p>变量的作用域<br><img src="/img/VB/zyy.png" alt="变量的作用域及使用规则"></p><ul><li>内部常量：控件常量、语言常量、对象常量、用户界面常量</li><li>用户定义常量：用 Const 语句和赋值</li></ul><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Const</span> PI <span class="keyword">As</span> <span class="built_in">Double</span> = <span class="number">3.14159265</span>...</span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Const</span> Msg <span class="keyword">As</span> <span class="built_in">String</span> = <span class="string">"hello world"</span></span><br><span class="line"><span class="keyword">Public</span> <span class="keyword">Const</span> Msg <span class="keyword">As</span> <span class="built_in">String</span> = <span class="string">"天安门"</span></span><br></pre></td></tr></tbody></table></figure><ul><li>静态变量：每次调用一个过程时保留上次的调用值</li></ul><p><code>Static 变量名 As 数据类型,变量名 As 数据类型....</code></p><h3 id="5-2-6-变量类型检查"><a href="#5-2-6-变量类型检查" class="headerlink" title="5.2.6 变量类型检查"></a>5.2.6 变量类型检查</h3><p><img src="/img/VB/bllxjc.png" alt="变量的类型检查"></p><p><img src="/img/VB/sjlxflpd.png" alt="数据类型分类判断"></p><h3 id="5-2-7-运算符"><a href="#5-2-7-运算符" class="headerlink" title="5.2.7 运算符"></a>5.2.7 运算符</h3><p><img src="/img/VB/ysf.png" alt="运算符"></p><h3 id="5-2-8-常用内部函数"><a href="#5-2-8-常用内部函数" class="headerlink" title="5.2.8 常用内部函数"></a>5.2.8 常用内部函数</h3><p><img src="/img/VB/cyhs.png" alt="常用内部函数、数学函数"><br><img src="/img/VB/cyzhhs.png" alt="常用转换函数"><br><img src="/img/VB/zfchs.png" alt="字符串函数"></p><p><img src="/img/VB/sszfclz.png" alt="字符串函数例子"></p><h3 id="5-2-9-日期函数"><a href="#5-2-9-日期函数" class="headerlink" title="5.2.9 日期函数"></a>5.2.9 日期函数</h3><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">'Time Date Now DateDiff DateAdd</span></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command1_Click()</span><br><span class="line">    <span class="keyword">Dim</span> d1 <span class="keyword">As</span> <span class="built_in">Date</span>, d2 <span class="keyword">As</span> <span class="built_in">Date</span></span><br><span class="line">    Print Now, <span class="built_in">Date</span>, Time</span><br><span class="line">    Print Time, Hour(Time), Minute(Time), Second(Time)</span><br><span class="line">    Print <span class="built_in">Date</span>, Year(<span class="built_in">Date</span>), Month(<span class="built_in">Date</span>), Day(<span class="built_in">Date</span>)</span><br><span class="line">    Print <span class="string">"=---------------------="</span></span><br><span class="line">    Print DateDiff(<span class="string">"d"</span>, Now, <span class="meta">#10/1/2009#); #10/1/2009# - Date</span></span><br><span class="line">    Print <span class="built_in">Date</span> + Time; <span class="string">"***"</span>; DateAdd(<span class="string">"h"</span>, <span class="number">5</span>, Now); <span class="string">"***"</span>;</span><br><span class="line">    Print DateAdd(<span class="string">"s"</span>, <span class="number">5</span>, Time), vbCrLf</span><br><span class="line">    d1 = <span class="string">"2004-07-16 05:00:00"</span></span><br><span class="line">    d2 = <span class="string">"2004-08-20 23:00:00"</span></span><br><span class="line">    Print <span class="meta">#8/20/2004# - #7/16/2004#, d2 - d1, (d2 - d1) * 24</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></tbody></table></figure><p><img src="/img/VB/rqlz.png" alt="日期函数例子"></p><p><strong>格式输出函数</strong><br><code>Format$(表达式[,格式字符串])</code></p><blockquote><p>关于日期的格式详情，参考<a href="https://blog.csdn.net/bigheadsheep/article/details/12013267" target="_blank" rel="noopener">Format 函数</a>这篇文章</p></blockquote><p><strong>Shell 函数</strong><br><img src="/img/VB/shellhs.png" alt="shell函数"></p><h3 id="5-2-10-基本语句"><a href="#5-2-10-基本语句" class="headerlink" title="5.2.10 基本语句"></a>5.2.10 基本语句</h3><h4 id="5-2-10-1-赋值语句"><a href="#5-2-10-1-赋值语句" class="headerlink" title="5.2.10.1 赋值语句"></a>5.2.10.1 赋值语句</h4><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Let</span> 变量名 = 表达式  <span class="comment">'普通变量</span></span><br><span class="line"><span class="keyword">Set</span> 变量名 = 表达式  <span class="comment">' 对象型变量</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Let</span> A = <span class="number">5</span></span><br><span class="line"><span class="keyword">Set</span> Obj1 = Command1</span><br><span class="line"></span><br><span class="line">Text1.<span class="keyword">text</span> = <span class="string">"ok"</span></span><br></pre></td></tr></tbody></table></figure><h4 id="5-2-10-2-快速输入输出函数"><a href="#5-2-10-2-快速输入输出函数" class="headerlink" title="5.2.10.2 快速输入输出函数"></a>5.2.10.2 快速输入输出函数</h4><p><img src="/img/VB/kssrschs.png" alt="InputBox函数"></p><p><img src="/img/VB/msgbox.png" alt="MsgBox函数"></p><p><img src="/img/VB/msgboxlz.png" alt="MsgBox例子"></p><h2 id="5-3-控制结构与算法"><a href="#5-3-控制结构与算法" class="headerlink" title="5.3 控制结构与算法"></a>5.3 控制结构与算法</h2><h3 id="5-3-1-顺序结构"><a href="#5-3-1-顺序结构" class="headerlink" title="5.3.1 顺序结构"></a>5.3.1 顺序结构</h3><p>语句 1→→→ 语句 2→→→ 语句 3</p><h3 id="5-3-2-选择结构"><a href="#5-3-2-选择结构" class="headerlink" title="5.3.2 选择结构"></a>5.3.2 选择结构</h3><h4 id="5-3-2-1-if"><a href="#5-3-2-1-if" class="headerlink" title="5.3.2.1 if"></a>5.3.2.1 if</h4><p><strong>1</strong><code>if 表达式 then 语句</code></p><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="keyword">if</span> 表达式 <span class="keyword">then</span></span><br><span class="line">    语句块</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">if</span></span><br><span class="line"></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="keyword">if</span> 表达式 <span class="keyword">then</span></span><br><span class="line">    语句块<span class="number">1</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    语句块<span class="number">2</span></span><br><span class="line"><span class="keyword">end</span> <span class="keyword">if</span></span><br><span class="line"></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="keyword">if</span> 表达式 <span class="keyword">then</span></span><br><span class="line">    语句块</span><br><span class="line"><span class="keyword">else</span> : 语句</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">if</span></span><br><span class="line"></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="keyword">if</span> 表达式 <span class="keyword">then</span> 语句<span class="number">1</span> <span class="keyword">else</span> 语句<span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="keyword">if</span> 表达式<span class="number">1</span> <span class="keyword">then</span></span><br><span class="line">    语句块<span class="number">1</span></span><br><span class="line"><span class="keyword">elseif</span> 表达式<span class="number">2</span> <span class="keyword">then</span></span><br><span class="line">    语句块<span class="number">2</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    语句块</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">if</span></span><br></pre></td></tr></tbody></table></figure><p><strong>例子：</strong><br><img src="/img/VB/cfex.png" alt="摄氏度与华氏度提示"></p><h4 id="5-3-2-2-select"><a href="#5-3-2-2-select" class="headerlink" title="5.3.2.2 select"></a>5.3.2.2 select</h4><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">case</span> 变量或表达式</span><br><span class="line">    <span class="keyword">case</span> 表达式列表<span class="number">1</span>    <span class="comment">'is 关系运算表达式</span></span><br><span class="line">        语句块<span class="number">1</span></span><br><span class="line">    <span class="keyword">case</span> 表达式列表<span class="number">2</span></span><br><span class="line">        语句块<span class="number">2</span></span><br><span class="line">    <span class="keyword">case</span> <span class="keyword">else</span></span><br><span class="line">        语句块</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">select</span></span><br></pre></td></tr></tbody></table></figure><p><strong>例子：</strong></p><p><img src="/img/VB/yex.png" alt="求函数Y的值"></p><h3 id="5-3-3-循环结构"><a href="#5-3-3-循环结构" class="headerlink" title="5.3.3 循环结构"></a>5.3.3 循环结构</h3><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> 循环变量=初值 <span class="keyword">to</span> 终值 [<span class="keyword">step</span>步长]</span><br><span class="line">    语句块</span><br><span class="line">    [<span class="keyword">exit</span> <span class="keyword">for</span>]</span><br><span class="line">    语句块</span><br><span class="line"><span class="keyword">next</span> 循环变量</span><br></pre></td></tr></tbody></table></figure><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="keyword">each</span> 元素变量 <span class="keyword">in</span> 数组或集合</span><br><span class="line">    语句块</span><br><span class="line"><span class="keyword">next</span> 元素变量</span><br></pre></td></tr></tbody></table></figure><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">先判断后执行</span><br><span class="line"><span class="keyword">do</span> <span class="keyword">while</span> 条件</span><br><span class="line">    语句块</span><br><span class="line"><span class="keyword">loop</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span> <span class="keyword">until</span> 条件</span><br><span class="line">    语句块</span><br><span class="line"><span class="keyword">loop</span></span><br><span class="line"></span><br><span class="line">先执行后判断</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    语句块</span><br><span class="line"><span class="keyword">loop</span> <span class="keyword">while</span> 条件</span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    语句块</span><br><span class="line"><span class="keyword">loop</span> <span class="keyword">until</span> 条件</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">exit</span> <span class="keyword">do</span> 退出循环体</span><br></pre></td></tr></tbody></table></figure><h4 id="5-3-3-1-for-next-循环"><a href="#5-3-3-1-for-next-循环" class="headerlink" title="5.3.3.1 for next 循环"></a>5.3.3.1 for next 循环</h4><ul><li>循环变量是数之变量</li><li>初值、终值、步长可以是数之表达式</li><li>步长可正可负，但不能为 0 、为 1 是省略</li><li>exit for 退出循环，经常放到条件语句中</li><li>next 后的循环变量应与 for 语句中的循环变量一致，可以省略</li></ul><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> 循环变量=初值 <span class="keyword">to</span> 终值 [<span class="keyword">step</span>步长]</span><br><span class="line">    语句块</span><br><span class="line">    [<span class="keyword">exit</span> <span class="keyword">for</span>]</span><br><span class="line">    语句块</span><br><span class="line"><span class="keyword">next</span> 循环变量</span><br></pre></td></tr></tbody></table></figure><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">'--求1+2+3+4+...+n--</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">sub</span> command1_click()</span><br><span class="line">    <span class="keyword">dim</span> n <span class="keyword">as</span> <span class="built_in">integer</span> , i <span class="keyword">as</span> <span class="built_in">integer</span> , s <span class="keyword">as</span> <span class="built_in">integer</span></span><br><span class="line">    n = val(text1.<span class="keyword">text</span>)</span><br><span class="line">    s = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i = <span class="number">1</span> <span class="keyword">to</span> n</span><br><span class="line">        s = s + i</span><br><span class="line">    <span class="keyword">next</span> i</span><br><span class="line">    label3.caption = s</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">sub</span></span><br></pre></td></tr></tbody></table></figure><p><code>for each ... in ... next 循环</code></p><p>For Each…In…Next 循环结构中元素变量是 变体型变量</p><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="keyword">each</span> 元素变量 <span class="keyword">in</span> 数组或集合</span><br><span class="line">    语句块</span><br><span class="line"><span class="keyword">next</span> 元素变量</span><br></pre></td></tr></tbody></table></figure><p><img src="/img/VB/foreach.png" alt="控件颜色"></p><h4 id="5-3-3-2-do…loop-循环结构"><a href="#5-3-3-2-do…loop-循环结构" class="headerlink" title="5.3.3.2 do…loop 循环结构"></a>5.3.3.2 do…loop 循环结构</h4><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">do</span> <span class="keyword">while</span> 条件</span><br><span class="line">    语句组<span class="number">1</span></span><br><span class="line">    <span class="keyword">exit</span> <span class="keyword">do</span></span><br><span class="line">    语句组<span class="number">2</span></span><br><span class="line"><span class="keyword">loop</span></span><br><span class="line"></span><br><span class="line">细节------------------</span><br><span class="line">先判断后执行---当</span><br><span class="line"><span class="keyword">do</span> <span class="keyword">while</span> 条件</span><br><span class="line">    语句块</span><br><span class="line"><span class="keyword">loop</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span> <span class="keyword">until</span> 条件</span><br><span class="line">    语句块</span><br><span class="line"><span class="keyword">loop</span></span><br><span class="line"></span><br><span class="line">先执行后判断---直到</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    语句块</span><br><span class="line"><span class="keyword">loop</span> <span class="keyword">while</span> 条件</span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    语句块</span><br><span class="line"><span class="keyword">loop</span> <span class="keyword">until</span> 条件</span><br></pre></td></tr></tbody></table></figure><p>while true 则循环<br>until false 则循环</p><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">' 1^2+2^2+....小于n的最大值</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">sub</span> command1_click()</span><br><span class="line">    <span class="keyword">dim</span> n <span class="keyword">as</span> <span class="built_in">long</span> , s <span class="keyword">as</span> <span class="built_in">long</span>, i <span class="keyword">as</span> <span class="built_in">integer</span></span><br><span class="line">    n = val(text1.<span class="keyword">text</span>)</span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    s = <span class="number">0</span></span><br><span class="line">    <span class="keyword">do</span> <span class="keyword">while</span> s &lt; n</span><br><span class="line">        i = i + <span class="number">1</span></span><br><span class="line">        s = s + i * i</span><br><span class="line">    <span class="keyword">loop</span></span><br><span class="line">    text2.<span class="keyword">text</span> = s - i * i</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">sub</span></span><br></pre></td></tr></tbody></table></figure><h4 id="5-3-3-3-循环嵌套"><a href="#5-3-3-3-循环嵌套" class="headerlink" title="5.3.3.3 循环嵌套"></a>5.3.3.3 循环嵌套</h4><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">'----------eg:</span></span><br><span class="line"><span class="keyword">for</span> i = <span class="number">1</span> <span class="keyword">to</span> <span class="number">3</span></span><br><span class="line">    <span class="keyword">for</span> j = <span class="number">5</span> <span class="keyword">to</span> <span class="number">7</span></span><br><span class="line">        print i , j</span><br><span class="line">    <span class="keyword">next</span> j</span><br><span class="line"><span class="keyword">next</span> i</span><br><span class="line"></span><br><span class="line"><span class="keyword">or</span></span><br><span class="line"><span class="keyword">next</span> j,i</span><br></pre></td></tr></tbody></table></figure><h3 id="5-3-4-goto-语句"><a href="#5-3-4-goto-语句" class="headerlink" title="5.3.4 goto 语句"></a>5.3.4 goto 语句</h3><p><code>goto{标号|行号}</code></p><p><img src="/img/VB/gotoex.png" alt="goto例子"></p><h2 id="5-4-数组"><a href="#5-4-数组" class="headerlink" title="5.4 数组"></a>5.4 数组</h2><h3 id="5-4-1-数组"><a href="#5-4-1-数组" class="headerlink" title="5.4.1 数组"></a>5.4.1 数组</h3><p><img src="/img/VB/szgn.png" alt="数组概念"></p><p>如：<code>A(8)</code>,<code>B(I)</code>,<code>A(A(5))</code><br><code>a(1,3)</code>-二维数组</p><h3 id="5-4-2-数组定义"><a href="#5-4-2-数组定义" class="headerlink" title="5.4.2 数组定义"></a>5.4.2 数组定义</h3><p><code>Public|Private|Dim 数组名 维数定义 AS 类型</code><br><code>Dim A(-4 TO 10) As Integer</code><br><code>Dim A(0 TO 8,0 to 3) As Integer</code> = <code>Dim a(8,3) as integer</code></p><h4 id="5-4-2-1-定义形式"><a href="#5-4-2-1-定义形式" class="headerlink" title="5.4.2.1 定义形式"></a>5.4.2.1 定义形式</h4><p><code>dim 数组名 ([下界 to]上界) as 数据类型</code><br>下界默认为 0，也可以在 <code>option base n</code> 来修改默认下界</p><h4 id="5-4-2-2-动态数组的建立与使用"><a href="#5-4-2-2-动态数组的建立与使用" class="headerlink" title="5.4.2.2 动态数组的建立与使用"></a>5.4.2.2 动态数组的建立与使用</h4><p><code>dim 数组名() [as 数据类型]</code>先不给大小<br><code>redim 数组名 (8,8,)</code>具体使用时在给出大小<br><code>redim preserve 数组名(8,newvalue)</code>改变数组大小，可用 preserve 保留原来的数据</p><h4 id="5-4-2-3-控件数组"><a href="#5-4-2-3-控件数组" class="headerlink" title="5.4.2.3 控件数组"></a>5.4.2.3 控件数组</h4><p>在窗体上画出控件，进行属性设置</p><ul><li>复制粘贴，建立控件数组</li><li>编程时哟个 load 方法</li></ul><p><img src="/img/VB/dtszdsy.png" alt="动态数组的使用"></p><p><img src="/img/VB/fxsc.png" alt="输入10个单词，反序输出"><br><img src="/img/VB/fxsc1.png" alt="输出10个单词，反序输出2"><br><img src="/img/VB/fxsc2.png" alt="输出10个单词，反序输出3"></p><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">array 数组输入</span><br><span class="line">数组下界到数组上界</span><br><span class="line">ubound(A) <span class="keyword">to</span> lbound(A)</span><br></pre></td></tr></tbody></table></figure><h4 id="5-4-2-4-数组元素的复制"><a href="#5-4-2-4-数组元素的复制" class="headerlink" title="5.4.2.4 数组元素的复制"></a>5.4.2.4 数组元素的复制</h4><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">option</span> base <span class="number">1</span></span><br><span class="line">    <span class="keyword">dim</span> a(<span class="number">15</span>),b(<span class="number">3</span>,<span class="number">5</span>)</span><br><span class="line">    <span class="keyword">for</span> i = <span class="number">1</span> <span class="keyword">to</span> <span class="number">3</span></span><br><span class="line">        <span class="keyword">for</span> j = <span class="number">1</span> <span class="keyword">to</span> <span class="number">5</span></span><br><span class="line">        b(i,j) = a((i<span class="number">-1</span>) * <span class="number">5</span> +j)</span><br><span class="line">        <span class="keyword">next</span> j</span><br><span class="line">    <span class="keyword">next</span> i</span><br></pre></td></tr></tbody></table></figure><h4 id="5-4-2-5-for-each-…-next"><a href="#5-4-2-5-for-each-…-next" class="headerlink" title="5.4.2.5 for each … next"></a>5.4.2.5 for each … next</h4><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">打印一堆数组x中所有元素</span><br><span class="line"><span class="keyword">dim</span> x(<span class="number">15</span>)</span><br><span class="line"><span class="keyword">for</span> <span class="keyword">each</span> a <span class="keyword">in</span> x</span><br><span class="line">    print a;</span><br><span class="line"><span class="keyword">next</span> a</span><br></pre></td></tr></tbody></table></figure><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">求二维数组y的所有元素之和</span><br><span class="line"><span class="keyword">dim</span> y(<span class="number">10</span>,<span class="number">10</span>)</span><br><span class="line"><span class="keyword">for</span> <span class="keyword">each</span> a <span class="keyword">in</span> y</span><br><span class="line">    sum = sum + a</span><br><span class="line"><span class="keyword">next</span> a</span><br><span class="line">print sum</span><br></pre></td></tr></tbody></table></figure><p><img src="/img/VB/blsznr.png" alt="保留动态数组的内容"></p><h3 id="5-4-3-数组应用举例"><a href="#5-4-3-数组应用举例" class="headerlink" title="5.4.3 数组应用举例"></a>5.4.3 数组应用举例</h3><h4 id="5-4-3-1-例子-1"><a href="#5-4-3-1-例子-1" class="headerlink" title="5.4.3.1 例子 1"></a>5.4.3.1 例子 1</h4><p>例:生成 20 个 10 到 100 之间的随机整数,存于一维整型数组 A 中,同时显示于第一个文本框中,单击窗体将这 20 个数以相反的次序显示于另一个文本框中<br><img src="/img/VB/szlz.png" alt="数组应用"></p><h4 id="5-4-3-2-例子-2"><a href="#5-4-3-2-例子-2" class="headerlink" title="5.4.3.2 例子 2"></a>5.4.3.2 例子 2</h4><p><img src="/img/VB/szlz1.png" alt="控件数组"></p><h2 id="5-5-过程"><a href="#5-5-过程" class="headerlink" title="5.5 过程"></a>5.5 过程</h2><ul><li>过程的引入:使同类的操作不重复(操作方法相同、参数不同)</li><li>过程:完成一段独立功能,可供其他过程使用(调用)。过程又称为子程序</li><li>调用过程:调用其他过程的过程</li></ul><p>过程：</p><ul><li>sub 子过程</li><li>function 函数过程</li><li>property 属性过程</li><li>event 事件过程</li></ul><h3 id="5-5-1-子过程和函数过程"><a href="#5-5-1-子过程和函数过程" class="headerlink" title="5.5.1 子过程和函数过程"></a>5.5.1 子过程和函数过程</h3><p><img src="/img/VB/zgchsgc.png" alt="子过程和函数过程"></p><p>调用：</p><ul><li><p>子过程名[参数列表]</p></li><li><p>Call 子过程名 (参数列表)</p></li><li><p>变量名 = 函数过程名([参数列表])</p></li><li><p>public 所有模块的所有其他过程</p></li><li><p>private 只有本模块的其他过程</p></li><li><p>static 过程中所有的局部变量都为静态变量</p></li><li><p>函数过程名：function 过程的名称</p></li><li><p>形参表：调用时要传递给 function 的参数变量列表</p></li></ul><p><img src="/img/VB/gclz.png" alt="过程例子"></p><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">定义求阶乘的函数Fact</span><br><span class="line"><span class="keyword">Function</span> Fact(n <span class="keyword">As</span> <span class="built_in">Integer</span>) <span class="keyword">As</span> <span class="built_in">Double</span></span><br><span class="line">    <span class="keyword">Dim</span> F <span class="keyword">As</span> <span class="built_in">Double</span>, i <span class="keyword">As</span> <span class="built_in">Integer</span></span><br><span class="line">    F=<span class="number">1</span></span><br><span class="line">    <span class="keyword">For</span> i=<span class="number">1</span> <span class="keyword">To</span> n</span><br><span class="line">        F=F * i</span><br><span class="line">    <span class="keyword">Next</span> i</span><br><span class="line">    Fact =F</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">function</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command1_Click()</span><br><span class="line">    <span class="keyword">Dim</span> m <span class="keyword">As</span> <span class="built_in">Integer</span>, n <span class="keyword">As</span> <span class="built_in">Integer</span>, c <span class="keyword">As</span> <span class="built_in">Double</span></span><br><span class="line">    m= Val(TextI.<span class="keyword">Text</span>)</span><br><span class="line">    n= Val(Text2.<span class="keyword">Text</span>)</span><br><span class="line">    c=Fact(m)/(Fact(n)*(Fact(m-n)))<span class="comment">'调用Fact</span></span><br><span class="line">    Text3.<span class="keyword">Text</span>= Trim(Str(c))</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">sub</span></span><br></pre></td></tr></tbody></table></figure><ul><li>◆Sub 过程的建立方法与 Function 过程的建立方法相同。</li><li>◆&lt;过程名&gt;不具有值的意义,在 Sub 过程中不能给&lt;过程名&gt;赋<br>值,也不能给&lt;过程名&gt;定义类型。</li><li>◆Sub 过程通过&lt;形参表&gt;中的参数返回值。</li></ul><p><img src="/img/VB/subgclz.png" alt="sub过程"></p><h3 id="5-5-2-参数的传递"><a href="#5-5-2-参数的传递" class="headerlink" title="5.5.2 参数的传递"></a>5.5.2 参数的传递</h3><p><img src="/img/VB/cscd.png" alt="参数传递"></p><h3 id="5-5-3-代码模块"><a href="#5-5-3-代码模块" class="headerlink" title="5.5.3 代码模块"></a>5.5.3 代码模块</h3><p><img src="/img/VB/dmmk.png" alt="代码模块"></p><h4 id="5-5-3-1-窗体模块"><a href="#5-5-3-1-窗体模块" class="headerlink" title="5.5.3.1 窗体模块"></a>5.5.3.1 窗体模块</h4><p>事件过程、通用过程、通用声明</p><h4 id="5-5-3-2-标准模块"><a href="#5-5-3-2-标准模块" class="headerlink" title="5.5.3.2 标准模块"></a>5.5.3.2 标准模块</h4><p><img src="/img/VB/bzmk.png" alt="标准模块"></p><h4 id="5-5-3-3-类模块"><a href="#5-5-3-3-类模块" class="headerlink" title="5.5.3.3 类模块"></a>5.5.3.3 类模块</h4><p>在类模块中编写代码建立新对象</p><h3 id="5-5-4-过程的作用域"><a href="#5-5-4-过程的作用域" class="headerlink" title="5.5.4 过程的作用域"></a>5.5.4 过程的作用域</h3><p><img src="/img/VB/gczyy.png" alt="过程作用域"></p><p><img src="/img/VB/gczyylz.png" alt="过程作用域例子"><br><img src="/img/VB/gczyylz1.png" alt="过程作用域例子"></p><p><img src="/img/VB/gczyysygz.png" alt="过程作用域及使用规则"></p><h2 id="5-6-用户界面设计"><a href="#5-6-用户界面设计" class="headerlink" title="5.6 用户界面设计"></a>5.6 用户界面设计</h2><h3 id="5-6-1-单选按钮和复选框"><a href="#5-6-1-单选按钮和复选框" class="headerlink" title="5.6.1 单选按钮和复选框"></a>5.6.1 单选按钮和复选框</h3><p>单选框只能选一个（Option）<br>复选框可以选多个（Check）<br><code>click动作</code><br><code>check.value = true</code> 则为被选中</p><p><img src="/img/VB/checklz.png" alt="例子"></p><h3 id="5-6-2-框架-Frame"><a href="#5-6-2-框架-Frame" class="headerlink" title="5.6.2 框架 Frame"></a>5.6.2 框架 Frame</h3><p>框架之间可以隔开单选按钮<br><code>fontname</code> <code>fontsize</code> <code>forecolor</code><br>属性</p><h3 id="5-6-3-滚动条"><a href="#5-6-3-滚动条" class="headerlink" title="5.6.3 滚动条"></a>5.6.3 滚动条</h3><p>HScroll Bar 、 VScroll Bar<br>水平、竖直滚动条</p><ul><li>属性<br>MIN 默认 0<br>MAX 默认 32767</li></ul><p>Value ：设置滚动块在滚动条中的位置值<br>Smallchange ：最小变动值属性<br>Largechange ：最大——</p><ul><li>事件<br>Scroll ：当鼠标拖动滚动块时，触发<br>Change ： 当改变 value 值时出发</li></ul><p>eg：在 text 中显示最大最小值</p><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">text1 = HScroll1.Min</span><br><span class="line">text2 = HScroll2.Max</span><br><span class="line">text3 = HScroll3.Value</span><br><span class="line"></span><br><span class="line">HScroll <span class="comment">' 横向</span></span><br><span class="line">VScroll <span class="comment">' 纵向</span></span><br></pre></td></tr></tbody></table></figure><p>RGB 函数：<br>颜色值的取间是 0~255</p><p>随机数 Rnd() 返回小于 1 大于或等于 0 的值<br>Rnd[()]</p><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">sub</span> form_click()</span><br><span class="line">    text1.forecolor = RGB(<span class="number">255</span> * Rnd , <span class="number">255</span> * Rnd , <span class="number">255</span> * Rnd)</span><br><span class="line">    form1.backcolor = RGB(<span class="number">255</span> * Rnd , <span class="number">255</span> * Rnd , <span class="number">255</span> * Rnd)</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">sub</span></span><br></pre></td></tr></tbody></table></figure><p>返回小于 1 但大于或等于 0 的值。 Number 的值决定了 Rnd 生成随机数的方式。<br>在调用 Rnd 之前,先使用无参数的 Randomize 语句初始化随机函数生成器,该<br>生成器具有根据系统计时器得到的种子。<br>如果 number 的值是 Randomize 生成。<br>小于 0,每次都使用 number 作为随机数种子得到相同结果<br>大于 0,以上一个随机数为种子产生下一个随机数;<br>等于 0,产生与最近生成的随机数相同的随机数。<br>省略,以上一个随机数为种子产生下一个随机数<br>例,Int((上限下限+1)*Rnd+下限),生成上限与下限之间的随机整数。</p><h3 id="5-6-4-列表框"><a href="#5-6-4-列表框" class="headerlink" title="5.6.4 列表框"></a>5.6.4 列表框</h3><p>只能在程序中设置的属性：<br>Listindex 执行时选中的列表项的序号<br>Listcount 项目数量 从 0 开始<br>Selected True 表示选中相应的项<br>Text 表示选中列表项文本内容</p><p>Additem ： 增加项<br>Removeitem ： 删除项<br>Clear ： 清除</p><p>属性 style : 1 时为多选框<br>属性 columns: 几列</p><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">List1.AddItem <span class="string">"1"</span></span><br><span class="line">List1.AddItem <span class="string">"2"</span></span><br><span class="line">province = Array(<span class="string">"a"</span>,<span class="string">"b"</span>) <span class="comment">' 一维数组</span></span><br><span class="line"></span><br><span class="line">Province(List1.ListIndex) <span class="comment">'数组中数据</span></span><br><span class="line">List1.List(List.ListIndex) = text1</span><br><span class="line"></span><br><span class="line"><span class="comment">' 判断是否选中</span></span><br><span class="line"><span class="keyword">if</span> list1.selected(i) <span class="keyword">Then</span></span><br></pre></td></tr></tbody></table></figure><h3 id="5-6-5-组合框"><a href="#5-6-5-组合框" class="headerlink" title="5.6.5 组合框"></a>5.6.5 组合框</h3><p>style 属性：<br>0 下拉式<br>1 简单组合框<br>2 下拉式列表框</p><h3 id="5-6-6-驱动器列表框、目录列表框、文件列表框"><a href="#5-6-6-驱动器列表框、目录列表框、文件列表框" class="headerlink" title="5.6.6 驱动器列表框、目录列表框、文件列表框"></a>5.6.6 驱动器列表框、目录列表框、文件列表框</h3><p>DriveListBox<br>DirectoryListBox<br>FileListBox</p><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">case</span> index</span><br><span class="line">    <span class="keyword">case</span> <span class="number">0</span></span><br><span class="line">        语句<span class="number">1</span></span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span></span><br><span class="line">        语句<span class="number">2</span></span><br><span class="line"><span class="keyword">end</span> <span class="keyword">select</span></span><br><span class="line"></span><br><span class="line"><span class="comment">' 打开程序</span></span><br><span class="line">Retval = shell(dir1.path + <span class="string">"\"</span> + file1.filename,<span class="number">1</span>)</span><br><span class="line">Retval = shell(<span class="string">"C:\user\.."</span>,<span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure><h3 id="5-6-7-通用对话框"><a href="#5-6-7-通用对话框" class="headerlink" title="5.6.7 通用对话框"></a>5.6.7 通用对话框</h3><p>打开、另存为、颜色、字体、打印机、帮助<br>工程–部件–Microsoft Comm Dialog Control 6.0 选择通用对话框</p><p><code>对象.Action = 1</code> 打开文件对话框<br><code>对象.ShowOpen</code> 打开文件对话框</p><p><img src="/img/VB/tongyong.png" alt="通用对话框例子"></p><h3 id="5-6-8-菜单设计"><a href="#5-6-8-菜单设计" class="headerlink" title="5.6.8 菜单设计"></a>5.6.8 菜单设计</h3><p>普通的菜单设计<br>工具–菜单编辑器–逐一填写</p><p>弹出菜单<br>对象.PopupMenu 菜单名，标值，x，y<br><code>PopupMenu Cal2,2</code></p><h3 id="5-6-9-多重窗体"><a href="#5-6-9-多重窗体" class="headerlink" title="5.6.9 多重窗体"></a>5.6.9 多重窗体</h3><p>工程–添加窗体–打开<br>load 窗体名称 将窗体装入内存，但不显示<br>unload 窗体名称</p><p>窗体名称.show 显示窗体<br>窗体名称.hide 隐藏窗体<br><code>form2.show</code>显示 form1 窗体</p><h3 id="5-6-10-鼠标-键盘事件"><a href="#5-6-10-鼠标-键盘事件" class="headerlink" title="5.6.10 鼠标/键盘事件"></a>5.6.10 鼠标/键盘事件</h3><p><img src="/img/VB/sbsj.png" alt="鼠标事件"></p><p>键盘事件：KeyPress ， KeyUp ， KeyDown</p><h3 id="5-6-11-对象拖放与-OLE-拖放"><a href="#5-6-11-对象拖放与-OLE-拖放" class="headerlink" title="5.6.11 对象拖放与 OLE 拖放"></a>5.6.11 对象拖放与 OLE 拖放</h3><p>对象拖放：用鼠标将对象从一个地方拖动到另一个地方</p><p>拖放方式属性：DragMode 为 1 自动 0 手动<br>拖放图标属性可以在设计时设置，也可在程序中设置<br><code>控件名.DragIcon = 图像控件.picture</code><br><code>控件名.DragIcon = LoadPicture("C:\Icons\mail.ico")</code></p><p>拖放事件</p><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">sub</span> form_dragdrop(source <span class="keyword">as</span> control , x <span class="keyword">as</span> <span class="built_in">single</span> , y <span class="keyword">as</span> <span class="built_in">single</span>)</span><br><span class="line">    source.move x,y</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">sub</span></span><br></pre></td></tr></tbody></table></figure><p>OLE 拖放 ：将数据从一个控件或应用程序中移动到另一个控件或应用程序。<br><strong>OLEDragMode</strong>属性—决定是自动还是手动实现“拖”操作<br><strong>OLEDropMode</strong>属性—决定是自动还是手动实现“放”操作<br>注:并不是所有的控件都有此二属性,有的只有其一。</p><ul><li>OLEDragDrop 事件—在目标控件上进行“放”操作时发生的事件。</li><li>OLEStartDrag 事件一源控件 OLEDrag 方法被执行或用户做“拖”，操作时发生的事件</li><li>OLEDragOver 事件—在拖动时,经某控件时在该控件上发生的事件</li></ul><h2 id="5-7-Active-X-控件"><a href="#5-7-Active-X-控件" class="headerlink" title="5.7 Active X 控件"></a>5.7 Active X 控件</h2><h3 id="5-7-1-SSTab-选项卡控件"><a href="#5-7-1-SSTab-选项卡控件" class="headerlink" title="5.7.1 SSTab 选项卡控件"></a>5.7.1 SSTab 选项卡控件</h3><p>工程–部件–选中 Microsoft Tabbed Dialog Control 6.0</p><p>style 属性：选项卡样式–0/1：office 风格/windows 风格<br>Tabs 属性：控制控件上选项卡的数目<br>Tab 属性 ：决定控件上当前被选定的项</p><h3 id="5-7-2-ProgressBar-进度条控件"><a href="#5-7-2-ProgressBar-进度条控件" class="headerlink" title="5.7.2 ProgressBar 进度条控件"></a>5.7.2 ProgressBar 进度条控件</h3><p>工程–部件–选中 Microsoft Windows Common Control 6.0</p><p>Max 属性：进度条上限<br>Min 属性：进度条下限<br>Value ：进度值<br>Scrolling ： 卷动方向形式<br>Orientation ： 纵横滚动定位<br>MousePoint ：鼠标指针</p><h3 id="5-7-3-Slide-滑动条控件"><a href="#5-7-3-Slide-滑动条控件" class="headerlink" title="5.7.3 Slide 滑动条控件"></a>5.7.3 Slide 滑动条控件</h3><p>工程–部件–选中 Microsoft Windows Common Control 6.0</p><p>TickStyle ： 决定控件上滑块及刻度的显示样式<br>TickFrequency ： 决定控件上刻度点的疏密<br>ToolTipText：指针停在该控件上时显示提示信息<br>Orientation ：决定控件在窗体上水平或垂直放置</p><h3 id="5-7-4-MS-Chart-控件"><a href="#5-7-4-MS-Chart-控件" class="headerlink" title="5.7.4 MS Chart 控件"></a>5.7.4 MS Chart 控件</h3><p>工程–部件–选中 Microsoft Chart Control 6.0(OLEDB)</p><p>BorderStyle ： 决定图表是否有外框线<br>ColumnCount ： 每一格的列数<br>RowCount ： 每一行的列数<br>ChartType ： 选择图表类型<br>TitleText ： 图题<br>ChartData 返回一个数组，该数组包含将要被该图表显示的值</p><p><code>MSChart1.ChartData = 数组</code></p><p><img src="/img/VB/tubiao.png" alt="图表控件"></p><h3 id="5-7-5-UpDown-控件"><a href="#5-7-5-UpDown-控件" class="headerlink" title="5.7.5 UpDown 控件"></a>5.7.5 UpDown 控件</h3><p>工程–部件–选中 Microsoft Windows Common Control-2 6.0</p><p>一对箭头按钮控件，单击按钮，增减数值<br>UpDown 通常与 Textbox 绑定</p><p>Max/Min 最大值最小值<br>Increment 指定每次单击上箭头或下箭头时 Value 的变化量</p><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">sub</span> updown1_downclick()</span><br><span class="line">    text1.updown1.value</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">sub</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">sub</span> updow n1_upclick()</span><br><span class="line">    text1.updown1.value</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">sub</span></span><br></pre></td></tr></tbody></table></figure><h3 id="5-7-6-ActiveX-控件的创建"><a href="#5-7-6-ActiveX-控件的创建" class="headerlink" title="5.7.6 ActiveX 控件的创建"></a>5.7.6 ActiveX 控件的创建</h3><p>ActiveX 是 Microsoft 对于一系列策略性面向对象程序技术和工具称呼,其中主要的技术是组件对象模型(COM)。</p><p><img src="/img/VB/activex.png" alt="ActiveX的三种表现形式"></p><p>ActiveX 部件：可执行代码：exe、dll、ocx 文件</p><p>ActiveX 控件标准和非标准文件：以 ocx 后缀保存在 Windows\System 目录下<br>ActiveX 控件分为：控件和插入对象 、可插入对象就是一个应用程序，如 MIcrosoft Word</p><p>创造自己的 ActiveX 控件</p><ul><li>启动 VB，打开 ActiveX 控件</li><li>UserControl 对象，为 AX 控件名称，在此进行控件制作</li><li>在代码窗口利用工具中的添加过程，为新的 ActiveX 控件添加共有的属性、时间等</li><li>界面与代码设计好后，在指定目录生成指定的 ocx，完成自制 AX 控件的工作</li><li>另打开 VB，通过增加部件找到所自制的 AX 控件，放在工具箱上即可使用</li></ul><h2 id="5-8-文件"><a href="#5-8-文件" class="headerlink" title="5.8 文件"></a>5.8 文件</h2><p><img src="/img/VB/file.png" alt="基本概念"></p><h3 id="5-8-1-顺序文件"><a href="#5-8-1-顺序文件" class="headerlink" title="5.8.1 顺序文件"></a>5.8.1 顺序文件</h3><p>ASCII 文件，由任何字处理文件建立，在 VB 中建立，只能按顺序存取记录</p><p>打开文件–读或写文件–关闭文件</p><h4 id="5-8-1-1-顺序文件打开"><a href="#5-8-1-1-顺序文件打开" class="headerlink" title="5.8.1.1 顺序文件打开"></a>5.8.1.1 顺序文件打开</h4><p>格式 Open &lt;文件名&gt; for 方式 as [#]&lt;文件号&gt;</p><p>Input 只读 / Output 写 / Append 添加方式</p><p>文件号 1 到 511 之间的整数</p><p><code>opnn "C:\Data\Stud.dat" For Output As #1</code></p><h4 id="5-8-1-2-顺序文件关闭"><a href="#5-8-1-2-顺序文件关闭" class="headerlink" title="5.8.1.2 顺序文件关闭"></a>5.8.1.2 顺序文件关闭</h4><p>Close 文件号列表</p><p><code>Close #1</code><br><code>Close #1,2,#8</code><br><code>Close</code> 关闭所有</p><h4 id="5-8-1-3-顺序文件的读写"><a href="#5-8-1-3-顺序文件的读写" class="headerlink" title="5.8.1.3 顺序文件的读写"></a>5.8.1.3 顺序文件的读写</h4><p><strong>① 写</strong></p><ol><li>Write #文件号,[输出列表]</li></ol><p><code>Write #1,A1,A2,A3</code></p><p>说明</p><ul><li>&lt;输出列表&gt;中各项之间要用逗号分开</li><li>&lt;输出列表&gt;每一项可以是常量、变量或表达式</li><li>写到文件中的各数据间自动插入逗号,字符串自动加上双引号</li><li>所有数据写完后,在最后加入一个回车换行符</li><li>不含&lt;输出列表&gt;时,将在文件中写入一空行</li></ul><p><strong>学号、姓名、成绩 1、2</strong>保存到文件中</p><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Option</span> <span class="keyword">Explicit</span></span><br><span class="line">Dim no, na, g1, g2 As Variant</span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command1_Click()</span><br><span class="line">    no = Text1.<span class="keyword">Text</span>: na = Text2.<span class="keyword">Text</span></span><br><span class="line">    g1 = Val(Text3.<span class="keyword">Text</span>): g2 = Val(Text4.<span class="keyword">Text</span>)</span><br><span class="line">    Write <span class="meta">#2, no, na, g1, g2</span></span><br><span class="line">    Text1.<span class="keyword">Text</span> = <span class="string">""</span>: Text2.<span class="keyword">Text</span> = <span class="string">""</span>: Text3.<span class="keyword">Text</span> = <span class="string">""</span>: Text4.<span class="keyword">Text</span> = <span class="string">""</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command2_Click()</span><br><span class="line">    Close <span class="meta">#2</span></span><br><span class="line">    <span class="keyword">End</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Form_Load()</span><br><span class="line">    CommonDialog1.ShowSave</span><br><span class="line">    Open CommonDialog1.FileName <span class="keyword">For</span> Append <span class="keyword">As</span> <span class="meta">#2</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></tbody></table></figure><ol start="2"><li>print #文件号，输出列表</li></ol><p><code>print #2, no ,na, g1, g2</code><br><code>print #2, no; na; g1; g2</code></p><p>将输出列表中的内容写入指定文件<br>说明</p><ul><li>当&lt;输出列表&gt;用逗号分隔时,采用分区格式输出</li><li>当&lt;输出列表&gt;用分号分隔时,采用紧凑格式输出</li><li>所有项将在一行内输出,输出后将自动换行</li><li>可以使用 Spc()函数和 Tab()函数</li></ul><p><img src="/img/VB/writeprint.png" alt="两者区别"></p><p><strong>② 读</strong></p><ol><li>input #文件号,变量列表</li><li>Line input #文件号，变量名</li><li>eof(文件号) 函数</li></ol><p><strong>读取文件中的程序，计算平均成绩</strong></p><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Option</span> <span class="keyword">Explicit</span></span><br><span class="line"><span class="keyword">Dim</span> num, nam, s1, s2, ave</span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command1_Click()</span><br><span class="line">    CommonDialog1.ShowOpen</span><br><span class="line">    Open CommonDialog1.FileName <span class="keyword">For</span> Input <span class="keyword">As</span> <span class="meta">#3</span></span><br><span class="line">    Text1.<span class="keyword">Text</span> = <span class="string">""</span></span><br><span class="line">    <span class="keyword">Do</span> <span class="keyword">While</span> <span class="keyword">Not</span> EOF(<span class="number">3</span>)</span><br><span class="line">   <span class="comment">' 装入用Wite# 语句生成的文件</span></span><br><span class="line">        Input <span class="meta">#3, num, nam, s1, s2</span></span><br><span class="line">        ave = (s1 + s2) / <span class="number">2</span></span><br><span class="line">        Text1.<span class="keyword">Text</span> = Text1.<span class="keyword">Text</span> &amp; num &amp; <span class="string">"   "</span> &amp; nam _</span><br><span class="line">                        &amp; <span class="string">"   "</span> &amp; Str(s1) &amp; <span class="string">"    "</span> &amp; Str(s2) &amp; _</span><br><span class="line">                        <span class="string">"  "</span> &amp; Str(ave) &amp; Chr(<span class="number">13</span>) &amp; Chr(<span class="number">10</span>)</span><br><span class="line">    <span class="keyword">Loop</span></span><br><span class="line">    Close <span class="meta">#3</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></tbody></table></figure><p><strong>计算每个同学的平均成绩，并同时将结果与原数据保存到另一个文件</strong></p><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Option</span> <span class="keyword">Explicit</span></span><br><span class="line"><span class="keyword">Dim</span> num(<span class="number">100</span>) <span class="keyword">As</span> <span class="built_in">String</span>, nam(<span class="number">100</span>) <span class="keyword">As</span> <span class="built_in">String</span></span><br><span class="line"><span class="keyword">Dim</span> g(<span class="number">100</span>, <span class="number">2</span>) <span class="keyword">As</span> <span class="built_in">Integer</span>, n <span class="keyword">As</span> <span class="built_in">Integer</span>, ave, sum1, sum2, i</span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command1_Click()</span><br><span class="line">    CommonDialog1.ShowOpen</span><br><span class="line">    Open CommonDialog1.FileName <span class="keyword">For</span> Input <span class="keyword">As</span> <span class="meta">#3</span></span><br><span class="line">        n = <span class="number">0</span></span><br><span class="line">        <span class="keyword">Do</span> <span class="keyword">While</span> <span class="keyword">Not</span> EOF(<span class="number">3</span>)</span><br><span class="line">            n = n + <span class="number">1</span></span><br><span class="line">            Input <span class="meta">#3, num(n), nam(n), g(n, 1), g(n, 2)</span></span><br><span class="line">        Text1.<span class="keyword">Text</span> = Text1.<span class="keyword">Text</span> &amp; <span class="string">"   "</span> &amp; num(n) &amp; _</span><br><span class="line">        <span class="string">"   "</span> &amp; nam(n) &amp; <span class="string">"    "</span> &amp; Str(g(n, <span class="number">1</span>)) &amp; _</span><br><span class="line">        <span class="string">"   "</span> &amp; Str(g(n, <span class="number">2</span>)) &amp; <span class="string">"    "</span> &amp; Chr(<span class="number">13</span>) &amp; Chr(<span class="number">10</span>)</span><br><span class="line">        <span class="keyword">Loop</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command2_Click()</span><br><span class="line">    CommonDialog1.ShowSave</span><br><span class="line">    Open CommonDialog1.FileName <span class="keyword">For</span> Output <span class="keyword">As</span> <span class="meta">#4</span></span><br><span class="line">    sum1 = <span class="number">0</span></span><br><span class="line">    sum2 = <span class="number">0</span></span><br><span class="line">    Text2.<span class="keyword">Text</span> = <span class="string">""</span></span><br><span class="line">    <span class="keyword">For</span> i = <span class="number">1</span> <span class="keyword">To</span> n</span><br><span class="line">        ave = (g(i, <span class="number">1</span>) + g(i, <span class="number">2</span>)) / <span class="number">2</span></span><br><span class="line">        Write <span class="meta">#4, num(i), nam(i), g(i, 1), g(i, 2), ave</span></span><br><span class="line">        Text2.<span class="keyword">Text</span> = Text2.<span class="keyword">Text</span> &amp; <span class="string">"   "</span> &amp; num(i) &amp; _</span><br><span class="line">        <span class="string">"   "</span> &amp; nam(i) &amp; <span class="string">"   "</span> &amp; Str(g(i, <span class="number">1</span>)) &amp; <span class="string">"   "</span> &amp; _</span><br><span class="line">        Str(g(i, <span class="number">2</span>)) &amp; <span class="string">"   "</span> &amp; Str(ave) &amp; vbCrLf</span><br><span class="line">        sum1 = sum1 + g(i, <span class="number">1</span>): sum2 = sum2 + g(i, <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">Next</span> i</span><br><span class="line">    Text2.<span class="keyword">Text</span> = Text2.<span class="keyword">Text</span> &amp; <span class="string">"average"</span> &amp; <span class="string">" "</span> &amp; _</span><br><span class="line">    Str(sum1 / n) &amp; <span class="string">"   "</span> &amp; Str(sum2 / n)</span><br><span class="line">    Write <span class="meta">#4, "总平均", sum1 / n, sum2 / n</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command3_Click()</span><br><span class="line">    Close <span class="meta">#3, #4</span></span><br><span class="line">    <span class="keyword">End</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></tbody></table></figure><h3 id="5-8-2-随机文件"><a href="#5-8-2-随机文件" class="headerlink" title="5.8.2 随机文件"></a>5.8.2 随机文件</h3><p>读写次序任意，记录长度相等，随机文件中的记录常定义为用户自定义类型</p><p><strong>自定义数据类型操作</strong></p><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span>/<span class="keyword">public</span> type 自定义类型名</span><br><span class="line">    元素名 下标 <span class="keyword">as</span> 类型</span><br><span class="line"><span class="keyword">end</span> type</span><br></pre></td></tr></tbody></table></figure><p><img src="/img/VB/sjwjsm1.png" alt=""><br><img src="/img/VB/sjwjsm2.png" alt="说明"></p><p><img src="/img/VB/sjwjex.png" alt="例子"><br><img src="/img/VB/sjwjex1.png" alt="例子"></p><h4 id="5-8-2-1-随机文件打开"><a href="#5-8-2-1-随机文件打开" class="headerlink" title="5.8.2.1 随机文件打开"></a>5.8.2.1 随机文件打开</h4><p><code>open 文件名 [for random] as 文件号 len= 记录长度</code><br>for random 可以省略<br>记录长度：就是自定义类型的大小，可以用 len 获得<br>若文件不存在，则建立新的文件</p><h4 id="5-8-2-2-随机文件关闭"><a href="#5-8-2-2-随机文件关闭" class="headerlink" title="5.8.2.2 随机文件关闭"></a>5.8.2.2 随机文件关闭</h4><p><code>close #2</code></p><h4 id="5-8-2-3-随机文件写"><a href="#5-8-2-3-随机文件写" class="headerlink" title="5.8.2.3 随机文件写"></a>5.8.2.3 随机文件写</h4><p><code>put 文件号，记录号，变量名</code></p><p><img src="/img/VB/sjwjxie.png" alt="写文件"></p><h4 id="5-8-2-4-随机文件读"><a href="#5-8-2-4-随机文件读" class="headerlink" title="5.8.2.4 随机文件读"></a>5.8.2.4 随机文件读</h4><p><code>get #文件号， 记录号， 变量名</code><br>功能： 将一个一打开的随机文件读入一个变量之中</p><p><img src="/img/VB/sjwjdxex0.png" alt="例子"></p><p><img src="/img/VB/sjwjdxex.png" alt="例子"><br><img src="/img/VB/sjwjdxex1.png" alt="例子"></p><h3 id="5-8-3-总结"><a href="#5-8-3-总结" class="headerlink" title="5.8.3 总结"></a>5.8.3 总结</h3><p><img src="/img/VB/filezongjie.png" alt="文件操作总结"></p><p>开闭 写读</p><ul><li>open 语句</li><li>close 语句</li><li>write\print 语句</li><li>input\line input 语句 ， input 函数</li></ul><hr><ul><li>open 语句</li><li>close 语句</li><li>put 语句</li><li>get 语句</li></ul><h2 id="5-9-绘图"><a href="#5-9-绘图" class="headerlink" title="5.9 绘图"></a>5.9 绘图</h2><h3 id="5-9-1-图形设计基础"><a href="#5-9-1-图形设计基础" class="headerlink" title="5.9.1 图形设计基础"></a>5.9.1 图形设计基础</h3><h4 id="5-9-1-1-坐标系统"><a href="#5-9-1-1-坐标系统" class="headerlink" title="5.9.1.1 坐标系统"></a>5.9.1.1 坐标系统</h4><p>左上角（0，0）横向 x，纵向 y</p><ol><li>刻度单位</li></ol><p><img src="/img/VB/kddw.png" alt="刻度单位"></p><ol start="2"><li>改变坐标系</li></ol><p><strong>自定义坐标体系</strong></p><p><img src="/img/VB/zdyzbx.png" alt="自定义坐标体系"></p><p><code>ScaleLeft</code> <code>ScaleTop</code>属性 ， 窗体左边的坐标，上边的坐标</p><p><code>ScaleWidth</code> <code>ScaleHeight</code>属性 ，容器对象内部的宽度和高度，将</p><p><img src="/img/VB/zbxex1.png" alt="例子"></p><p><img src="/img/VB/zbxex2.png" alt="例子"></p><p><img src="/img/VB/zbxex3.png" alt="例子"></p><p>Scale 方法：<br><code>对象名.Scale[(x1,y1)-(x2,y2)]</code></p><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> picture1_click()</span><br><span class="line">    <span class="keyword">dim</span> a(<span class="number">5</span>,<span class="number">5</span>) <span class="keyword">as</span> <span class="built_in">integer</span>, i <span class="keyword">as</span> <span class="built_in">integer</span> , j <span class="keyword">as</span> <span class="built_in">integer</span></span><br><span class="line">    picture1.scale (<span class="number">0</span>,<span class="number">0</span>)-(<span class="number">6</span>,<span class="number">6</span>)</span><br><span class="line">    <span class="keyword">for</span> i=<span class="number">1</span> <span class="keyword">to</span> <span class="number">5</span></span><br><span class="line">        picture1.currenty = i</span><br><span class="line">        <span class="keyword">for</span> j=<span class="number">1</span> <span class="keyword">to</span> <span class="number">5</span></span><br><span class="line">            <span class="keyword">if</span> i = j <span class="keyword">then</span> a(i,j) = <span class="number">1</span> <span class="keyword">else</span> a(i,j) = <span class="number">0</span></span><br><span class="line">            picture1.currentx = j</span><br><span class="line">            picture1.print a(i,j);</span><br><span class="line">    <span class="keyword">next</span> j,i</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">sub</span></span><br></pre></td></tr></tbody></table></figure><p><img src="/img/VB/scale.png" alt="例子"></p><ol start="3"><li>当前坐标</li></ol><p><code>currentx</code> <code>currenty</code></p><ol start="4"><li>位置大小相关属性</li></ol><p><img src="/img/VB/wzdxxg.png" alt="例子"></p><h4 id="5-9-1-2-颜色"><a href="#5-9-1-2-颜色" class="headerlink" title="5.9.1.2 颜色"></a>5.9.1.2 颜色</h4><p>颜色值：四字节，长整型<br>RGB    每个字节取值：00-FF （或0-255）</p><ol><li>设计阶段设置</li><li>运行阶段设置</li></ol><p>RGB函数：<code>RGB(red,green,blue)</code><br>eg:<code>form1.backcolor = RGB(255,0,0)</code></p><p>或者</p><p>QBColor函数： <code>QbColor(value)</code><br>value ： 0-7颜色加亮、 8-15<br>0黑1蓝2绿3青4红5紫红6黄7浅灰色</p><p>或者</p><p>使用颜色常量<br><code>vbblack</code> <code>vbred</code> <code>vbgreen</code> <code>vbyellow</code> <code>vbwhite</code><br><code>vbblue</code>  <code>vbmagenta洋红</code> <code>vbcyan青色</code> </p><p>或者</p><p>使用颜色的十六进制 <code>&amp;H00BBGGRR&amp;</code></p><p>使用系统颜色 <code>vbscrollbars &amp;H80000000</code>滚动条颜色</p><h3 id="5-9-2-图形控件"><a href="#5-9-2-图形控件" class="headerlink" title="5.9.2 图形控件"></a>5.9.2 图形控件</h3><h4 id="5-9-2-1-Picture控件"><a href="#5-9-2-1-Picture控件" class="headerlink" title="5.9.2.1 Picture控件"></a>5.9.2.1 Picture控件</h4><p>可以显示图片，可以作为其他控件的容器</p><ul><li>设计阶段</li><li>程序运行中：<code>LoadPicture()</code></li></ul><p><code>Autosize</code>为True时 自动调整大小与显示的图片匹配</p><h4 id="5-9-2-2-Image控件"><a href="#5-9-2-2-Image控件" class="headerlink" title="5.9.2.2 Image控件"></a>5.9.2.2 Image控件</h4><p>可以显示图像，内存占用小<br>Stretch属性 拉伸位图和图标，适应图像框的大小</p><h4 id="5-9-2-3-Shape控件"><a href="#5-9-2-3-Shape控件" class="headerlink" title="5.9.2.3 Shape控件"></a>5.9.2.3 Shape控件</h4><p>属性：Shape、FillStyle、BackColor、FillColor等属性</p><p>方法：<code>object.Move left[,top[,width[,height]]]</code></p><p><img src="/img/VB/shapeex.png" alt="例子"></p><h4 id="5-9-2-4-Line控件"><a href="#5-9-2-4-Line控件" class="headerlink" title="5.9.2.4 Line控件"></a>5.9.2.4 Line控件</h4><p>设计时再窗体上绘制直线</p><p><code>BorderStyle</code> 、 <code>BorderWidth</code></p><h3 id="5-9-3-绘图方法"><a href="#5-9-3-绘图方法" class="headerlink" title="5.9.3 绘图方法"></a>5.9.3 绘图方法</h3><p><img src="/img/VB/htff.png" alt="绘图方法"></p><h4 id="5-9-3-1-画点方法Pset"><a href="#5-9-3-1-画点方法Pset" class="headerlink" title="5.9.3.1 画点方法Pset"></a>5.9.3.1 画点方法Pset</h4><p><code>对象名.Pset[step](x,y)[,颜色]</code><br>在对象指定位置，用给定的颜色画点</p><ul><li>Step 可选，指定相对于又currentx和y 属性提供的坐标</li><li>x，y 点的水平和垂直坐标</li><li>颜色 绘制该店的RGB颜色</li></ul><p><img src="/img/VB/psetex.png" alt="例子1"></p><p><img src="/img/VB/psetex1.png" alt="例子2"><br><img src="/img/VB/psetex2.png" alt="例子2"></p><h4 id="5-9-3-2-画线、画矩形Line"><a href="#5-9-3-2-画线、画矩形Line" class="headerlink" title="5.9.3.2 画线、画矩形Line"></a>5.9.3.2 画线、画矩形Line</h4><p><code>对象名.Line[step][(x1,y1)]-[step]\(x2,y2)[,color[,B[F]]]</code></p><p><img src="/img/VB/line.png" alt="Line"></p><p><img src="/img/VB/lineex1.png" alt="例子1"></p><p><img src="/img/VB/lineex2.png" alt="例子2"></p><p><img src="/img/VB/lineex3.png" alt="例子3"><br><img src="/img/VB/lineex4.png" alt="例子3"></p><h4 id="5-9-3-3-画圆-Circle"><a href="#5-9-3-3-画圆-Circle" class="headerlink" title="5.9.3.3 画圆 Circle"></a>5.9.3.3 画圆 Circle</h4><p><img src="/img/VB/circle.png" alt="画圆"></p><p><img src="/img/VB/circleex.png" alt="画圆例子"></p><p><img src="/img/VB/circleex1.png" alt="画圆例子1"><br><img src="/img/VB/circleex2.png" alt="画圆例子1"></p><h4 id="5-9-3-4-使用point方法返回指定点的颜色"><a href="#5-9-3-4-使用point方法返回指定点的颜色" class="headerlink" title="5.9.3.4 使用point方法返回指定点的颜色"></a>5.9.3.4 使用point方法返回指定点的颜色</h4><p><img src="/img/VB/pointex.png" alt="Point例子"></p><h2 id="5-10-高级界面设计"><a href="#5-10-高级界面设计" class="headerlink" title="5.10 高级界面设计"></a>5.10 高级界面设计</h2><h3 id="5-10-1-多文档界面MDI"><a href="#5-10-1-多文档界面MDI" class="headerlink" title="5.10.1 多文档界面MDI"></a>5.10.1 多文档界面MDI</h3><p><img src="/img/VB/mdi.png" alt="MDI"></p><h2 id="5-11-开发多媒体应用程序"><a href="#5-11-开发多媒体应用程序" class="headerlink" title="5.11 开发多媒体应用程序"></a>5.11 开发多媒体应用程序</h2><p>概述：MMControl控件<br><strong>播放动作的5个步骤</strong></p><ul><li>选择播放设备 DeviceType</li><li>选择播放文件名 FileName</li><li>打开文件 Open</li><li>播放文件 Play</li><li>关闭 Close</li></ul><p><img src="/img/VB/mci.png" alt="MCI控件"></p><p><strong>MM控件的主要属性和事件</strong></p><p><img src="/img/VB/mmcontrol.png" alt="MMControl"></p><p><img src="/img/VB/mmccommand.png" alt="MMCommand"></p><p><img src="/img/VB/mmcothers.png" alt="其他属性"></p><p><img src="/img/VB/mmcmake.png" alt="制作播放器1"></p><p><img src="/img/VB/mmcmake2.png" alt="制作播放器2"></p><p><img src="/img/VB/api.png" alt="使用API多媒体函数实现播放"></p><p><img src="/img/VB/apiuse.png" alt="使用API多媒体函数实现播放"></p><p><img src="/img/VB/apiuse2.png" alt="使用API多媒体函数实现播放"></p><p><img src="/img/VB/apiuse3.png" alt="使用API多媒体函数实现播放"></p><p><em>直接搜API浏览器，打开文件，然后选择需要的函数，拷贝</em></p><p><strong>拷贝内容</strong></p><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Private</span> <span class="keyword">Declare</span> <span class="keyword">Function</span> sndPlaySound <span class="keyword">Lib</span> <span class="string">"winmm.dll"</span> <span class="keyword">Alias</span> <span class="string">"sndPlaySoundA"</span> (<span class="keyword">ByVal</span> lpszSoundName <span class="keyword">As</span> <span class="built_in">String</span>, <span class="keyword">ByVal</span> uFlags <span class="keyword">As</span> <span class="built_in">Long</span>) <span class="keyword">As</span> <span class="built_in">Long</span></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Const</span> SND_ASYNC = &amp;H1         <span class="comment">'  play asynchronously</span></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Const</span> SND_LOOP = &amp;H8         <span class="comment">'  loop the sound until next sndPlaySound</span></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Const</span> SND_SYNC = &amp;H0         <span class="comment">'  play synchronously (default)</span></span><br></pre></td></tr></tbody></table></figure><p><img src="/img/VB/apiex.png" alt="使用API多媒体函数实现播放例子"></p><p><img src="/img/VB/apiex1.png" alt="使用API多媒体函数实现播放例子"></p><p><img src="/img/VB/apiex2.png" alt="使用API多媒体函数实现播放例子"></p><h2 id="5-12-数据库访问技术"><a href="#5-12-数据库访问技术" class="headerlink" title="5.12 数据库访问技术"></a>5.12 数据库访问技术</h2><p><img src="/img/VB/sjk.png" alt="数据库概念"></p><p><strong>数据库管理系统</strong><br>有：Access Interbase SQLServer DB2 MySql 等等</p><h3 id="5-12-1-关系型数据库"><a href="#5-12-1-关系型数据库" class="headerlink" title="5.12.1 关系型数据库"></a>5.12.1 关系型数据库</h3><p>表、记录与字段、关键字、表间关系、外部键、索引</p><p><img src="/img/VB/gxxsjk.png" alt="关系型数据库概念"></p><p><img src="/img/VB/gxxsjk1.png" alt="关系型数据库字段、记录、关键字"></p><p><img src="/img/VB/gxxsjk2.png" alt="关系型数据库表间关系"></p><p><img src="/img/VB/gxxsjk3.png" alt="关系型数据库外部键、索引"></p><h3 id="5-12-2-用可视化数据管理器建立和维护数据库"><a href="#5-12-2-用可视化数据管理器建立和维护数据库" class="headerlink" title="5.12.2 用可视化数据管理器建立和维护数据库"></a>5.12.2 用可视化数据管理器建立和维护数据库</h3><p><img src="/img/VB/kshsjglq.png" alt="可视化数据管理器"></p><p><img src="/img/VB/kshsjglq1.png" alt="可视化数据管理器"></p><p><img src="/img/VB/kshsjglq2.png" alt="可视化数据管理器"></p><p><img src="/img/VB/kshsjglq3.png" alt="可视化数据管理器"></p><p><img src="/img/VB/kshsjglq4.png" alt="可视化数据管理器"></p><p><img src="/img/VB/kshsjglq5.png" alt="可视化数据管理器"></p><p><img src="/img/VB/kshsjglq6.png" alt="可视化数据管理器"></p><p><img src="/img/VB/kshsjglq7.png" alt="可视化数据管理器"></p><p><img src="/img/VB/kshsjglq8.png" alt="可视化数据管理器"></p><p><img src="/img/VB/kshsjglq9.png" alt="可视化数据管理器"></p><h2 id="5-13-总复习"><a href="#5-13-总复习" class="headerlink" title="5.13 总复习"></a>5.13 总复习</h2><h3 id="5-13-1-同心圆"><a href="#5-13-1-同心圆" class="headerlink" title="5.13.1 同心圆"></a>5.13.1 同心圆</h3><p><img src="/img/VB/txy.png" alt="案例1"><br><img src="/img/VB/txy2.png" alt="案例1"></p><h3 id="5-13-2-两圆转动"><a href="#5-13-2-两圆转动" class="headerlink" title="5.13.2 两圆转动"></a>5.13.2 两圆转动</h3><p><img src="/img/VB/yzyd.png" alt="案例2"><br><img src="/img/VB/yzyd2.png" alt="案例2"></p><h3 id="5-13-3-密码输入，文本框飘动"><a href="#5-13-3-密码输入，文本框飘动" class="headerlink" title="5.13.3 密码输入，文本框飘动"></a>5.13.3 密码输入，文本框飘动</h3><p><img src="/img/VB/mimayd.png" alt="案例3"></p><h3 id="5-13-4-网络连接计时"><a href="#5-13-4-网络连接计时" class="headerlink" title="5.13.4 网络连接计时"></a>5.13.4 网络连接计时</h3><p><img src="/img/VB/wlljjs.png" alt="案例4"><br><img src="/img/VB/wlljjs2.png" alt="案例4"></p><h1 id="6-课程学习过程中练习"><a href="#6-课程学习过程中练习" class="headerlink" title="6. 课程学习过程中练习"></a>6. 课程学习过程中练习</h1><p>第几次课.第几道练习</p><h2 id="2-1-勾选要求变量声明（初学）"><a href="#2-1-勾选要求变量声明（初学）" class="headerlink" title="2.1 勾选要求变量声明（初学）"></a>2.1 勾选要求变量声明（初学）</h2><p>然后每次使用必须先定义变量</p><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Option</span> <span class="keyword">Explicit</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command1_Click()</span><br><span class="line">    <span class="keyword">Dim</span> B <span class="keyword">As</span> <span class="built_in">Integer</span>, A <span class="keyword">As</span> <span class="built_in">Integer</span></span><br><span class="line">    B = <span class="number">10</span></span><br><span class="line">    A = A + B</span><br><span class="line">    Print B, A</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="comment">'10 10</span></span><br><span class="line"><span class="comment">'10 10</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Option</span> <span class="keyword">Explicit</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command1_Click()</span><br><span class="line">    <span class="keyword">Static</span> B <span class="keyword">As</span> <span class="built_in">Integer</span>, A <span class="keyword">As</span> <span class="built_in">Integer</span>     <span class="comment">'静态变量</span></span><br><span class="line">    B = <span class="number">10</span></span><br><span class="line">    A = A + B</span><br><span class="line">    Print B, A</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="comment">'10 10</span></span><br><span class="line"><span class="comment">'10 20</span></span><br><span class="line"><span class="comment">'10 30</span></span><br></pre></td></tr></tbody></table></figure><p>Dim 和 Static 都是局部变量可以将其拉到窗体级全局变量</p><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Option</span> <span class="keyword">Explicit</span></span><br><span class="line">    <span class="keyword">Dim</span> B <span class="keyword">As</span> <span class="built_in">Integer</span>, A <span class="keyword">As</span> <span class="built_in">Integer</span></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command1_Click()</span><br><span class="line"></span><br><span class="line">    B = <span class="number">10</span></span><br><span class="line">    A = A + B</span><br><span class="line">    Print B, A</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command2_Click()</span><br><span class="line">    Print B, A</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></tbody></table></figure><h2 id="2-2-字符判断"><a href="#2-2-字符判断" class="headerlink" title="2.2 字符判断"></a>2.2 字符判断</h2><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Text1_Change()</span><br><span class="line">    <span class="keyword">If</span> <span class="keyword">Not</span> IsNumeric(Text1) <span class="keyword">Then</span></span><br><span class="line">        MsgBox <span class="string">"Text1 输入非法数字，请重新输入"</span></span><br><span class="line">        Text1.<span class="keyword">Text</span> = <span class="string">""</span></span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></tbody></table></figure><h2 id="2-3-inputbox-amp-keypress"><a href="#2-3-inputbox-amp-keypress" class="headerlink" title="2.3 inputbox &amp; keypress"></a>2.3 inputbox &amp; keypress</h2><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Option</span> <span class="keyword">Explicit</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Label2_Click()</span><br><span class="line">    Text3 = Val(Text1) + Val(Text2)</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Text1_KeyPress(KeyAscii <span class="keyword">As</span> <span class="built_in">Integer</span>)</span><br><span class="line">    <span class="keyword">If</span> KeyAscii = <span class="number">13</span> <span class="keyword">Then</span> Text2 = InputBox(<span class="string">"请输入"</span>)</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Text3_GotFocus()</span><br><span class="line">    Text1 = <span class="string">""</span></span><br><span class="line">    Text2 = <span class="string">""</span></span><br><span class="line">    Text3 = <span class="string">""</span></span><br><span class="line">    Text1.SetFocus</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></tbody></table></figure><h2 id="3-1-DIY"><a href="#3-1-DIY" class="headerlink" title="3.1 DIY"></a>3.1 DIY</h2><p><strong>换行 text 的 multline 属性要为 true</strong><br><code>chr(13) + chr(10)</code><br><code>vbcrlf</code></p><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Option</span> <span class="keyword">Explicit</span></span><br><span class="line"><span class="keyword">Dim</span> ID <span class="keyword">As</span> <span class="built_in">Boolean</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command1_Click()</span><br><span class="line">    ID = <span class="literal">True</span></span><br><span class="line">    Timer1.Interval = <span class="number">600</span></span><br><span class="line">    Text1 = <span class="string">"DIY"</span> + Chr(<span class="number">13</span>) + Chr(<span class="number">10</span>) + <span class="string">"程序设计"</span>  <span class="comment">'回车换行</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command2_Click()</span><br><span class="line">    ID = <span class="literal">False</span></span><br><span class="line">    Text1.Alignment = <span class="number">0</span> <span class="comment">'居左</span></span><br><span class="line">    Text1.FontSize = <span class="number">50</span></span><br><span class="line">    Text1 = <span class="string">"1111"</span> &amp; vbCrLf _</span><br><span class="line">    &amp; <span class="string">"fads"</span> + vbCrLf _</span><br><span class="line">    &amp; <span class="string">"7777"</span> + Chr(<span class="number">13</span>) + Chr(<span class="number">10</span>)  <span class="comment">'回车加换行</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Timer1_Timer()</span><br><span class="line">    <span class="keyword">Dim</span> A <span class="keyword">As</span> <span class="built_in">Integer</span></span><br><span class="line">    Randomize</span><br><span class="line">    A = Rnd * <span class="number">4</span>      <span class="comment">'rnd 0-1</span></span><br><span class="line">    Text1.ForeColor = RGB(Rnd * <span class="number">250</span>, Rnd * <span class="number">250</span>, Rnd * <span class="number">250</span>)</span><br><span class="line">    <span class="keyword">If</span> ID <span class="keyword">Then</span></span><br><span class="line">        Text1.FontSize = Rnd * <span class="number">260</span></span><br><span class="line">        Text1.FontBold = <span class="literal">True</span>   <span class="comment">'粗体字</span></span><br><span class="line">        <span class="keyword">Select</span> <span class="keyword">Case</span> A</span><br><span class="line">        <span class="keyword">Case</span> <span class="number">0</span></span><br><span class="line">            Text1.FontName = <span class="string">"隶书"</span></span><br><span class="line">            Text1.Alignment = <span class="number">0</span></span><br><span class="line">        <span class="keyword">Case</span> <span class="number">1</span></span><br><span class="line">            Text1.FontName = <span class="string">"黑体"</span></span><br><span class="line">            Text1.Alignment = <span class="number">1</span></span><br><span class="line">        <span class="keyword">Case</span> <span class="number">2</span></span><br><span class="line">            Text1.FontName = <span class="string">"楷体"</span></span><br><span class="line">            Text1.Alignment = <span class="number">2</span></span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">Select</span></span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></tbody></table></figure><h2 id="3-2-for"><a href="#3-2-for" class="headerlink" title="3.2 for"></a>3.2 for</h2><p><code>cls</code>清屏</p><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Option</span> <span class="keyword">Explicit</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command1_Click()</span><br><span class="line">    <span class="keyword">Dim</span> i <span class="keyword">As</span> <span class="built_in">Integer</span>, j <span class="keyword">As</span> <span class="built_in">Integer</span></span><br><span class="line">    <span class="keyword">For</span> i = <span class="number">1</span> <span class="keyword">To</span> <span class="number">3</span></span><br><span class="line">        <span class="keyword">For</span> j = <span class="number">5</span> <span class="keyword">To</span> <span class="number">7</span></span><br><span class="line">            Print i, j</span><br><span class="line">        <span class="keyword">Next</span> j</span><br><span class="line">        Print <span class="string">"---------"</span></span><br><span class="line">    <span class="keyword">Next</span> i</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command2_Click()</span><br><span class="line">    <span class="keyword">Dim</span> a       <span class="comment">'必须用变体</span></span><br><span class="line">    <span class="keyword">For</span> <span class="keyword">Each</span> a <span class="keyword">In</span> Form1.Controls</span><br><span class="line">        a.BackColor = vbRed</span><br><span class="line">    <span class="keyword">Next</span> a</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command3_Click()</span><br><span class="line">    Cls</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></tbody></table></figure><h2 id="3-3-for-与-if-可以互换"><a href="#3-3-for-与-if-可以互换" class="headerlink" title="3.3 for 与 if 可以互换"></a>3.3 for 与 if 可以互换</h2><p><code>goto 111</code></p><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Option</span> <span class="keyword">Explicit</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command1_Click()</span><br><span class="line">    <span class="comment">'Dim i As Integer, s As Integer</span></span><br><span class="line">    <span class="keyword">Dim</span> i, a, j, b</span><br><span class="line">    <span class="keyword">For</span> i = <span class="number">0</span> <span class="keyword">To</span> <span class="number">100</span></span><br><span class="line">        a = a + i</span><br><span class="line">    <span class="keyword">Next</span> i</span><br><span class="line"><span class="number">111</span> <span class="keyword">If</span> j &lt;= <span class="number">100</span> <span class="keyword">Then</span></span><br><span class="line">        b = b + j</span><br><span class="line">        j = j + <span class="number">1</span></span><br><span class="line">        <span class="keyword">GoTo</span> <span class="number">111</span></span><br><span class="line">    E</span><br><span class="line">    Print a</span><br><span class="line">    Print b</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></tbody></table></figure><h2 id="4-1-求积"><a href="#4-1-求积" class="headerlink" title="4.1 求积"></a>4.1 求积</h2><p><img src="/img/VB/kclx4_1.png" alt="例子"></p><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Form DblClick</span><br><span class="line">    <span class="keyword">Dim</span> a (<span class="number">1</span> <span class="keyword">To</span> <span class="number">5</span>) <span class="keyword">As</span> <span class="built_in">integer</span>, b (<span class="number">3</span> <span class="keyword">To</span> <span class="number">8</span>)<span class="keyword">As</span> <span class="built_in">Integer</span></span><br><span class="line">    <span class="keyword">Dim</span> i <span class="keyword">As</span> <span class="built_in">Integer</span></span><br><span class="line">    <span class="keyword">For</span> i=<span class="number">1</span> <span class="keyword">to</span> <span class="number">5</span></span><br><span class="line">        a(i) = i</span><br><span class="line">        picture3.Print a(i)</span><br><span class="line">    <span class="keyword">For</span> i=<span class="number">3</span> <span class="keyword">to</span> <span class="number">8</span></span><br><span class="line">        b(i) = i</span><br><span class="line">        Picture4.Print b(i)</span><br><span class="line">    <span class="keyword">Next</span> i</span><br><span class="line">    MsgBox<span class="string">"开始计算"</span></span><br><span class="line">    Text1= tim(a())</span><br><span class="line">    Text2= tim(b())</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">sub</span></span><br><span class="line"><span class="keyword">Function</span> tim(x() <span class="keyword">As</span> <span class="built_in">Integer</span>)</span><br><span class="line">    <span class="keyword">Dim</span> t <span class="keyword">As</span> <span class="built_in">double</span>, i <span class="keyword">As</span> <span class="built_in">Integer</span></span><br><span class="line">    t=<span class="number">1</span></span><br><span class="line">    <span class="keyword">For</span> i= LBound (x) <span class="keyword">To</span> UBound(x)</span><br><span class="line">        t= t*x(i)</span><br><span class="line">    <span class="keyword">Next</span> i</span><br><span class="line">    tim = t</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">function</span></span><br></pre></td></tr></tbody></table></figure><h2 id="4-2-控件数组–将五个-shape-从上到下移动"><a href="#4-2-控件数组–将五个-shape-从上到下移动" class="headerlink" title="4.2 控件数组–将五个 shape 从上到下移动"></a>4.2 控件数组–将五个 shape 从上到下移动</h2><p>设置好属性—复制，粘贴，名称一样的控件数组</p><p>shape1 重命名为 S1</p><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Option</span> <span class="keyword">Explicit</span></span><br><span class="line">    <span class="keyword">Dim</span> i <span class="keyword">As</span> <span class="built_in">Integer</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command1_Click()</span><br><span class="line">    Timer1.Interval = <span class="number">50</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Timer1_Timer()</span><br><span class="line">    <span class="keyword">For</span> i = <span class="number">0</span> <span class="keyword">To</span> <span class="number">4</span></span><br><span class="line">        <span class="comment">' 改变颜色  ---不同颜色</span></span><br><span class="line">        <span class="comment">' S1(i).BackColor = RGB(Rnd * 250, Rnd * 250, Rnd * 250)</span></span><br><span class="line">        <span class="comment">' S1(i).BorderColor = RGB(Rnd * 250, Rnd * 250, Rnd * 250)</span></span><br><span class="line">        <span class="keyword">If</span> S1(i).Top + S1(i).Height &gt; Form1.ScaleHeight <span class="keyword">Then</span></span><br><span class="line">            S1(i).Top = <span class="number">0</span></span><br><span class="line">        <span class="keyword">Else</span></span><br><span class="line">            S1(i).Top = S1(i).Top + <span class="number">100</span></span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">    <span class="keyword">Next</span> i</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Option</span> <span class="keyword">Explicit</span></span><br><span class="line">    <span class="keyword">Dim</span> i <span class="keyword">As</span> <span class="built_in">Integer</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command1_Click()</span><br><span class="line">    Timer1.Interval = <span class="number">50</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Timer1_Timer()</span><br><span class="line">    <span class="keyword">Dim</span> A</span><br><span class="line">    A = RGB(Rnd * <span class="number">250</span>, Rnd * <span class="number">250</span>, Rnd * <span class="number">250</span>)  <span class="comment">' 相同颜色</span></span><br><span class="line">    <span class="keyword">For</span> i = <span class="number">0</span> <span class="keyword">To</span> <span class="number">4</span></span><br><span class="line">        S1(i).BackColor = A</span><br><span class="line">        S1(i).BorderColor = A</span><br><span class="line">        <span class="comment">' S1(i).BackColor = RGB(Rnd * 250, Rnd * 250, Rnd * 250)</span></span><br><span class="line">        <span class="comment">' S1(i).BorderColor = RGB(Rnd * 250, Rnd * 250, Rnd * 250)</span></span><br><span class="line">        <span class="keyword">If</span> S1(i).Top + S1(i).Height &gt; Form1.ScaleHeight <span class="keyword">Then</span></span><br><span class="line">            S1(i).Top = <span class="number">0</span></span><br><span class="line">        <span class="keyword">Else</span></span><br><span class="line">            S1(i).Top = S1(i).Top + <span class="number">100</span></span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">    <span class="keyword">Next</span> i</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></tbody></table></figure><h2 id="4-3-所有控件的移动"><a href="#4-3-所有控件的移动" class="headerlink" title="4.3 所有控件的移动"></a>4.3 所有控件的移动</h2><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Option</span> <span class="keyword">Explicit</span></span><br><span class="line">    Dim i As Variant  ' 变体型变量</span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command1_Click()</span><br><span class="line">    <span class="keyword">For</span> <span class="keyword">Each</span> i <span class="keyword">In</span> Form1.Controls</span><br><span class="line">        <span class="keyword">If</span> i.Top + i.Height &gt; Form1.ScaleHeight <span class="keyword">Then</span></span><br><span class="line">            i.Top = <span class="number">0</span></span><br><span class="line">        <span class="keyword">Else</span></span><br><span class="line">            i.Top = i.Top + <span class="number">500</span></span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">    <span class="keyword">Next</span> i</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></tbody></table></figure><h2 id="4-4-模块、多窗口"><a href="#4-4-模块、多窗口" class="headerlink" title="4.4 模块、多窗口"></a>4.4 模块、多窗口</h2><p><code>form2.show</code>打开 form2<br>新建 module，然后将子过程放入 module，可以在 form1 中调用</p><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">' module1:</span></span><br><span class="line"><span class="keyword">Option</span> <span class="keyword">Explicit</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Sub</span> fact(n <span class="keyword">As</span> <span class="built_in">Integer</span>, f <span class="keyword">As</span> <span class="built_in">Long</span>)</span><br><span class="line">    <span class="keyword">Dim</span> i <span class="keyword">As</span> <span class="built_in">Integer</span></span><br><span class="line">    f = <span class="number">1</span></span><br><span class="line">    <span class="keyword">For</span> i = <span class="number">1</span> <span class="keyword">To</span> n</span><br><span class="line">        f = f * i</span><br><span class="line">    <span class="keyword">Next</span> i</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="comment">' form1</span></span><br><span class="line"><span class="keyword">Option</span> <span class="keyword">Explicit</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command1_Click()</span><br><span class="line">    <span class="keyword">Dim</span> s <span class="keyword">As</span> <span class="built_in">Long</span></span><br><span class="line">        <span class="keyword">Call</span> fact(Val(Text1), s)</span><br><span class="line">        Print Val(Text1); s</span><br><span class="line">        Text1.SetFocus</span><br><span class="line">        Text1 = <span class="string">""</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command2_Click()</span><br><span class="line">    Form2.Show</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="comment">' form2</span></span><br><span class="line"><span class="keyword">Option</span> <span class="keyword">Explicit</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command1_Click()</span><br><span class="line">    <span class="keyword">Dim</span> s <span class="keyword">As</span> <span class="built_in">Long</span></span><br><span class="line">    <span class="keyword">Call</span> fact(<span class="number">8</span>, s)</span><br><span class="line">    Print <span class="number">8</span>; s</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 学习力 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Note </tag>
            
            <tag> VB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learn-VB</title>
      <link href="/2020/02/16/learn-vb/"/>
      <url>/2020/02/16/learn-vb/</url>
      
        <content type="html"><![CDATA[<p><strong>VB 语言学习笔记</strong></p><blockquote><p><a href="https://www.vbtutor.net/chinese/vbtutor_Chinese.html" target="_blank" rel="noopener">参考教程</a> _ Visual Basic 是一种相当容易学习的高阶程序语言，它可使你编写几乎任何的程序_</p></blockquote><a id="more"></a><h1 id="1-第一个-VB-程序Hello-World"><a href="#1-第一个-VB-程序Hello-World" class="headerlink" title="1. 第一个 VB 程序Hello World"></a>1. 第一个 VB 程序<code>Hello World</code></h1><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Form_Load ( )</span><br><span class="line"></span><br><span class="line">Form1.show</span><br><span class="line"></span><br><span class="line">Print <span class="string">"Hello World"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></tbody></table></figure><h2 id="1-1-几个小例子"><a href="#1-1-几个小例子" class="headerlink" title="1.1 几个小例子"></a>1.1 几个小例子</h2><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Form_Activate ( )</span><br><span class="line"></span><br><span class="line">Print <span class="number">20</span> + <span class="number">10</span></span><br><span class="line">Print <span class="number">20</span> - <span class="number">10</span></span><br><span class="line">Print <span class="number">20</span> * <span class="number">10</span></span><br><span class="line">Print <span class="number">20</span> / <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># or</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Form_Activate ( )</span><br><span class="line"></span><br><span class="line">Print <span class="number">20</span> + <span class="number">10</span>, <span class="number">20</span> ?<span class="number">10</span>, <span class="number">20</span> * <span class="number">10</span>, <span class="number">20</span> / <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># or</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Form_Activate ( )</span><br><span class="line"></span><br><span class="line">x = <span class="number">20</span></span><br><span class="line">y = <span class="number">10</span></span><br><span class="line">Print x + y</span><br><span class="line">Print x - y</span><br><span class="line">Print x * y</span><br><span class="line">Print x / y</span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></tbody></table></figure><h2 id="1-2-让程序窗口固定不变"><a href="#1-2-让程序窗口固定不变" class="headerlink" title="1.2 让程序窗口固定不变"></a>1.2 让程序窗口固定不变</h2><p><strong>属性窗口</strong> 设置为<br><code>BorderStyle</code> : <code>Fixed Single</code><br><code>MaxButton</code> :   <code>False</code><br><code>MinButton</code> :    <code>True</code>    </p><h1 id="2-控件-amp-控件的属性"><a href="#2-控件-amp-控件的属性" class="headerlink" title="2. 控件&amp;控件的属性"></a>2. 控件&amp;控件的属性</h1><h2 id="2-1-控件的属性"><a href="#2-1-控件的属性" class="headerlink" title="2.1 控件的属性"></a>2.1 控件的属性</h2><ul><li>可以在属性窗口里修改<br><img src="/img/VB/VB2_1.jpg" alt="属性窗口"></li><li>也可以在代码中实现修改</li></ul><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Form_Load()</span><br><span class="line">Form1.Show</span><br><span class="line">Form1.BackColor = &amp;H000000FF&amp;</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="meta">## 窗口背景颜色</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Form_Load()</span><br><span class="line">Shape1.Shape = <span class="number">3</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="meta">## shape控件形状</span></span><br></pre></td></tr></tbody></table></figure><h2 id="2-2-常见控件"><a href="#2-2-常见控件" class="headerlink" title="2.2 常见控件"></a>2.2 常见控件</h2><p><img src="/img/VB/VB2_2.jpg" alt="控件介绍"></p><h3 id="2-2-1-文本框-TextBox"><a href="#2-2-1-文本框-TextBox" class="headerlink" title="2.2.1 文本框(TextBox)"></a>2.2.1 文本框(TextBox)</h3><p>文本框是是用来接收用户输入的控件，以及作为显示器输出。它可以处理字符串（纯文字）和数字数据，但不能处理图象或图片。一个文本框中的文字可以用 Val 函数来转换为数字和数据</p><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command1_Click()</span><br><span class="line"></span><br><span class="line">‘把文本框<span class="number">1</span>和文本框<span class="number">2</span>的值加起来</span><br><span class="line"></span><br><span class="line">Sum = Val(Text1.<span class="keyword">Text</span>) + Val(Text2.<span class="keyword">Text</span>)</span><br><span class="line"></span><br><span class="line">‘中标签上显示答案</span><br><span class="line"></span><br><span class="line">Label1.Caption = Sum</span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></tbody></table></figure><h3 id="2-2-2-标签-Label"><a href="#2-2-2-标签-Label" class="headerlink" title="2.2.2 标签(Label)"></a>2.2.2 标签(Label)</h3><ul><li>标签是一个非常有用处的控件，因为它不仅是用来提供指示和指导，它也可以被用来显示输出。它的一个最重要的特性是标题</li><li>利用语法 Label.Caption ，它可以显示文字和数字数据。你可以在属性窗口或在运行时改变它的标题</li></ul><h3 id="2-2-3-命令按钮-CommandButton"><a href="#2-2-3-命令按钮-CommandButton" class="headerlink" title="2.2.3 命令按钮(CommandButton)"></a>2.2.3 命令按钮(CommandButton)</h3><p>命令按钮是一个很重要的控件，因为它被户点击它时可以执行命令去运作一个程序</p><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command1_Click ()</span><br><span class="line"></span><br><span class="line">Statements</span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></tbody></table></figure><h3 id="2-2-4-图片框-PictureBox"><a href="#2-2-4-图片框-PictureBox" class="headerlink" title="2.2.4 图片框(PictureBox)"></a>2.2.4 图片框(PictureBox)</h3><p>图片框可用来处理图形。你可以下载一个图片，在设计阶段就在属性窗口从选定的文件夹选择图片。您也可以在程序运行时加载图片，其指令是 LoadPicture</p><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Picture1.Picture=LoadPicture (<span class="string">"C:\VB program\Images\grape.gif"</span>)</span><br></pre></td></tr></tbody></table></figure><h3 id="2-2-5-图像方框-Image"><a href="#2-2-5-图像方框-Image" class="headerlink" title="2.2.5 图像方框(Image)"></a>2.2.5 图像方框(Image)</h3><p>图像方框 是另一个处理图象和照片的控件。它和图片框的功能几乎是相同的。不过，其中有一个重大的区别，它可以调整大小,它也可以用 LoadPicture 方法来加载图片</p><h3 id="2-2-6-列表框-ListBox"><a href="#2-2-6-列表框-ListBox" class="headerlink" title="2.2.6 列表框(ListBox)"></a>2.2.6 列表框(ListBox)</h3><p>列表框的功能是陈列一个项目清单以便用户可以通过点击来选择项目。如果要增加项目，我们可以利用 additem 方法</p><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Form_Load ( )</span><br><span class="line"></span><br><span class="line">List1.AddItem “第一课”</span><br><span class="line"></span><br><span class="line">List1.AddItem “第二课”</span><br><span class="line"></span><br><span class="line">List1.AddItem “第三课”</span><br><span class="line"></span><br><span class="line">List1.AddItem “第四课”</span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></tbody></table></figure><h3 id="2-2-7-组合框-ComboBox"><a href="#2-2-7-组合框-ComboBox" class="headerlink" title="2.2.7 组合框(ComboBox)"></a>2.2.7 组合框(ComboBox)</h3><p>组合框展现一个下拉式项目清单。用户可以通过点击来选择项目，从名单上。为了增添项目名单，我们可以利用 AddItem `这方法</p><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Form_Load ( )</span><br><span class="line"></span><br><span class="line">Combo1.AddItem “Item1”</span><br><span class="line"></span><br><span class="line">Combo1.AddItem “Item2”</span><br><span class="line"></span><br><span class="line">Combo1.AddItem “Item3”</span><br><span class="line"></span><br><span class="line">Combo1.AddItem “Item4”</span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></tbody></table></figure><h3 id="2-2-8-复选框-CheckBox"><a href="#2-2-8-复选框-CheckBox" class="headerlink" title="2.2.8 复选框(CheckBox)"></a>2.2.8 复选框(CheckBox)</h3><ul><li>复选框让用户可以选择或取消选择一个选项。当复选框被选中时，其值是设定为 1。如不被选中，其值设定为 0_</li><li>你可以用程序来设定复选框的属性，如键入 check1.value = 1 ，就表示它被选中，check1.value = 0 就表示它不被选中，并用它来执行某些动作</li></ul><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Check1_Click ()</span><br><span class="line"></span><br><span class="line"><span class="keyword">If</span> Check1.Value = <span class="number">0</span> <span class="keyword">Then</span></span><br><span class="line"></span><br><span class="line">Form1.BackColor = vbRed</span><br><span class="line"></span><br><span class="line"><span class="keyword">ElseIf</span> Check1.Value = <span class="number">1</span> <span class="keyword">Then</span></span><br><span class="line"></span><br><span class="line">Form1.BackColor = vbBlue</span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></tbody></table></figure><h3 id="2-2-9-选项框-OptionButton"><a href="#2-2-9-选项框-OptionButton" class="headerlink" title="2.2.9 选项框(OptionButton)"></a>2.2.9 选项框(OptionButton)</h3><p>选项框也可以让用户自由选择一个项目。但是，在同一时间中只有一个选项框可被选择。当一个选项框被选定时，其价值被设定为”True”时，反之则其价值被设定为”False</p><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Option1_Click ( )</span><br><span class="line"></span><br><span class="line">Shape1.Shape = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Option2_Click()</span><br><span class="line"></span><br><span class="line">Shape1.Shape = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Option3_Click()</span><br><span class="line"></span><br><span class="line">Shape1.Shape = <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Option4_Click()</span><br><span class="line"></span><br><span class="line">Shape1.Shape = <span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Option5_Click()</span><br><span class="line"></span><br><span class="line">Shape1.Shape = <span class="number">4</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Option6_Click()</span><br><span class="line"></span><br><span class="line">Shape1.Shape = <span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></tbody></table></figure><h3 id="2-2-10-驱动器列表框-DriveListBox"><a href="#2-2-10-驱动器列表框-DriveListBox" class="headerlink" title="2.2.10 驱动器列表框(DriveListBox)"></a>2.2.10 驱动器列表框(DriveListBox)</h3><p>驱动器列表框，是用来显示在您的计算机上所有的驱动器。当你把这个控件纳入表格然后去运行程序，你将能够选择不同的驱动器</p><h3 id="2-2-11-目录列表框-DirListBox"><a href="#2-2-11-目录列表框-DirListBox" class="headerlink" title="2.2.11 目录列表框(DirListBox)"></a>2.2.11 目录列表框(DirListBox)</h3><p>目录列表框是用来显示清单目录或文件夹中选择一个驱动器。当你把这个控件纳入表格然后去运行程序，你将能够从所选驱动器中选择不同的目录</p><h3 id="2-2-12-文件列表框-FileListBox"><a href="#2-2-12-文件列表框-FileListBox" class="headerlink" title="2.2.12 文件列表框(FileListBox)"></a>2.2.12 文件列表框(FileListBox)</h3><p>文件列表框是用来显示文件列表在选定的目录或文件夹。当你把这个控件纳入表格然后去运行程序，你将能够从文件的列表中选择一个目录</p><h1 id="3-编写-VB-的程序代码"><a href="#3-编写-VB-的程序代码" class="headerlink" title="3. 编写 VB 的程序代码"></a>3. 编写 VB 的程序代码</h1><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command1_Click</span><br><span class="line">  程序代码</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></tbody></table></figure><p><em>Sub 实际上是整个程序的一部分, 也称为子程序</em><br>用来设定一个对象的属性或传递价值于它的语法是：<code>object.property</code> <em>对象和属性是以一个点来分开</em><br>举例</p><ul><li>form1.show 的意思是显示表 1</li><li>label1.visible =true 的意思是把 label1 设置为可被显示</li><li>Text1.text = “ VB6” ，目的就是要把 VB6 显示于 text1 的文本框中</li><li>Text2.text = 100 ，是把 100 的数目显示于 text2 文本框中</li><li>Timer1.enabled =false，是要禁用 Timer1 计时器</li></ul><p><strong>几个例子</strong></p><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command1_click</span><br><span class="line"></span><br><span class="line">Label1.Visible=<span class="literal">false</span></span><br><span class="line"></span><br><span class="line">Label2.Visible=<span class="literal">True</span></span><br><span class="line"></span><br><span class="line">Text1.<span class="keyword">Text</span>=”你是正确的!”</span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">sub</span></span><br><span class="line">----</span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command1_click</span><br><span class="line"></span><br><span class="line">Label1.Caption=” 欢迎”</span><br><span class="line"></span><br><span class="line">Image1.visible=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">sub</span></span><br><span class="line">----</span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command1_click</span><br><span class="line"></span><br><span class="line">Pictuire1.Show=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line">Timer1.Enabled=<span class="literal">True</span></span><br><span class="line"></span><br><span class="line">Lable1.Caption=”开始计数“</span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">sub</span></span><br></pre></td></tr></tbody></table></figure><p><strong>两个重要的 VB 函数：VAL 和 STR</strong><br><em>VAL 的作用把键入文本框的文字转换成数值， 而 STR 刚好相反，它是把数值转换成字串</em></p><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Form_Activate()</span><br><span class="line"></span><br><span class="line">  Text3.<span class="keyword">text</span>=text1.<span class="keyword">text</span>+text2.<span class="keyword">text</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="meta"># 输入 12 ， 3</span></span><br><span class="line"><span class="meta"># 得到 123</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Form_Activate()</span><br><span class="line"></span><br><span class="line">  Text3.<span class="keyword">text</span>=val(text1.<span class="keyword">text</span>)+val(text2.<span class="keyword">text</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="meta"># 输入 12 ，3</span></span><br><span class="line"><span class="meta"># 得到 15</span></span><br></pre></td></tr></tbody></table></figure><h1 id="4-VB-数据处理"><a href="#4-VB-数据处理" class="headerlink" title="4. VB 数据处理"></a>4. VB 数据处理</h1><h2 id="4-1-VB-基本数据"><a href="#4-1-VB-基本数据" class="headerlink" title="4.1 VB 基本数据"></a>4.1 VB 基本数据</h2><h3 id="4-1-1-数字数据"><a href="#4-1-1-数字数据" class="headerlink" title="4.1.1 数字数据"></a>4.1.1 数字数据</h3><p>数字数据是由数目构成的数据，可以进行数字运算，如加，减，乘，除等</p><table><thead><tr><th align="center">类型</th><th align="center">取值范围</th></tr></thead><tbody><tr><td align="center">Byte</td><td align="center">0 至 255</td></tr><tr><td align="center">Integer</td><td align="center">-32,768 至 32,767</td></tr><tr><td align="center">Long</td><td align="center">-2,147,483,648 至 2,147,483,648</td></tr><tr><td align="center">Single</td><td align="center">-3.402823E+38 至 -1.401298E-45 负 &amp;&amp;&amp;&amp; 1.401298E-45 至 3.402823E+38 正数.</td></tr><tr><td align="center">Double</td><td align="center">-1.79769313486232e+308 至 -4.94065645841247E-324 负数 &amp;&amp;&amp;&amp; 4.94065645841247E-324 至 1.79769313486232e+308 正数.</td></tr><tr><td align="center">Currency</td><td align="center">-922,337,203,685,477.5808 至 922,337,203,685,477.5807</td></tr><tr><td align="center">Decimal</td><td align="center">+/- 79,228,162,514,264,337,593,543,950,335 如果没有小数点 &amp;&amp;&amp;&amp; +/- 7.9228162514264337593543950335 (28 个小数点）.</td></tr></tbody></table><h3 id="4-1-2-非数据类型"><a href="#4-1-2-非数据类型" class="headerlink" title="4.1.2 非数据类型"></a>4.1.2 非数据类型</h3><table><thead><tr><th align="center">类型</th><th align="center">范围</th></tr></thead><tbody><tr><td align="center">String(fixed length)</td><td align="center">1 to 65,400 字符</td></tr><tr><td align="center">String(variable length)</td><td align="center">0 to 20 亿 字符</td></tr><tr><td align="center">Date</td><td align="center">公元 100 年正月一日至 9999 年十二月三十一日</td></tr><tr><td align="center">Boolean</td><td align="center">True 或 False（对或错）</td></tr><tr><td align="center">Object</td><td align="center">任何嵌入对象</td></tr><tr><td align="center">Variant(numeric)</td><td align="center">任何价值大如 Double</td></tr><tr><td align="center">Variant(text)</td><td align="center">与 variable-length string 相同</td></tr></tbody></table><h3 id="4-1-3-后缀文的符号"><a href="#4-1-3-后缀文的符号" class="headerlink" title="4.1.3 后缀文的符号"></a>4.1.3 后缀文的符号</h3><p>后缀文是让你把数字转让给一个数据. 在某些情况下，我们需要在一个字的后面增加一个后缀文，使 VB 可以计算得更准确</p><table><thead><tr><th align="center">后缀</th><th align="center">数据类型</th></tr></thead><tbody><tr><td align="center">&amp;</td><td align="center">Long</td></tr><tr><td align="center">!</td><td align="center">Single</td></tr><tr><td align="center">#</td><td align="center">Double</td></tr><tr><td align="center">@</td><td align="center">Currency</td></tr></tbody></table><p>此外，我们需要把字符串文字用开关引号 “ “ 围起来，日期和时间则用#标志围起来。字符串可以包含任何字符，包括数字</p><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">memberName=<span class="string">"Turban, John."</span></span><br><span class="line">TelNumber=<span class="string">"1800-900-888-777"</span></span><br><span class="line">LastDay=<span class="meta">#31-Dec-00#</span></span><br><span class="line">ExpTime=<span class="meta">#12:00 am#</span></span><br></pre></td></tr></tbody></table></figure><h2 id="4-2-变数的管理-变量"><a href="#4-2-变数的管理-变量" class="headerlink" title="4.2 变数的管理(变量)"></a>4.2 变数的管理(变量)</h2><h3 id="4-2-1-变数名称"><a href="#4-2-1-变数名称" class="headerlink" title="4.2.1 变数名称"></a>4.2.1 变数名称</h3><p><strong>为变数命名时的规则</strong></p><ul><li>它必须小于 255 个字符</li><li>不得有间隔</li><li>不能以号码来开始</li><li>不能用点</li></ul><h3 id="4-2-2-变数的宣示"><a href="#4-2-2-变数的宣示" class="headerlink" title="4.2.2 变数的宣示"></a>4.2.2 变数的宣示</h3><p><code>Dim variableName as DataType</code></p><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Dim</span> password <span class="keyword">As</span> <span class="built_in">String</span></span><br><span class="line"><span class="keyword">Dim</span> yourName <span class="keyword">As</span> <span class="built_in">String</span></span><br><span class="line"><span class="keyword">Dim</span> firstnum <span class="keyword">As</span> <span class="built_in">Integer</span></span><br><span class="line"><span class="keyword">Dim</span> secondnum <span class="keyword">As</span> <span class="built_in">Integer</span></span><br><span class="line"><span class="keyword">Dim</span> total <span class="keyword">As</span> <span class="built_in">Integer</span></span><br><span class="line"><span class="keyword">Dim</span> doDate <span class="keyword">As</span> <span class="built_in">Date</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># or</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Dim</span> password <span class="keyword">As</span> <span class="built_in">String</span>,  yourName <span class="keyword">As</span> <span class="built_in">String</span>, firstnum <span class="keyword">As</span> <span class="built_in">Integer</span>,.............</span><br></pre></td></tr></tbody></table></figure><p>假如我们没有特别指明数据类型， VB 将自动宣告变数的类型<br>要宣示字符串，有两种可能的方式，一为可变长度的字符串，另一个为固定长度字符串。为可变长度的字符串，只是用同样的格式<br>对于固定长度字符串，你必须使用如下的格式:Dim VariableName as String _ n<br>如：<code>Dim yourName as String _ 10</code></p><h2 id="4-3-VB-的常数和变数"><a href="#4-3-VB-的常数和变数" class="headerlink" title="4.3 VB 的常数和变数"></a>4.3 VB 的常数和变数</h2><h3 id="4-3-1-常数"><a href="#4-3-1-常数" class="headerlink" title="4.3.1 常数"></a>4.3.1 常数</h3><p>常数代表固定不变的数据，它可能是数字或文字。在使用常数时，我们必须预先宣示它们<br>宣示常数的格式是：<code>Const constantname As datatype=initializer</code><br>constantname 是我们自己制定的名称，datatype 是资料类型而 initializer 则是初始设定值</p><p>如下例子</p><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Const</span>  Num  <span class="keyword">As</span> <span class="built_in">Integer</span> = <span class="number">9.8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Const</span> Pi <span class="keyword">As</span> <span class="built_in">Single</span>  = <span class="number">3.142</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Const</span> SchoolName <span class="keyword">As</span> <span class="built_in">String</span>  = <span class="string">"中华中学“</span></span><br></pre></td></tr></tbody></table></figure><h3 id="4-3-2-变数"><a href="#4-3-2-变数" class="headerlink" title="4.3.2 变数"></a>4.3.2 变数</h3><p>变数是在程序运送时会改变的数据，而常数在运算时是固定不变的。虽然我们在开始时可给于变数一个数值（初始值），但在程序运作时它的数值是可以改变的<br>变数的宣告格式如下：<code>Dim VariableName as Datatype[=initializer]</code></p><p>如下例字</p><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Dim</span> Num <span class="keyword">As</span> <span class="built_in">Single</span>=<span class="number">1.234</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Dim</span> Num1,Num2  <span class="keyword">As</span> <span class="built_in">Integer</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Dim</span> yourName <span class="keyword">As</span> <span class="built_in">String</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Dim</span> starName <span class="keyword">As</span> <span class="built_in">String</span>=<span class="string">"刘翔”</span></span><br></pre></td></tr></tbody></table></figure><p>以 Dim 宣告各种变数 之后, 我们可以用以下的格式 赋值于这些变数 Variable=Expression</p><p>变数可以是一个已宣布的变数或控件的属性值. 它也可以是一个数学表达式, 一个字符串, 一个 布尔值 (对或错) 等等</p><h3 id="4-3-3-VB-运算符"><a href="#4-3-3-VB-运算符" class="headerlink" title="4.3.3 VB 运算符"></a>4.3.3 VB 运算符</h3><table><thead><tr><th align="center">运算符</th><th align="center">数学函数</th></tr></thead><tbody><tr><td align="center">^</td><td align="center">指数</td></tr><tr><td align="center">*</td><td align="center">乘法</td></tr><tr><td align="center">/</td><td align="center">除法</td></tr><tr><td align="center">Mod</td><td align="center">整除后的余数</td></tr><tr><td align="center">\</td><td align="center">整数除法 19\4=4</td></tr><tr><td align="center">+or&amp;</td><td align="center">字串串连”v”&amp;”b”=”vb”</td></tr></tbody></table><p><strong>几个例子</strong></p><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Dim</span> firstName <span class="keyword">As</span> <span class="built_in">String</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Dim</span> secondName <span class="keyword">As</span> <span class="built_in">String</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Dim</span> yourName <span class="keyword">As</span> <span class="built_in">String</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Command1_Click()</span><br><span class="line"></span><br><span class="line">firstName = Text1.<span class="keyword">Text</span></span><br><span class="line"></span><br><span class="line">secondName = Text2.<span class="keyword">Text</span></span><br><span class="line"></span><br><span class="line">yourName = secondName + <span class="string">"  "</span> + firstName</span><br><span class="line"></span><br><span class="line">Label1.Caption = yourName</span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight vb"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Dim</span> number1, number2, number3 <span class="keyword">as</span> <span class="built_in">Integer</span></span><br><span class="line"></span><br><span class="line">Dim total, average as variant</span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">sub</span> Form_Click</span><br><span class="line"></span><br><span class="line">number1=val(Text1.<span class="keyword">Text</span>)</span><br><span class="line">number2=val(Text2.<span class="keyword">Text</span>)</span><br><span class="line">number3= val(Text3.<span class="keyword">Text</span>)</span><br><span class="line"></span><br><span class="line">Total=number1+number2+number3</span><br><span class="line"></span><br><span class="line">Average=Total/<span class="number">5</span></span><br><span class="line"></span><br><span class="line">Label1.Caption=Total</span><br><span class="line"></span><br><span class="line">Label2.Caption=Average</span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 学习力 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java-Note</title>
      <link href="/2020/02/15/note-java/"/>
      <url>/2020/02/15/note-java/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><blockquote><p><a href="https://www.runoob.com/java/java-basic-syntax.html" target="_blank" rel="noopener">java 参考学习教程</a></p></blockquote><h2 id="1-java-基础语法"><a href="#1-java-基础语法" class="headerlink" title="1. java 基础语法"></a>1. java 基础语法</h2><ul><li>_对象_：对象是类的一个实例，有状态和行为。例如，一条狗是一个对象，它的状态有：颜色、名字、品种；行为有：摇尾巴、叫、吃等</li><li><em>类</em>：类是一个模板，它描述一类对象的行为和状态</li><li>_方法_：方法就是行为，一个类可以有很多方法。逻辑运算、数据修改以及所有动作都是在方法中完成的</li><li>_实例变量_：每个对象都有独特的实例变量，对象的状态由这些实例变量的值决定</li></ul><h3 id="1-1-java-程序HelloWorld-java"><a href="#1-1-java-程序HelloWorld-java" class="headerlink" title="1.1 java 程序HelloWorld.java"></a>1.1 java 程序<code>HelloWorld.java</code></h3><figure class="highlight"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span> </span>{</span><br><span class="line">    <span class="comment">/* 第一个Java程序</span></span><br><span class="line"><span class="comment">     * 它将打印字符串 Hello World</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String []args)</span> </span>{</span><br><span class="line">        System.out.println(<span class="string">"Hello World"</span>); <span class="comment">// 打印 Hello World</span></span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"># Hello World</span><br></pre></td></tr></tbody></table></figure><p><strong>cmd 窗口</strong><br><code>javac HelloWorld.java --调试</code><br><code>java Helloworld --运行</code></p><h3 id="1-2-基本语法"><a href="#1-2-基本语法" class="headerlink" title="1.2 基本语法"></a>1.2 基本语法</h3><ul><li>大小写敏感：Java 是大小写敏感的，这就意味着标识符 Hello 与 hello 是不同的</li><li>类名：对于所有的类来说，类名的首字母应该大写。如果类名由若干单词组成，那么每个单词的首字母应该大写，例如 MyFirstJavaClass</li><li>方法名：所有的方法名都应该以小写字母开头。如果方法名含有若干单词，则后面的每个单词首字母大写</li><li>源文件名.java：源文件名必须和类名相同。当保存文件的时候，你应该使用类名作为文件名保存（切记 Java 是大小写敏感的），文件名的后缀为 .java。（如果文件名和类名不相同则会导致编译错误）</li><li>主方法入口：所有的 Java 程序由 <code>public static void main(String []args)</code> 方法开始执行</li></ul><h3 id="1-3-java-标识符"><a href="#1-3-java-标识符" class="headerlink" title="1.3 java 标识符"></a>1.3 java 标识符</h3><p><em>Java 所有的组成部分都需要名字。类名、变量名以及方法名都被称为标识符</em></p><ul><li>所有的标识符都应该以字母（A-Z 或者 a-z）,美元符（$）、或者下划线（_）开始</li><li>首字符之后可以是字母（A-Z 或者 a-z）,美元符（$）、下划线（_）或数字的任何字符组合</li><li>关键字不能用作标识符</li><li>标识符是大小写敏感的</li><li>合法标识符举例：age、$salary、_value、__1_value</li><li>非法标识符举例：123abc、-salary</li></ul><h3 id="1-4-java-修饰符"><a href="#1-4-java-修饰符" class="headerlink" title="1.4 java 修饰符"></a>1.4 java 修饰符</h3><p><em>像其他语言一样，Java 可以使用修饰符来修饰类中方法和属性。主要有两类修饰符</em></p><ul><li>访问控制修饰符 : default, public , protected, private</li><li>非访问控制修饰符 : final, abstract, static, synchronized</li></ul><h3 id="1-5-java-变量"><a href="#1-5-java-变量" class="headerlink" title="1.5 java 变量"></a>1.5 java 变量</h3><ul><li>局部变量</li><li>类变量–静态变量</li><li>成员变量–非静态变量</li></ul><h3 id="1-6-java-数组"><a href="#1-6-java-数组" class="headerlink" title="1.6 java 数组"></a>1.6 java 数组</h3><p><em>数组是储存在堆上的对象，可以保存多个同类型变量</em></p><h3 id="1-7-java-枚举"><a href="#1-7-java-枚举" class="headerlink" title="1.7 java 枚举"></a>1.7 java 枚举</h3><p><em>Java 5.0 引入了枚举，枚举限制变量只能是预先设定好的值。使用枚举可以减少代码中的 bug</em><br><em>例如，我们为果汁店设计一个程序，它将限制果汁为小杯、中杯、大杯。这就意味着它不允许顾客点除了这三种尺寸外的果汁</em></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FreshJuice</span> </span>{</span><br><span class="line">   <span class="keyword">enum</span> FreshJuiceSize{ SMALL, MEDIUM , LARGE }</span><br><span class="line">   FreshJuiceSize size;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FreshJuiceTest</span> </span>{</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String []args)</span></span>{</span><br><span class="line">      FreshJuice juice = <span class="keyword">new</span> FreshJuice();</span><br><span class="line">      juice.size = FreshJuice.FreshJuiceSize.MEDIUM  ;</span><br><span class="line">   }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="1-7-1-java-关键字-不可以用于变量"><a href="#1-7-1-java-关键字-不可以用于变量" class="headerlink" title="1.7.1 java 关键字(不可以用于变量)"></a>1.7.1 java 关键字(不可以用于变量)</h3><table><thead><tr><th align="center">类别</th><th align="center">关键字</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">访问控制</td><td align="center">private</td><td align="center">私有的</td></tr><tr><td align="center"></td><td align="center">protected</td><td align="center">受保护的</td></tr><tr><td align="center"></td><td align="center">public</td><td align="center">公共的</td></tr><tr><td align="center">类、方法和变量修饰符</td><td align="center">abstract</td><td align="center">声明抽象</td></tr><tr><td align="center"></td><td align="center">class</td><td align="center">类</td></tr><tr><td align="center"></td><td align="center">extends</td><td align="center">扩充，继承</td></tr><tr><td align="center"></td><td align="center">final</td><td align="center">最终值，不可改变的</td></tr><tr><td align="center"></td><td align="center">implements</td><td align="center">实现（接口）</td></tr><tr><td align="center"></td><td align="center">interface</td><td align="center">接口</td></tr><tr><td align="center"></td><td align="center">native</td><td align="center">本地，原生方法</td></tr><tr><td align="center"></td><td align="center">new</td><td align="center">新，创建</td></tr><tr><td align="center"></td><td align="center">static</td><td align="center">静态</td></tr><tr><td align="center"></td><td align="center">strictfp</td><td align="center">严格，精准</td></tr><tr><td align="center"></td><td align="center">synchronized</td><td align="center">线程，同步</td></tr><tr><td align="center"></td><td align="center">transient</td><td align="center">短暂</td></tr><tr><td align="center"></td><td align="center">volatile</td><td align="center">易失的</td></tr><tr><td align="center">程序控制语句</td><td align="center">break</td><td align="center">跳出循环</td></tr><tr><td align="center"></td><td align="center">case</td><td align="center">定义一个值供 switch 选择</td></tr><tr><td align="center"></td><td align="center">continue</td><td align="center">继续</td></tr><tr><td align="center"></td><td align="center">default</td><td align="center">默认</td></tr><tr><td align="center"></td><td align="center">do</td><td align="center">运行</td></tr><tr><td align="center"></td><td align="center">else</td><td align="center">否则</td></tr><tr><td align="center"></td><td align="center">for</td><td align="center">循环</td></tr><tr><td align="center"></td><td align="center">if</td><td align="center">如果</td></tr><tr><td align="center"></td><td align="center">instanceof</td><td align="center">实例</td></tr><tr><td align="center"></td><td align="center">return</td><td align="center">返回</td></tr><tr><td align="center"></td><td align="center">switch</td><td align="center">根据值选择执行</td></tr><tr><td align="center"></td><td align="center">while</td><td align="center">循环</td></tr><tr><td align="center">错误处理</td><td align="center">assert</td><td align="center">断言表达式是否为真</td></tr><tr><td align="center"></td><td align="center">catch</td><td align="center">捕捉一场</td></tr><tr><td align="center"></td><td align="center">finally</td><td align="center">有没有异常都执行</td></tr><tr><td align="center"></td><td align="center">throw</td><td align="center">抛出一个异常对象</td></tr><tr><td align="center"></td><td align="center">throws</td><td align="center">声明一个异常可能被抛出</td></tr><tr><td align="center"></td><td align="center">try</td><td align="center">捕获异常</td></tr><tr><td align="center">包相关</td><td align="center">impot</td><td align="center">引入</td></tr><tr><td align="center"></td><td align="center">package</td><td align="center">包</td></tr><tr><td align="center">基本类型</td><td align="center">boolean</td><td align="center">布尔型</td></tr><tr><td align="center"></td><td align="center">byte</td><td align="center">字节型</td></tr><tr><td align="center"></td><td align="center">char</td><td align="center">字符型</td></tr><tr><td align="center"></td><td align="center">double</td><td align="center">双精度浮点</td></tr><tr><td align="center"></td><td align="center">float</td><td align="center">单精度浮点</td></tr><tr><td align="center"></td><td align="center">int</td><td align="center">整型</td></tr><tr><td align="center"></td><td align="center">long</td><td align="center">长整型</td></tr><tr><td align="center"></td><td align="center">short</td><td align="center">短整型</td></tr><tr><td align="center">变量引用</td><td align="center">super</td><td align="center">父类。超类</td></tr><tr><td align="center"></td><td align="center">this</td><td align="center">本类</td></tr><tr><td align="center"></td><td align="center">void</td><td align="center">无返回值</td></tr><tr><td align="center">保留关键字</td><td align="center">goto</td><td align="center">是关键字，但不能使用</td></tr><tr><td align="center"></td><td align="center">const</td><td align="center">是关键字，但不能使用</td></tr><tr><td align="center"></td><td align="center">null</td><td align="center">空</td></tr></tbody></table><h3 id="1-8-java-注释"><a href="#1-8-java-注释" class="headerlink" title="1.8 java 注释"></a>1.8 java 注释</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*多行</span></span><br><span class="line"><span class="comment">*注释</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 单行注释</span></span><br><span class="line"><span class="comment">/*单行注释*/</span></span><br></pre></td></tr></tbody></table></figure><h3 id="1-9-java-空行—-忽略"><a href="#1-9-java-空行—-忽略" class="headerlink" title="1.9 java 空行—-忽略"></a>1.9 java 空行—-忽略</h3><h3 id="1-10-继承"><a href="#1-10-继承" class="headerlink" title="1.10 继承"></a>1.10 继承</h3><ul><li>在 Java 中，一个类可以由其他类派生。如果你要创建一个类，而且已经存在一个类具有你所需要的属性或方法，那么你可以将新创建的类继承该类</li><li>利用继承的方法，可以重用已存在类的方法和属性，而不用重写这些代码。被继承的类称为超类（super class），派生类称为子类（subclass）</li></ul><h3 id="1-11-接口"><a href="#1-11-接口" class="headerlink" title="1.11 接口"></a>1.11 接口</h3><ul><li>在 Java 中，接口可理解为对象间相互通信的协议。接口在继承中扮演着很重要的角色</li><li>接口只定义派生要用到的方法，但是方法的具体实现完全取决于派生类</li></ul><h3 id="1-12-java-源程序与编译型运行区别"><a href="#1-12-java-源程序与编译型运行区别" class="headerlink" title="1.12 java 源程序与编译型运行区别"></a>1.12 java 源程序与编译型运行区别</h3><p><img src="/img/java/java.png" alt="java_pic"></p><h2 id="2-对象和类"><a href="#2-对象和类" class="headerlink" title="2. 对象和类"></a>2. 对象和类</h2><p><em>一个群体中有很多 boy 和 girl</em><br><em>其中 boy 和 girl 为类 class，而具体的每个人为该类的对象</em></p><h3 id="2-1-java-中的类"><a href="#2-1-java-中的类" class="headerlink" title="2.1 java 中的类"></a>2.1 java 中的类</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Dog</span></span>{</span><br><span class="line">  String breed;</span><br><span class="line">  <span class="keyword">int</span> age;</span><br><span class="line">  String color;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">barking</span><span class="params">()</span></span>{</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">hungry</span><span class="params">()</span></span>{</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">sleeping</span><span class="params">()</span></span>{</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>一个类中可以包含一下类型的变量：</p><ul><li>局部变量：在方法、构造方法或者语句块中定义的变量被称为局部变量。变量声明和初始化都是在方法中，方法结束后，变量就会自动销毁</li><li>成员变量：成员变量是定义在类中，方法体之外的变量。这种变量在创建对象的时候实例化。成员变量可以被类中方法、构造方法和特定类的语句块访问</li><li>类变量：类变量也声明在类中，方法体之外，但必须声明为 static 类型<br>一个类可以拥有多个方法，在上面的例子中：barking()、hungry()和 sleeping()都是 Dog 类的方法</li></ul><h3 id="2-2-构造方法"><a href="#2-2-构造方法" class="headerlink" title="2.2 构造方法"></a>2.2 构造方法</h3><ul><li>每个类都有构造方法。如果没有显式地为类定义构造方法，Java 编译器将会为该类提供一个默认构造方法。</li><li>在创建一个对象的时候，至少要调用一个构造方法</li><li>构造方法的名称必须与类同名，一个类可以有多个构造方法</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Puppy</span></span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Puppy</span><span class="params">()</span></span>{</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Puppy</span><span class="params">(String name)</span></span>{</span><br><span class="line">        <span class="comment">// 这个构造器仅有一个参数：name</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="2-3-创建对象"><a href="#2-3-创建对象" class="headerlink" title="2.3 创建对象"></a>2.3 创建对象</h3><p><em>对象是根据类创建的。在 Java 中，使用关键字 new 来创建一个新的对象</em></p><ul><li>声明：声明一个对象，包括对象名称和对象类型</li><li>实例化：使用关键字 new 来创建一个对象</li><li>初始化：使用 new 创建对象时，会调用构造方法初始化对象</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Puppy</span></span>{</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="title">Puppy</span><span class="params">(String name)</span></span>{</span><br><span class="line">      <span class="comment">//这个构造器仅有一个参数：name</span></span><br><span class="line">      System.out.println(<span class="string">"小狗的名字是 : "</span> + name );</span><br><span class="line">   }</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>{</span><br><span class="line">      <span class="comment">// 下面的语句将创建一个Puppy对象</span></span><br><span class="line">      Puppy myPuppy = <span class="keyword">new</span> Puppy( <span class="string">"tommy"</span> );</span><br><span class="line">   }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 学习力 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Note </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bilibili提供的一些api</title>
      <link href="/2020/02/15/tools-bilibili-api/"/>
      <url>/2020/02/15/tools-bilibili-api/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><h2 id="1-up-信息，名字，等级，视频总播放量，文章总浏览数"><a href="#1-up-信息，名字，等级，视频总播放量，文章总浏览数" class="headerlink" title="1. up 信息，名字，等级，视频总播放量，文章总浏览数"></a>1. up 信息，名字，等级，视频总播放量，文章总浏览数</h2><p><code>https://api.bilibili.com/x/space/upstat?mid=uid&amp;jsonp=jsonp</code></p><h2 id="2-up-信息，关注数，黑名单，粉丝数"><a href="#2-up-信息，关注数，黑名单，粉丝数" class="headerlink" title="2. up 信息，关注数，黑名单，粉丝数"></a>2. up 信息，关注数，黑名单，粉丝数</h2><p><code>https://api.bilibili.com/x/relation/stat?vmid=UID&amp;jsonp=jsonp</code></p><h2 id="3-bilibili-某视频评论区的信息"><a href="#3-bilibili-某视频评论区的信息" class="headerlink" title="3. bilibili 某视频评论区的信息"></a>3. bilibili 某视频评论区的信息</h2><p><code>http://api.bilibili.com/x/v2/reply?jsonp=jsonp&amp;;pn=页数&amp;type=1&amp;oid=av号</code></p><h2 id="4-bilibili-主页各个分区信息（信息量巨大）"><a href="#4-bilibili-主页各个分区信息（信息量巨大）" class="headerlink" title="4. bilibili 主页各个分区信息（信息量巨大）"></a>4. bilibili 主页各个分区信息（信息量巨大）</h2><p><code>https://www.bilibili.com/index/ding.json</code></p><h2 id="5-bilibili-视频-av-号，弹幕，评论，收藏，硬币，分享，喜欢等基本信息"><a href="#5-bilibili-视频-av-号，弹幕，评论，收藏，硬币，分享，喜欢等基本信息" class="headerlink" title="5. bilibili 视频 av 号，弹幕，评论，收藏，硬币，分享，喜欢等基本信息"></a>5. bilibili 视频 av 号，弹幕，评论，收藏，硬币，分享，喜欢等基本信息</h2><p><code>http://api.bilibili.com/archive_stat/stat?aid=av号&amp;type=jsonp</code></p><h2 id="6-bilibili-主站"><a href="#6-bilibili-主站" class="headerlink" title="6. bilibili 主站"></a>6. bilibili 主站</h2><p><code>https://api.bilibili.com/x/web-interface/online?&amp;;jsonp=jsonp</code></p><h2 id="7-up-的粉丝数量，但有限制，最对-250-个"><a href="#7-up-的粉丝数量，但有限制，最对-250-个" class="headerlink" title="7. up 的粉丝数量，但有限制，最对 250 个"></a>7. up 的粉丝数量，但有限制，最对 250 个</h2><p><code>https://api.bilibili.com/x/relation/followers?vmid=uid&amp;pn=5&amp;ps=0&amp;order=desc&amp;jsonp=jsonp</code></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 资源力 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Bilibili </tag>
            
            <tag> Api </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用Python写的一些获取b站信息的小程序</title>
      <link href="/2020/02/14/example-bilibili/"/>
      <url>/2020/02/14/example-bilibili/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><p><strong>bilibili 提供的 api 接口(一串 json 字符)</strong><br><em>让基于 bilibili 的开发更简单</em><br><strong>我基于 python 写的几个使用 api 获取信息的例子</strong></p><!--more--><h1 id="1-bilibili-用户基本信息-name，level，关注，粉丝-获取"><a href="#1-bilibili-用户基本信息-name，level，关注，粉丝-获取" class="headerlink" title="1. bilibili 用户基本信息(name，level，关注，粉丝)获取"></a>1. bilibili 用户基本信息(name，level，关注，粉丝)获取</h1><p><code>https://api.bilibili.com/x/space/upstat?mid=UUID&amp;jsonp=jsonp</code><em>up 信息，名字，等级，视频总播放量，文章总浏览数</em><br><code>https://api.bilibili.com/x/relation/stat?vmid=UUID&amp;jsonp=jsonp</code><em>up 信息，关注数，黑名单，粉丝数</em></p><p><strong>简单的代码获取 up 信息</strong></p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">mid = input(<span class="string">'输入要查询的up的uid：'</span>)</span><br><span class="line">url_space = <span class="string">'https://api.bilibili.com/x/space/acc/info?mid='</span> + mid</span><br><span class="line">url_relation = <span class="string">'https://api.bilibili.com/x/relation/stat?vmid='</span>+mid</span><br><span class="line">space = requests.get(url_space).content.decode()</span><br><span class="line">relation =requests.get(url_relation).content.decode()</span><br><span class="line"><span class="comment"># print(type(html))</span></span><br><span class="line">dict_space = json.loads(space)</span><br><span class="line">dict_rela = json.loads(relation)</span><br><span class="line"><span class="comment"># print(dict)</span></span><br><span class="line">up_name = dict_space[<span class="string">"data"</span>][<span class="string">"name"</span>]</span><br><span class="line">up_level = dict_space[<span class="string">'data'</span>][<span class="string">'level'</span>]</span><br><span class="line"></span><br><span class="line">up_following_num = dict_rela[<span class="string">'data'</span>][<span class="string">'following'</span>]</span><br><span class="line">up_follower_num = dict_rela[<span class="string">'data'</span>][<span class="string">'follower'</span>]</span><br><span class="line"></span><br><span class="line">print(<span class="string">f'up名字是:<span class="subst">{up_name}</span>'</span>)</span><br><span class="line">print(<span class="string">f'up等级达到:<span class="subst">{up_level}</span>级'</span>)</span><br><span class="line"><span class="keyword">if</span> int(up_level)&gt;=<span class="number">5</span>:</span><br><span class="line">    print(<span class="string">'----哇是个大佬！！！----'</span>)</span><br><span class="line">print(<span class="string">f'up关注了<span class="subst">{up_following_num}</span>个人'</span>)</span><br><span class="line"><span class="keyword">if</span> int(up_following_num)&gt;=<span class="number">700</span>:</span><br><span class="line">    print(<span class="string">'----铁定是个dd！！！----'</span>)</span><br><span class="line">print(<span class="string">f'up有<span class="subst">{up_follower_num}</span>个粉丝'</span>)</span><br></pre></td></tr></tbody></table></figure><p><strong>示例：</strong></p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">输入要查询的up的uid：<span class="number">2</span></span><br><span class="line">up名字是:碧诗</span><br><span class="line">up等级达到:<span class="number">6</span>级</span><br><span class="line">----哇是个大佬！！！----</span><br><span class="line">up关注了<span class="number">191</span>个人</span><br><span class="line">up有<span class="number">804598</span>个粉丝</span><br></pre></td></tr></tbody></table></figure><h1 id="2-bilibili-统计某视频评论区，并生成词云"><a href="#2-bilibili-统计某视频评论区，并生成词云" class="headerlink" title="2. bilibili 统计某视频评论区，并生成词云"></a>2. bilibili 统计某视频评论区，并生成词云</h1><ul><li><strong>获取某视频评论区评论</strong></li></ul><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> multiprocessing.dummy <span class="keyword">import</span> Pool</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">av = input(<span class="string">'请输入视频的av号:'</span>)</span><br><span class="line">p_total = input(<span class="string">'请输入评论要几页:'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_urls</span><span class="params">()</span>:</span></span><br><span class="line">    urls = []</span><br><span class="line">    p = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> p &lt;= int(p_total):</span><br><span class="line">        url = <span class="string">'http://api.bilibili.com/x/v2/reply?jsonp=jsonp&amp;;pn='</span> + str(p) + <span class="string">'&amp;type=1&amp;oid='</span> + av</span><br><span class="line">        urls.append(url)</span><br><span class="line">        p += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> urls</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_name_con</span><span class="params">(url)</span>:</span></span><br><span class="line">    html = requests.get(url).content.decode()</span><br><span class="line">    yh_names = re.findall(<span class="string">r'"uname":"(.*?)","sex":'</span>,html,re.S)</span><br><span class="line">    yh_contents = re.findall(<span class="string">r'"message":"(.*?)","plat"'</span>,html,re.S)</span><br><span class="line">    <span class="keyword">del</span> yh_contents[<span class="number">0</span>]</span><br><span class="line">    yh_contents2 = []</span><br><span class="line">    <span class="keyword">for</span> yh_content <span class="keyword">in</span> yh_contents:</span><br><span class="line">        yh_contents2.append(yh_content.replace(<span class="string">'\\n'</span>,<span class="string">' '</span>))</span><br><span class="line">    <span class="comment"># print(yh_contents2)</span></span><br><span class="line">    <span class="comment"># exit()</span></span><br><span class="line">    <span class="keyword">return</span> yh_names,yh_contents2</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_names_cons</span><span class="params">()</span>:</span></span><br><span class="line">    pool = Pool(<span class="number">5</span>)</span><br><span class="line">    urls = get_urls()</span><br><span class="line">    namecons = pool.map(get_name_con,urls)</span><br><span class="line">    names = []</span><br><span class="line">    cons = []</span><br><span class="line">    <span class="keyword">for</span> namecon <span class="keyword">in</span> namecons:</span><br><span class="line">        name = namecon[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> name :</span><br><span class="line">            names.append(n)</span><br><span class="line">        con = namecon[<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> con:</span><br><span class="line">            cons.append(c)</span><br><span class="line">    <span class="keyword">return</span> names,cons</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save</span><span class="params">()</span>:</span></span><br><span class="line">    tumple = get_names_cons()</span><br><span class="line">    namelst = tumple[<span class="number">0</span>]</span><br><span class="line">    conlst = tumple[<span class="number">1</span>]</span><br><span class="line">    <span class="comment"># print(len(conlst))</span></span><br><span class="line">    <span class="comment"># # print(type(namelst))</span></span><br><span class="line">    <span class="comment"># print(len(namelst))</span></span><br><span class="line">    <span class="comment"># exit()</span></span><br><span class="line">    <span class="keyword">if</span> len(namelst) != len(conlst):</span><br><span class="line">        tot = len(conlst)</span><br><span class="line">    g = <span class="number">0</span></span><br><span class="line">    main_path = <span class="string">'E:\\learn\\py\\git\\spider\\spider_learn\\bilibili\\bilibili_api\\txt'</span> <span class="comment">#修改路径-自定义</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(main_path):</span><br><span class="line">        os.makedirs(main_path)</span><br><span class="line"></span><br><span class="line">    dir1 = <span class="string">'E:\\learn\\py\\git\\spider\\spider_learn\\bilibili\\bilibili_api\\txt\\'</span> + <span class="string">'comment'</span>  + <span class="string">'.txt'</span>  <span class="comment"># 自定义文件名</span></span><br><span class="line">    <span class="keyword">with</span> open(dir1,<span class="string">'w'</span>,encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> fb:</span><br><span class="line">        <span class="keyword">for</span> g <span class="keyword">in</span> range(tot):</span><br><span class="line">            <span class="comment"># fb.write(namelst[g])</span></span><br><span class="line">            <span class="comment"># fb.write('\t\t\t')</span></span><br><span class="line">            fb.write(conlst[g])</span><br><span class="line">            <span class="comment"># fb.write('\n')</span></span><br><span class="line">            g += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    save()</span><br><span class="line">    print(<span class="string">'----已完成----'</span>,end=<span class="string">'\t'</span>)</span><br><span class="line">    print(<span class="string">f'此视频已获得 <span class="subst">{p_total}</span> 页的评论'</span>)</span><br></pre></td></tr></tbody></table></figure><ul><li><strong>将生成的评论 txt 文件统计为词云</strong></li></ul><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> wordcloud <span class="keyword">import</span> WordCloud</span><br><span class="line"><span class="keyword">import</span> PIL .Image <span class="keyword">as</span> image</span><br><span class="line"><span class="keyword">import</span> jieba</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">trans_cn</span><span class="params">(text)</span>:</span></span><br><span class="line">    word_list = jieba.cut(text)</span><br><span class="line">    result = <span class="string">' '</span>.join(word_list)</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">wc</span><span class="params">()</span>:</span></span><br><span class="line">    dir1 = <span class="string">'./txt/comment.txt'</span></span><br><span class="line">    <span class="keyword">with</span> open(dir1,encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        text = f.read()</span><br><span class="line">        text = trans_cn(text)</span><br><span class="line">        WordCloud2 = WordCloud(</span><br><span class="line">            font_path = <span class="string">'C:\\windows\\Fonts\\simfang.ttf'</span></span><br><span class="line">        ).generate(text)</span><br><span class="line">        image_produce = WordCloud2.to_image()</span><br><span class="line">        image_produce.show()</span><br><span class="line">        WordCloud2.to_file(<span class="string">'./txt/comment.png'</span>)</span><br><span class="line"></span><br><span class="line">wc()</span><br></pre></td></tr></tbody></table></figure><p><strong>示例：av2</strong><br><img src="/img/bilibili/comment.png" alt="图片示例"></p><h1 id="3-获取-bilibili-主页各个分区的视频封面和-av-号"><a href="#3-获取-bilibili-主页各个分区的视频封面和-av-号" class="headerlink" title="3. 获取 bilibili 主页各个分区的视频封面和 av 号"></a>3. 获取 bilibili 主页各个分区的视频封面和 av 号</h1><p><code>https://www.bilibili.com/index/ding.json</code><em>首页 api，每刷新一次，信息就会改变一次</em><br><em>获取的视频信息也就不同，所以可以一直获取信息(理论上来说)</em><br><em>缺点是每次只能获取十张图片信息</em><br><em>用的是 wb 写入文件，所以即使文件有一样的也会被覆盖…</em></p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">print(<span class="string">'-douga-teleplay-kichiku-dance-bangumi-fashion-life-ad-guochuang-movie-music-technology-game-ent--'</span>)</span><br><span class="line">fenqu = input(<span class="string">'请输入爬取分区:'</span>)</span><br><span class="line"><span class="keyword">if</span> fenqu == <span class="string">''</span>:</span><br><span class="line">    fenqu1 = <span class="string">'shuma'</span></span><br><span class="line"><span class="keyword">else</span> :</span><br><span class="line">    fenqu1 = fenqu</span><br><span class="line"></span><br><span class="line">html = requests.get(</span><br><span class="line">    <span class="string">'https://www.bilibili.com/index/ding.json'</span>).content.decode()</span><br><span class="line"></span><br><span class="line">dict_html = json.loads(html)</span><br><span class="line">i = <span class="number">0</span></span><br><span class="line">aids = []</span><br><span class="line">pics = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">    aid = dict_html[fenqu][str(i)][<span class="string">'aid'</span>]</span><br><span class="line">    pic = dict_html[fenqu][str(i)][<span class="string">'pic'</span>]</span><br><span class="line">    aids.append(aid)</span><br><span class="line">    pics.append(pic)</span><br><span class="line"></span><br><span class="line">j = <span class="number">1</span></span><br><span class="line">h = j<span class="number">-1</span></span><br><span class="line"><span class="keyword">for</span> h <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">    main_path = <span class="string">'E:\\learn\\py\\git\\spider\\spider_learn\\bilibili\\bilibili_api\\pic\\'</span>+fenqu1</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(main_path):</span><br><span class="line">        os.makedirs(main_path)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        piccc = requests.get(pics[h])</span><br><span class="line">    <span class="keyword">except</span> requests.exceptions.ConnectionError:</span><br><span class="line">        print(<span class="string">'图片无法下载'</span>)</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">except</span> requests.exceptions.ReadTimeout:</span><br><span class="line">        print(<span class="string">'requests.exceptions.ReadTimeout'</span>)</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    dir = <span class="string">'E:\\learn\\py\\git\\spider\\spider_learn\\bilibili\\bilibili_api\\pic\\'</span> + \</span><br><span class="line">         fenqu1 + <span class="string">'\\'</span>  +<span class="string">'av'</span> + str(aids[h]) + <span class="string">'.jpg'</span></span><br><span class="line">    <span class="keyword">with</span> open(dir, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        print(<span class="string">f'正在爬取第<span class="subst">{j}</span>张图'</span>)</span><br><span class="line">        f.write(piccc.content)</span><br><span class="line">    j += <span class="number">1</span></span><br><span class="line">    h += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">'----完成图片爬取----'</span>)</span><br></pre></td></tr></tbody></table></figure><p><em>略微修改后</em><br><em>可能就是因为有重复的，会覆盖前面已下载的</em><br><em>爬个 5 次本该有 50 张，但才有 20 几张(dance 区)</em><br><em>可能 dance 区首页视频比较少吧，游戏区很多</em><br><strong>不管了反正这个爬虫也没什么用 hhh</strong></p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_pic</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> fenqu == <span class="string">''</span>:</span><br><span class="line">        fenqu1 = <span class="string">'shuma'</span></span><br><span class="line">    <span class="keyword">else</span> :</span><br><span class="line">        fenqu1 = fenqu</span><br><span class="line"></span><br><span class="line">    html = requests.get(</span><br><span class="line">        <span class="string">'https://www.bilibili.com/index/ding.json'</span>).content.decode()</span><br><span class="line"></span><br><span class="line">    dict_html = json.loads(html)</span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    aids = []</span><br><span class="line">    pics = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">        aid = dict_html[fenqu][str(i)][<span class="string">'aid'</span>]</span><br><span class="line">        pic = dict_html[fenqu][str(i)][<span class="string">'pic'</span>]</span><br><span class="line">        aids.append(aid)</span><br><span class="line">        pics.append(pic)</span><br><span class="line"></span><br><span class="line">    j = <span class="number">1</span></span><br><span class="line">    h = j<span class="number">-1</span></span><br><span class="line">    <span class="keyword">for</span> h <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">        main_path = <span class="string">'E:\\learn\\py\\git\\spider\\spider_learn\\bilibili\\bilibili_api\\pic\\'</span>+fenqu1</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(main_path):</span><br><span class="line">            os.makedirs(main_path)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            piccc = requests.get(pics[h])</span><br><span class="line">        <span class="keyword">except</span> requests.exceptions.ConnectionError:</span><br><span class="line">            print(<span class="string">'图片无法下载'</span>)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">except</span> requests.exceptions.ReadTimeout:</span><br><span class="line">            print(<span class="string">'requests.exceptions.ReadTimeout'</span>)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        dir = <span class="string">'E:\\learn\\py\\git\\spider\\spider_learn\\bilibili\\bilibili_api\\pic\\'</span> + \</span><br><span class="line">            fenqu1 + <span class="string">'\\'</span>  +<span class="string">'av'</span> + str(aids[h]) + <span class="string">'.jpg'</span></span><br><span class="line">        <span class="keyword">with</span> open(dir, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">            print(<span class="string">f'正在爬取第<span class="subst">{j}</span>张图'</span>)</span><br><span class="line">            f.write(piccc.content)</span><br><span class="line">        j += <span class="number">1</span></span><br><span class="line">        h += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">to = int(input(<span class="string">'请输入你要爬多少次---一次最多十张：'</span>))</span><br><span class="line">print(<span class="string">'-douga-teleplay-kichiku-dance-bangumi-fashion-life-ad-guochuang-movie-music-technology-game-ent--'</span>)</span><br><span class="line">fenqu = input(<span class="string">'请输入爬取分区:'</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(to):</span><br><span class="line">    get_pic()</span><br><span class="line">    print(<span class="string">f'----完成第<span class="subst">{i}</span>次图片爬取----'</span>)</span><br></pre></td></tr></tbody></table></figure><blockquote><p><a href="https://github.com/yq010105/spider_learn/tree/master/bilibili/bilibili_api" target="_blank" rel="noopener">Github 源码链接</a></p></blockquote><h1 id="4-主站上的实时人数"><a href="#4-主站上的实时人数" class="headerlink" title="4. 主站上的实时人数"></a>4. 主站上的实时人数</h1><p>_所用 api 接口_<code>https://api.bilibili.com/x/web-interface/online?&amp;;jsonp=jsonp</code></p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print_num</span><span class="params">()</span>:</span></span><br><span class="line">    index = requests.get(</span><br><span class="line">    <span class="string">'https://api.bilibili.com/x/web-interface/online?&amp;;jsonp=jsonp'</span>).content.decode()</span><br><span class="line">    dict_index = json.loads(index)</span><br><span class="line">    all_count = dict_index[<span class="string">'data'</span>][<span class="string">'all_count'</span>]</span><br><span class="line">    web_online = dict_index[<span class="string">'data'</span>][<span class="string">'web_online'</span>]</span><br><span class="line">    play_online = dict_index[<span class="string">'data'</span>][<span class="string">'play_online'</span>]</span><br><span class="line"><span class="comment"># 应该是人数和实时在线人数</span></span><br><span class="line">    print(<span class="string">f'all_count:<span class="subst">{all_count}</span>'</span>)</span><br><span class="line">    print(<span class="string">f'web_online:<span class="subst">{web_online}</span>'</span>)</span><br><span class="line">    print(<span class="string">f'play_online:<span class="subst">{play_online}</span>'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">100</span>):</span><br><span class="line">    print(<span class="string">f'第<span class="subst">{i+<span class="number">1</span>}</span>次计数'</span>)</span><br><span class="line">    print_num()</span><br><span class="line">    time.sleep(<span class="number">2</span>)</span><br></pre></td></tr></tbody></table></figure><h1 id="5-用户的粉丝数"><a href="#5-用户的粉丝数" class="headerlink" title="5. 用户的粉丝数"></a>5. 用户的粉丝数</h1><p><em>只能获取一页，b 站最多是五页，多了就会有限制</em></p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">uid = input(<span class="string">'请输入查找的up主的uid:'</span>)</span><br><span class="line">url = <span class="string">'https://api.bilibili.com/x/relation/followers?vmid='</span> + \</span><br><span class="line">    uid + <span class="string">'&amp;ps=0&amp;order=desc&amp;jsonp=jsonp'</span></span><br><span class="line"></span><br><span class="line">html = requests.get(url).content.decode()</span><br><span class="line">dic_html = json.loads(html)</span><br><span class="line"></span><br><span class="line">index_order = dic_html[<span class="string">'data'</span>][<span class="string">'list'</span>]</span><br><span class="line">mids, mtimes, unames, signs = [], [], [], []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> index_order:</span><br><span class="line">    mid = i[<span class="string">'mid'</span>]</span><br><span class="line">    mids.append(mid)</span><br><span class="line">    mtime = i[<span class="string">'mtime'</span>]</span><br><span class="line">    mmtime = time.asctime(time.localtime(mtime))</span><br><span class="line">    mtimes.append(mmtime)</span><br><span class="line">    uname = i[<span class="string">'uname'</span>]</span><br><span class="line">    unames.append(uname)</span><br><span class="line">    sign = i[<span class="string">'sign'</span>]</span><br><span class="line">    signs.append(sign)</span><br><span class="line"><span class="comment"># print(index_order)</span></span><br><span class="line"><span class="comment"># print(mids)</span></span><br><span class="line">headers = [<span class="string">'uid'</span>, <span class="string">'注册时间'</span>, <span class="string">'up姓名'</span>, <span class="string">'个性签名'</span>]</span><br><span class="line">rows = []</span><br><span class="line">j = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(len(mids)):</span><br><span class="line">    rows.append([mids[j], mtimes[j], unames[j], signs[j]])</span><br><span class="line"></span><br><span class="line">main_path = <span class="string">'E:\\learn\\py\\git\\spider\\spider_learn\\bilibili\\bilibili_api\\csv'</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(main_path):</span><br><span class="line">    os.makedirs(main_path)</span><br><span class="line"></span><br><span class="line">dir = <span class="string">'E:\\learn\\py\\git\\spider\\spider_learn\\bilibili\\bilibili_api\\csv\\'</span> + \</span><br><span class="line">    <span class="string">'follers'</span> + <span class="string">'.csv'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(dir, <span class="string">'w'</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    fb = csv.writer(f)</span><br><span class="line">    fb.writerow(headers)</span><br><span class="line">    fb.writerows(rows)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(<span class="string">'----最多只显示一页的粉丝数，也就是50个----'</span>)</span><br><span class="line">print(<span class="string">f'共有<span class="subst">{len(mids)}</span>个粉丝'</span>)</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 技术力 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Bilibili </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python中WordCloud库的学习</title>
      <link href="/2020/02/13/python-wordcloud/"/>
      <url>/2020/02/13/python-wordcloud/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><p>安装: <code>pip install WordCloud</code></p><h1 id="1-wordcloud-代码-英文"><a href="#1-wordcloud-代码-英文" class="headerlink" title="1. wordcloud 代码(英文)"></a>1. wordcloud 代码(英文)</h1><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> wordcloud <span class="keyword">import</span> WordCloud</span><br><span class="line"><span class="keyword">import</span> PIL .Image <span class="keyword">as</span> image</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np <span class="comment"># 自定义图片</span></span><br><span class="line"></span><br><span class="line">dir = <span class="string">'./bi.txt'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(dir) <span class="keyword">as</span> fp:</span><br><span class="line">    text = fp.read()</span><br><span class="line">    <span class="comment"># print(text)</span></span><br><span class="line">    <span class="comment"># exit()</span></span><br><span class="line">    mask = np.array(image.open(<span class="string">'F:\download\\1.png'</span>))   <span class="comment">#自定义词云形状</span></span><br><span class="line">    WordCloud = WordCloud(</span><br><span class="line">        mask = mask,</span><br><span class="line">    ).generate(text)</span><br><span class="line">    image_produce = WordCloud.to_image()</span><br><span class="line">    image_produce.show()        <span class="comment">#  生成的文件在：C:\Users\20180\AppData\Local\Temp\jieba.cache中</span></span><br></pre></td></tr></tbody></table></figure><h1 id="2-wordcloud-代码实现-中文"><a href="#2-wordcloud-代码实现-中文" class="headerlink" title="2. wordcloud 代码实现(中文)"></a>2. wordcloud 代码实现(中文)</h1><ul><li><strong>jieba 库</strong></li></ul><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> wordcloud <span class="keyword">import</span> WordCloud</span><br><span class="line"><span class="keyword">import</span> PIL .Image <span class="keyword">as</span> image</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np <span class="comment"># 自定义图片</span></span><br><span class="line"><span class="keyword">import</span> jieba <span class="comment"># 中文</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">trans_cn</span><span class="params">(text)</span>:</span></span><br><span class="line">    word_list = jieba.cut(text)</span><br><span class="line">    result = <span class="string">' '</span>.join(word_list)</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line">dir = <span class="string">'./bi.txt'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(dir) <span class="keyword">as</span> fp:</span><br><span class="line">    text = fp.read()</span><br><span class="line">    <span class="comment"># print(text)</span></span><br><span class="line">    <span class="comment"># exit()</span></span><br><span class="line">    text = trans_cn(text)</span><br><span class="line">    mask = np.array(image.open(<span class="string">'F:\download\\1.png'</span>))</span><br><span class="line">    WordCloud = WordCloud(</span><br><span class="line">        mask = mask,</span><br><span class="line">        font_path =<span class="string">'C:\\windows\\Fonts\\msyh.ttc'</span></span><br><span class="line">    ).generate(text)</span><br><span class="line">    image_produce = WordCloud.to_image()</span><br><span class="line">    image_produce.show()</span><br></pre></td></tr></tbody></table></figure><blockquote><p>参考<a href="https://www.jianshu.com/p/c986f5017ca7" target="_blank" rel="noopener">简书网站</a></p></blockquote><h1 id="3-将-python-词云生成的图片保存下来"><a href="#3-将-python-词云生成的图片保存下来" class="headerlink" title="3. 将 python 词云生成的图片保存下来"></a>3. 将 python 词云生成的图片保存下来</h1><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jieba</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> wordcloud <span class="keyword">import</span> WordCloud</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">"./bi.txt"</span>) <span class="keyword">as</span> fp:</span><br><span class="line">    txt = fp.read()  <span class="comment"># 读取文本</span></span><br><span class="line"></span><br><span class="line">words = jieba.lcut(txt)  <span class="comment"># 精确分词</span></span><br><span class="line"></span><br><span class="line">nextword = <span class="string">' '</span>.join(words)    <span class="comment">#空格连接字符</span></span><br><span class="line"></span><br><span class="line">wordshow = WordCloud(background_color=<span class="string">'white'</span>,</span><br><span class="line">                     width=<span class="number">800</span>,</span><br><span class="line">                     height=<span class="number">800</span>,</span><br><span class="line">                     max_words=<span class="number">800</span>,</span><br><span class="line">                     max_font_size=<span class="number">100</span>,</span><br><span class="line">                     font_path=<span class="string">"msyh.ttc"</span>,    <span class="comment">#用微软雅黑作为字体显示效果</span></span><br><span class="line"></span><br><span class="line">                     ).generate(nextword)</span><br><span class="line"></span><br><span class="line">wordshow.to_file(<span class="string">'bilibili_rank.png'</span>)  <span class="comment">#转换成图片</span></span><br></pre></td></tr></tbody></table></figure><blockquote><p><a href="https://blog.csdn.net/qq_41709494/article/details/89213176" target="_blank" rel="noopener">参考网站</a></p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 学习力 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python中Pyinstaller库的学习</title>
      <link href="/2020/02/13/python-pyinstaller/"/>
      <url>/2020/02/13/python-pyinstaller/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><p><strong>安装</strong><br><strong><code>pip3 install pyinstaller</code></strong></p><!--more--><h1 id="1-Pyinstaller-的使用"><a href="#1-Pyinstaller-的使用" class="headerlink" title="1. Pyinstaller 的使用"></a>1. Pyinstaller 的使用</h1><h2 id="1-1-打开-PowerShell-窗口"><a href="#1-1-打开-PowerShell-窗口" class="headerlink" title="1.1 打开 PowerShell 窗口"></a>1.1 打开 PowerShell 窗口</h2><ul><li>在你的 Python 程序文件夹上（不点进去）按住 shift 并且右键，在弹出的选项中点击”在此处打开命令行窗口”</li><li>或者先进入命令行窗口，然后使用 cd 指令进入程序文件夹，示例：<br><code>cd G:\工程储存\Python工程\love</code></li></ul><h2 id="1-2-输入以下指令，开始打包"><a href="#1-2-输入以下指令，开始打包" class="headerlink" title="1.2 输入以下指令，开始打包"></a>1.2 输入以下指令，开始打包</h2><p><code>pyinstaller -F -w (-i icofile) filename</code></p><ul><li>filename 表示你的 Python 程序文件名</li><li>-w 表示隐藏程序运行时的命令行窗口(不加-w 会有黑色窗口)</li><li>括号内的为可选参数，-i icofile 表示给程序加上图标，图标必须为.ico 格式<br><em>icofile 表示图标的位置，建议直接放在程序文件夹里面，这样子打包的时候直接写文件名就好</em></li><li>输入示例：<br><code>pyinstaller -F -w -i favicon love.py</code></li><li>然后我们进入到程序目录里面会再看到一个名称为 dist 目录，打包好的 exe 程序就在里面</li></ul><h2 id="1-3-pyinstaller-相关参数"><a href="#1-3-pyinstaller-相关参数" class="headerlink" title="1.3 pyinstaller 相关参数"></a>1.3 pyinstaller 相关参数</h2><ul><li><p>-F, –onefile 打包一个单个文件，如果你的代码都写在一个.py 文件的话，可以用这个，如果是多个.py 文件就别用</p></li><li><p>-D, –onedir 打包多个文件，在 dist 中生成很多依赖文件，适合以框架形式编写工具代码，我个人比较推荐这样，代码易于维护</p></li><li><p>-K, –tk 在部署时包含 TCL/TK</p></li><li><p>-a, –ascii 不包含编码.在支持 Unicode 的 python 版本上默认包含所有的编码.</p></li><li><p>-d, –debug 产生 debug 版本的可执行文件</p></li><li><p>-w,–windowed,–noconsole 使用 Windows 子系统执行.当程序启动的时候不会打开命令行(只对 Windows 有效)</p></li><li><p>-c,–nowindowed,–console 使用控制台子系统执行(默认)(只对 Windows 有效)</p></li><li><p>-s,–strip 可执行文件和共享库将 run through strip.注意 Cygwin 的 strip 往往使普通的 win32 Dll 无法使用.</p></li><li><p>-X, –upx 如果有 UPX 安装(执行 Configure.py 时检测),会压缩执行文件(Windows 系统中的 DLL 也会)(参见 note)</p></li><li><p>-o DIR, –out=DIR 指定 spec 文件的生成目录,如果没有指定,而且当前目录是 PyInstaller 的根目录,会自动创建一个用于输出(spec 和生成的可执行文件)的目录.如果没有指定,而当前目录不是 PyInstaller 的根目录,则会输出到当前的目录下.</p></li><li><p>-p DIR, –path=DIR 设置导入路径(和使用 PYTHONPATH 效果相似).可以用路径分割符(Windows 使用分号,Linux 使用冒号)分割,指定多个目录.也可以使用多个-p 参数来设置多个导入路径，让 pyinstaller 自己去找程序需要的资源</p></li><li><p>–icon=&lt;FILE.ICO&gt;<br>将 file.ico 添加为可执行文件的资源(只对 Windows 系统有效)，改变程序的图标 pyinstaller -i ico 路径 xxxxx.py</p></li><li><p>–icon=&lt;FILE.EXE,N&gt; 将 file.exe 的第 n 个图标添加为可执行文件的资源(只对 Windows 系统有效)</p></li><li><p>-v FILE, –version=FILE 将 verfile 作为可执行文件的版本资源(只对 Windows 系统有效)</p></li><li><p>-n NAME, –name=NAME 可选的项目(产生的 spec 的)名字.如果省略,第一个脚本的主文件名将作为 spec 的名字</p></li></ul><blockquote><p><a href="https://blog.csdn.net/qq_33462307/article/details/90479045" target="_blank" rel="noopener">参考 CSDN</a></p></blockquote><h1 id="2-Pyinstaller-的问题"><a href="#2-Pyinstaller-的问题" class="headerlink" title="2. Pyinstaller 的问题"></a>2. Pyinstaller 的问题</h1><h2 id="2-1-Fail-to-execute-scrip-XXX"><a href="#2-1-Fail-to-execute-scrip-XXX" class="headerlink" title="2.1 Fail to execute scrip XXX"></a>2.1 Fail to execute scrip XXX</h2><p><strong>使用了<code>pyinstaller -F -w code.py</code>打包以后，发现打不开</strong></p><p><em>解决不了啊啊啊啊</em></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 学习力 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTTP协议的介绍</title>
      <link href="/2020/02/13/learn-http/"/>
      <url>/2020/02/13/learn-http/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><h2 id="1-特点"><a href="#1-特点" class="headerlink" title="1. 特点"></a>1. 特点</h2><ul><li>HTTP 基于 TCP/IP 协议：http 协议是基于 TCP/IP 协议之上的应用层协议</li><li>HTTP 是无连接：无连接的含义是限制每次连接只处理一个请求。服务器处理完客户的请求，并收到客户的应答后，即断开连接。采用这种方式可以节省传输时间</li><li>HTTP 是基于请求－响应模式：HTTP 协议规定,请求从客户端发出,最后服务器端响应该请求并 返回</li><li>HTTP 是无状态保存：HTTP 协议是无状态协议。无状态是指协议对于事务处理没有记忆能力。缺少状态意味着如果后续处理需要前面的信息，则它必须重传，这样可能导致每次连接传送的数据量增大。另一方面，在服务器不需要先前信息时它的应答就较快</li></ul><h2 id="2-URL"><a href="#2-URL" class="headerlink" title="2. URL"></a>2. URL</h2><p>HTTP 使用统一资源标识符（Uniform Resource Identifiers, URI）来传输数据和建立连接。URL 是一种特殊类型的 URI，包含了用于查找某个资源的足够的信息</p><p><strong>例子解析</strong>：<em><a href="http://www.aspxfans.com:8080/news/index.asp?boardID=5&amp;ID=24618&amp;page=1#name" target="_blank" rel="noopener">http://www.aspxfans.com:8080/news/index.asp?boardID=5&amp;ID=24618&amp;page=1#name</a></em></p><ul><li>协议部分：该 URL 的协议部分为“http：”</li><li>域名部分：该 URL 的域名部分为“<a href="http://www.aspxfans.com”" target="_blank" rel="noopener">www.aspxfans.com”</a></li><li>端口部分：跟在域名后面的是端口，域名和端口之间使用“:”作为分隔符</li><li>虚拟目录部分：从域名后的第一个“/”开始到最后一个“/”为止，是虚拟目录部分。虚拟目录也不是一个 URL 必须的部分。本例中的虚拟目录是“/news/”</li><li>文件名部分：从域名后的最后一个“/”开始到“？”为止，是文件名部分，如果没有“?”,则是从域名后的最后一个“/”开始到“#”为止，是文件部分，如果没有“？”和“#”，那么从域名后的最后一个“/”开始到结束，都是文件名部分。本例中的文件名是“index.asp”。文件名部分也不是一个 URL 必须的部分，如果省略该部分，则使用默认的文件名</li><li>锚部分：从“#”开始到最后，都是锚部分。本例中的锚部分是“name”。锚部分也不是一个 URL 必须的部分</li><li>参数部分：从“？”开始到“#”为止之间的部分为参数部分，又称搜索部分、查询部分。本例中的参数部分为“boardID=5&amp;ID=24618&amp;page=1”。参数可以允许有多个参数，参数与参数之间用“&amp;”作为分隔符</li></ul><h2 id="3-Request"><a href="#3-Request" class="headerlink" title="3. Request"></a>3. Request</h2><p><img src="/img/http/http_request.png" alt="request解析图"></p><hr><p><strong>常见请求头</strong></p><ul><li>accept:浏览器通过这个头告诉服务器，他支持的数据类</li><li>Accept-Charset:浏览器通过这个告诉服务器，他锁支持的字符集</li><li>Accept-Encoding:浏览器通过这个告诉服务器，他支持的压缩格式</li><li>Accept-Language:浏览器通过这个告诉服务器，他的语言环境</li><li>Host：浏览器通过这个告诉服务器，像访问那台主机</li><li>If-Modified-Since:浏览器通过这个头告诉服务器，缓存数据的时间</li><li>Referer：浏览器通过这个头告诉服务器，客户机是从哪个页面来的（防盗链）</li><li>Connection:浏览器通过这个头告诉服务器，请求完后是断开连接还是维持连接</li><li>X-Requested-With:XMLHttpResquest 代表通过 ajax 方式进行访问的</li><li>User-Agent:请求载体的身份标识</li></ul><h2 id="4-Response"><a href="#4-Response" class="headerlink" title="4. Response"></a>4. Response</h2><p><img src="/img/http/http_response.png" alt="response解析图"></p><hr><p><strong>常见的响应头信息</strong></p><ul><li>Location：服务器通过这个头，来告诉浏览器跳转到哪里</li><li>Server:服务器通过这个头，告诉路浏览器服务器的型号</li><li>Content-Encoding:服务器通过这个头，告诉浏览器数据压缩的格式</li><li>Content-Length:服务器通过这个头，告诉浏览器会送数据的长度</li><li>Content-Language:服务器通过这个头，告诉浏览器语言环境</li><li>Content-Type:服务器通过这个头，告诉浏览器回送数据的类型</li><li>Refresh:服务器通过这个头，告诉浏览器定时刷新</li><li>Content-Disposition:服务器通过这个头，告诉浏览器以下载方式打开数据</li><li>Transfer-Encoding:服务器通过这个头，告诉浏览器数据是以块方式回送的</li><li>Expires:-1 控制浏览器不要缓存</li><li>Cache-Control:no-cache</li><li>Pragma: no-cache</li></ul><p><strong>响应状态码</strong></p><table><thead><tr><th align="center"></th><th align="center">类别</th><th align="center">原因短语</th></tr></thead><tbody><tr><td align="center">1xx</td><td align="center">Informational(信息性状态码)</td><td align="center">接受的请求正在处理</td></tr><tr><td align="center">2xx</td><td align="center">Success(成功状态码)</td><td align="center">请求正常处理完毕</td></tr><tr><td align="center">3xx</td><td align="center">Redirection(重定向状态码)</td><td align="center">需要进行附加操作以完成请求</td></tr><tr><td align="center">4xx</td><td align="center">Client Error(客户端错误状态码)</td><td align="center">服务器无法处理请求</td></tr><tr><td align="center">5xx</td><td align="center">Server Error(服务器错误状态码)</td><td align="center">服务器处理请求出错</td></tr></tbody></table><blockquote><p><a href="https://baike.baidu.com/item/HTTP%E7%8A%B6%E6%80%81%E7%A0%81/5053660?fr=aladdin" target="_blank" rel="noopener">百度百科详细对比表</a></p></blockquote><h2 id="5-HTTPS-协议"><a href="#5-HTTPS-协议" class="headerlink" title="5. HTTPS 协议"></a>5. HTTPS 协议</h2><p>HTTPS (Secure Hypertext Transfer Protocol)安全超文本传输协议，HTTPS 是在 HTTP 上建立 SSL 加密层，并对传输数据进行加密，是 HTTP 协议的安全版<br><img src="/img/http/https.png" alt="https"></p><blockquote><p><a href="https://www.cnblogs.com/angle6-liu/p/10459132.html" target="_blank" rel="noopener">参考教程</a></p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 学习力 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spider </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>APP share</title>
      <link href="/2020/02/12/yq-app/"/>
      <url>/2020/02/12/yq-app/</url>
      
        <content type="html"><![CDATA[<h2 id="1-小说"><a href="#1-小说" class="headerlink" title="1. 小说"></a>1. 小说</h2><blockquote><p><a href="https://www.lanzous.com/b00z87jid" target="_blank" rel="noopener">小说蓝奏云</a></p><blockquote><p>密码  <strong>csdw</strong></p></blockquote></blockquote><h3 id="①-厚墨"><a href="#①-厚墨" class="headerlink" title="① 厚墨"></a>① 厚墨</h3><p>这个版本<strong>1.0.1</strong>的厚墨是有排行榜的版本（现在的厚墨无法自定义更多的排行榜，不知道以后,楚观大佬还会不会加）</p><p>现在的版本<strong>1.2.4</strong>排行榜有了，而且书源添加非常方便，<strong>老版本的书源可能都快删完了</strong>，就没了，<strong>如果想用老版本</strong>，<strong>可以自己去写书源</strong>，我说好的学一学新版的书源，结果事情太多就慢慢的忘了hhh</p><hr><h2 id="2-漫画"><a href="#2-漫画" class="headerlink" title="2. 漫画"></a>2. 漫画</h2><blockquote><p><a href="https://www.lanzous.com/b00z87jje" target="_blank" rel="noopener">漫画蓝奏云</a></p><blockquote><p>密码  <strong>18n5</strong></p></blockquote></blockquote><h3 id="①-Tachiyomi"><a href="#①-Tachiyomi" class="headerlink" title="① Tachiyomi"></a>① Tachiyomi</h3><p>很好用的一款，但有的插件搜索需要魔法上网</p><h3 id="②-异次元"><a href="#②-异次元" class="headerlink" title="② 异次元"></a>② 异次元</h3><hr><h2 id="3-动漫"><a href="#3-动漫" class="headerlink" title="3. 动漫"></a>3. 动漫</h2><blockquote><p><a href="https://www.lanzous.com/b00z87l3a" target="_blank" rel="noopener">动漫蓝奏云</a></p><blockquote><p>密码  <strong>7pjp</strong></p></blockquote></blockquote><h3 id="①-嘀哩嘀哩"><a href="#①-嘀哩嘀哩" class="headerlink" title="① 嘀哩嘀哩"></a>① 嘀哩嘀哩</h3><p>可以搜到各种动漫</p><hr><h2 id="4-搜索"><a href="#4-搜索" class="headerlink" title="4. 搜索"></a>4. 搜索</h2><blockquote><p><a href="https://www.lanzous.com/b00z87l5c" target="_blank" rel="noopener">搜索蓝奏云</a></p><blockquote><p>密码  <strong>at7i</strong></p></blockquote></blockquote><h3 id="①-云搜索"><a href="#①-云搜索" class="headerlink" title="① 云搜索"></a>① 云搜索</h3><p>UI 美观，可以搜到各种 app</p><h3 id="②-TorrSE"><a href="#②-TorrSE" class="headerlink" title="② TorrSE"></a>② TorrSE</h3><p>很好用的磁力搜索软件</p><h3 id="③-网盘搜索"><a href="#③-网盘搜索" class="headerlink" title="③ 网盘搜索"></a>③ 网盘搜索</h3><p>搜百度网盘资源的</p><hr><h2 id="5-下载"><a href="#5-下载" class="headerlink" title="5. 下载"></a>5. 下载</h2><blockquote><p><a href="https://www.lanzous.com/b00z897gb" target="_blank" rel="noopener">搜索蓝奏云</a></p><blockquote><p>密码  <strong>6jji</strong></p></blockquote></blockquote><h3 id="①-PanDownload"><a href="#①-PanDownload" class="headerlink" title="① PanDownload"></a>① PanDownload</h3><p>最近复活的，网盘下载神器\最近好像又死了hhh</p><h3 id="②-闪电下载"><a href="#②-闪电下载" class="headerlink" title="② 闪电下载"></a>② 闪电下载</h3><p>磁力下载神器</p><hr><h2 id="6-好玩的社区"><a href="#6-好玩的社区" class="headerlink" title="6. 好玩的社区"></a>6. 好玩的社区</h2><h3 id="①-乐愚社区"><a href="#①-乐愚社区" class="headerlink" title="① 乐愚社区"></a>① <a href="https://bbs.leyuz.net/" target="_blank" rel="noopener">乐愚社区</a></h3><p>资源多，大佬多</p><blockquote><p>当然也可以下载乐愚社区自己的<a href="https://bbs.leyuz.net/downapp/2be83e0d73bb1a36df0ace7abd568867.apk" target="_blank" rel="noopener">APP</a></p></blockquote><h3 id="②-少数派"><a href="#②-少数派" class="headerlink" title="② 少数派"></a>② <a href="https://sspai.com/" target="_blank" rel="noopener">少数派</a></h3><p>真的可以学到很多知识</p><h3 id="③-Topbook"><a href="#③-Topbook" class="headerlink" title="③ Topbook"></a>③ <a href="https://topbook.cc/overview" target="_blank" rel="noopener">Topbook</a></h3><p>也是一个好玩的地方，有很多优秀的软件和技能推荐</p><h2 id="7-投屏"><a href="#7-投屏" class="headerlink" title="7. 投屏"></a>7. 投屏</h2><h3 id="①-手机投到电脑上"><a href="#①-手机投到电脑上" class="headerlink" title="① 手机投到电脑上"></a>① 手机投到电脑上</h3><p>免费开源投屏神器<a href="https://github.com/Genymobile/scrcpy" target="_blank" rel="noopener">GitHub 链接</a><br>使用方法可以<a href="https://yq010105.github.io/2020/03/02/tools-scrcpy/">看教程</a></p><p>可以把文件从电脑上传到手机上，但是却不能把手机上的文件传到电脑上</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 资源力 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Source </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python中format函数的学习</title>
      <link href="/2020/02/11/python-format/"/>
      <url>/2020/02/11/python-format/</url>
      
        <content type="html"><![CDATA[<p><strong>Python_format   一种格式化字符串函数<code>str.format()</code></strong></p><blockquote><p>参考教程<a href="https://www.runoob.com/python/att-string-format.html" target="_blank" rel="noopener">网站</a>和<a href="https://blog.csdn.net/qq_19691995/article/details/84197252" target="_blank" rel="noopener">CSDN</a></p></blockquote><a id="more"></a><p><strong>python_format</strong></p><p>   <strong><code>str.format()</code>，它增强了字符串格式化的功能</strong><br>   <strong>基本语法是通过 {} 和 : 来代替以前的 %</strong><br><strong>你也可以<code>print(f'字符{参数1}字符{参数2}字符')</code></strong></p><h2 id="1-format-函数可以接受不限个参数，位置可以不按顺序"><a href="#1-format-函数可以接受不限个参数，位置可以不按顺序" class="headerlink" title="1. format 函数可以接受不限个参数，位置可以不按顺序"></a>1. format 函数可以接受不限个参数，位置可以不按顺序</h2><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;<span class="string">"{} {}"</span>.format(<span class="string">"hello"</span>, <span class="string">"world"</span>)    <span class="comment"># 不设置指定位置，按默认顺序</span></span><br><span class="line"><span class="string">'hello world'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">"{0} {1}"</span>.format(<span class="string">"hello"</span>, <span class="string">"world"</span>)  <span class="comment"># 设置指定位置</span></span><br><span class="line"><span class="string">'hello world'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">"{1} {0} {1}"</span>.format(<span class="string">"hello"</span>, <span class="string">"world"</span>)  <span class="comment"># 设置指定位置</span></span><br><span class="line"><span class="string">'world hello world'</span></span><br></pre></td></tr></tbody></table></figure><h2 id="2-设置参数"><a href="#2-设置参数" class="headerlink" title="2. 设置参数"></a>2. 设置参数</h2><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">"网站名：{name}, 地址 {url}"</span>.format(name=<span class="string">"菜鸟教程"</span>, url=<span class="string">"www.runoob.com"</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过字典设置参数</span></span><br><span class="line">site = {<span class="string">"name"</span>: <span class="string">"菜鸟教程"</span>, <span class="string">"url"</span>: <span class="string">"www.runoob.com"</span>}</span><br><span class="line">print(<span class="string">"网站名：{name}, 地址 {url}"</span>.format(**site))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过列表索引设置参数</span></span><br><span class="line">my_list = [<span class="string">'菜鸟教程'</span>, <span class="string">'www.runoob.com'</span>]</span><br><span class="line">print(<span class="string">"网站名：{0[0]}, 地址 {0[1]}"</span>.format(my_list))  <span class="comment"># "0" 是必须的</span></span><br><span class="line"></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">网站名：菜鸟教程, 地址 www.runoob.com</span></span><br><span class="line"><span class="string">网站名：菜鸟教程, 地址 www.runoob.com</span></span><br><span class="line"><span class="string">网站名：菜鸟教程, 地址 www.runoob.com</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></tbody></table></figure><p>通过字典和列表的另一种写法</p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>hash = {<span class="string">'name'</span>:<span class="string">'hoho'</span>,<span class="string">'age'</span>:<span class="number">18</span>}</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'my name is {name},age is {age}'</span>.format(**hash)        <span class="comment">#**dict</span></span><br><span class="line"><span class="string">'my name is hoho,age is 18'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>li = [<span class="string">'hoho'</span>,<span class="number">18</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'my name is {} ,age {}'</span>.format(*li)               <span class="comment">#*[]迭代列表</span></span><br><span class="line"><span class="string">'my name is hoho ,age 18'</span></span><br></pre></td></tr></tbody></table></figure><h2 id="3-向str-format传入对象"><a href="#3-向str-format传入对象" class="headerlink" title="3. 向str.format传入对象"></a>3. 向<code>str.format</code>传入对象</h2><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AssignValue</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, value)</span>:</span></span><br><span class="line">        self.value = value</span><br><span class="line">my_value = AssignValue(<span class="number">6</span>)</span><br><span class="line">print(<span class="string">'value 为: {0.value}'</span>.format(my_value))  <span class="comment"># "0" 是可选的</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># value 为: 6</span></span><br></pre></td></tr></tbody></table></figure><h2 id="4-数字格式化"><a href="#4-数字格式化" class="headerlink" title="4. 数字格式化"></a>4. 数字格式化</h2><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(<span class="string">"{:.2f}"</span>.format(<span class="number">3.1415926</span>));</span><br><span class="line"><span class="number">3.14</span></span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th align="center">数字</th><th align="center">格式</th><th align="center">输出</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">3.1415926</td><td align="center">{:.2f}</td><td align="center">3.14</td><td align="center">保留小数点后两位</td></tr><tr><td align="center">3.1415926</td><td align="center">{:+.2f}</td><td align="center">+3.14</td><td align="center">带符号保留小数点后两位</td></tr><tr><td align="center">-1</td><td align="center">{:+.2f}</td><td align="center">-1.00</td><td align="center">带符号保留小数点后两位</td></tr><tr><td align="center">2.71828</td><td align="center">{:.0f}</td><td align="center">3</td><td align="center">不带小数</td></tr><tr><td align="center">5</td><td align="center">{:0&gt;2d}</td><td align="center">05</td><td align="center">数字补零</td></tr><tr><td align="center">5</td><td align="center">{:x&lt;4d}</td><td align="center">5xxx</td><td align="center">数字补 x (填充右边, 宽度为 4)</td></tr><tr><td align="center">10</td><td align="center">{:x&lt;4d}</td><td align="center">10xx</td><td align="center">数字补 x (填充右边, 宽度为 4)</td></tr><tr><td align="center">1000000</td><td align="center">{:,}</td><td align="center">1,000,000</td><td align="center">以逗号分隔的数字格式</td></tr><tr><td align="center">0.25</td><td align="center">{:.2%}</td><td align="center">25.00%</td><td align="center">百分比格式</td></tr><tr><td align="center">1000000000</td><td align="center">{:.2e}</td><td align="center">1.00e+09</td><td align="center">指数记法</td></tr><tr><td align="center">13</td><td align="center">{:&gt;10d}</td><td align="center">13</td><td align="center">右对齐 (默认, 宽度为 10)</td></tr><tr><td align="center">13</td><td align="center">{:&lt;10d}</td><td align="center">13</td><td align="center">左对齐 (宽度为 10)</td></tr><tr><td align="center">13</td><td align="center">{:^10d}</td><td align="center">13</td><td align="center">中间对齐 (宽度为 10)</td></tr><tr><td align="center">11</td><td align="center">‘{:b}’.format(11)</td><td align="center">1011</td><td align="center">进制</td></tr><tr><td align="center"></td><td align="center">‘{:d}’.format(11)</td><td align="center">11</td><td align="center"></td></tr><tr><td align="center"></td><td align="center">‘{:o}’.format(11)</td><td align="center">13</td><td align="center"></td></tr><tr><td align="center"></td><td align="center">‘{:x}’.format(11)</td><td align="center">b</td><td align="center"></td></tr><tr><td align="center"></td><td align="center">‘{:#x}’.format(11)</td><td align="center">0xb</td><td align="center"></td></tr><tr><td align="center"></td><td align="center">‘{:#X}’.format(11)</td><td align="center">0XB</td><td align="center"></td></tr></tbody></table><ul><li><strong>^, &lt;, &gt; 分别是居中、左对齐、右对齐，后面带宽度， : 号后面带填充的字符，只能是一个字符，不指定则默认是用空格填充</strong></li><li><strong>+ 表示在正数前显示 +，负数前显示 -； （空格）表示在正数前加空格</strong></li><li><strong>b、d、o、x 分别是二进制、十进制、八进制、十六进制</strong></li></ul><h2 id="5-此外还可以用大括号-来转义大括号"><a href="#5-此外还可以用大括号-来转义大括号" class="headerlink" title="5. 此外还可以用大括号 {} 来转义大括号"></a>5. 此外还可以用大括号 {} 来转义大括号</h2><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">print</span> (<span class="string">"{} 对应的位置是 {{0}}"</span>.format(<span class="string">"runoob"</span>))</span><br></pre></td></tr></tbody></table></figure><p>_结果为_：<strong>runoob 对应的位置是 {0}</strong></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 学习力 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自己写的几个爬虫</title>
      <link href="/2020/02/10/example-spider/"/>
      <url>/2020/02/10/example-spider/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>自己动手做的 python 爬虫</strong>   <a href="https://github.com/yq010105/spider_learn" target="_blank" rel="noopener" title="github">GitHub 链接</a><br>WARNING :逻辑混乱，语法不顺！！！</p></blockquote><a id="more"></a><h1 id="1-爬取-bilibili-每日排行榜数据"><a href="#1-爬取-bilibili-每日排行榜数据" class="headerlink" title="1. 爬取 bilibili 每日排行榜数据"></a>1. 爬取 bilibili 每日排行榜数据</h1><ul><li><strong>使用 XPath 爬取,并将数据保存到 csv 文件中</strong></li><li><strong>文件名使用该排行榜所在时间段</strong></li></ul><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"><span class="keyword">import</span> lxml.html</span><br><span class="line"></span><br><span class="line">url = <span class="string">'https://www.bilibili.com/ranking/'</span></span><br><span class="line">html = requests.get(url).content.decode()</span><br><span class="line"><span class="comment"># print(html)</span></span><br><span class="line"></span><br><span class="line">selector = lxml.html.fromstring(html)</span><br><span class="line"></span><br><span class="line">title = selector.xpath(<span class="string">'//*[@id="app"]/div[1]/div/div[1]/div[2]/div[3]/ul/li/div[2]/div[2]/a/text()'</span>)</span><br><span class="line"><span class="comment"># print(len(title))</span></span><br><span class="line"></span><br><span class="line">link = selector.xpath(<span class="string">'//*[@id="app"]/div[1]/div/div[1]/div[2]/div[3]/ul/li/div[2]/div[1]/a/@href'</span>)</span><br><span class="line"><span class="comment"># print(link[0])</span></span><br><span class="line"><span class="comment"># cover = selector.xpath('//*[@id="app"]/div[1]/div/div[1]/div[2]/div[3]/ul/li/div[2]/div[1]/a/div/img/@src')</span></span><br><span class="line"><span class="comment"># print(cover[0])</span></span><br><span class="line"></span><br><span class="line">up_name = selector.xpath(<span class="string">'//*[@id="app"]/div[1]/div/div[1]/div[2]/div[3]/ul/li/div[2]/div[2]/div[1]/a/span/text()'</span>)</span><br><span class="line"><span class="comment"># print(up_name[5])</span></span><br><span class="line">up_videoplay = selector.xpath(<span class="string">'//*[@id="app"]/div[1]/div/div[1]/div[2]/div[3]/ul/li/div[2]/div[2]/div[1]/span[1]/text()'</span>)</span><br><span class="line"></span><br><span class="line">time = selector.xpath(<span class="string">'//*[@id="app"]/div[1]/div/div[1]/div[2]/div[2]/div/span/text()'</span>)</span><br><span class="line">time_num = time[<span class="number">0</span>]</span><br><span class="line">str1 = time_num.replace(<span class="string">' 的数据综合得分，每日更新一次'</span>,<span class="string">''</span>)</span><br><span class="line">str2 = str1.replace(<span class="string">'统计所有投稿在 '</span>,<span class="string">''</span>)</span><br><span class="line">time_num2 = str2</span><br><span class="line"></span><br><span class="line">headers = [<span class="string">'up_name'</span>,<span class="string">'title'</span>,<span class="string">'link'</span>]</span><br><span class="line">rows = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">100</span>):</span><br><span class="line">    rows.append([up_name[i],title[i],link[i]])</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">f'<span class="subst">{time_num2}</span>.csv'</span>,<span class="string">'w'</span>,encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f_csv = csv.writer(f)</span><br><span class="line">    f_csv.writerow(headers)</span><br><span class="line">    f_csv.writerows(rows)</span><br></pre></td></tr></tbody></table></figure><ul><li><strong>csv 部分展示</strong><br><code>2020年02月07日 - 2020年02月10日</code></li></ul><p><img src="https://raw.githubusercontent.com/yq010105/Blog_images/master/img/bilibili_csv.png" alt="bilibili_csv"></p><h1 id="2-爬取-baidu-上搜到的图片-初级"><a href="#2-爬取-baidu-上搜到的图片-初级" class="headerlink" title="2. 爬取 baidu 上搜到的图片(初级)"></a>2. 爬取 baidu 上搜到的图片(初级)</h1><h2 id="2-1-thumbURL"><a href="#2-1-thumbURL" class="headerlink" title="2.1 thumbURL"></a>2.1 thumbURL</h2><ul><li><em>分辨率极低</em></li></ul><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">download</span><span class="params">(html)</span>:</span></span><br><span class="line">    <span class="comment">#通过正则匹配</span></span><br><span class="line">    pic_url = re.findall(<span class="string">'"thumbURL":"(.*?)",'</span>,html, re.S)</span><br><span class="line">    i = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> key <span class="keyword">in</span> pic_url:</span><br><span class="line">        print(<span class="string">"开始下载图片："</span>+key +<span class="string">"\r\n"</span>)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            pic = requests.get(key, timeout=<span class="number">10</span>)</span><br><span class="line">        <span class="keyword">except</span> requests.exceptions.ConnectionError:</span><br><span class="line">            print(<span class="string">'图片无法下载'</span>)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="comment">#保存图片路径</span></span><br><span class="line">        main_path=<span class="string">"E:/baidu/"</span> <span class="comment">#文件保存路径，如果不存在就会被重建</span></span><br><span class="line">        <span class="keyword">if</span>  <span class="keyword">not</span> os.path.exists(main_path):<span class="comment">#如果路径不存在</span></span><br><span class="line">            os.makedirs(main_path)</span><br><span class="line">        dir = <span class="string">"E:/baidu/"</span> + str(i) + <span class="string">'.jpg'</span></span><br><span class="line">        fp = open(dir, <span class="string">'wb'</span>)</span><br><span class="line">        fp.write(pic.content)</span><br><span class="line">        fp.close()</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">        url = <span class="string">'https://image.baidu.com/search/index?tn=baiduimage&amp;ipn=r&amp;ct=201326592&amp;cl=2&amp;lm=-1&amp;st=-1&amp;sf=1&amp;fmq=&amp;pv=&amp;ic=0&amp;nc=1&amp;z=&amp;se=1&amp;showtab=0&amp;fb=0&amp;width=&amp;height=&amp;face=0&amp;istype=2&amp;ie=utf-8&amp;fm=result&amp;pos=history&amp;word=siyueshinide'</span></span><br><span class="line">        result = requests.get(url)</span><br><span class="line">        download(result.text)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">        main()</span><br></pre></td></tr></tbody></table></figure><h2 id="2-2-objURL"><a href="#2-2-objURL" class="headerlink" title="2.2 objURL"></a>2.2 objURL</h2><p><em>分辨率较高，但有的图爬不了</em></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">download</span><span class="params">(html)</span>:</span></span><br><span class="line">    <span class="comment">#通过正则匹配</span></span><br><span class="line">    pic_url = re.findall(<span class="string">'"objURL":"(.*?)",'</span>,html, re.S)</span><br><span class="line">    <span class="comment"># for pic_url_li in pic_url:</span></span><br><span class="line">        <span class="comment"># pic_url_js = '{'+'"link"'+':' +pic_url_li+'}'</span></span><br><span class="line">        <span class="comment"># pic_url_py = json.loads(pic_url_li)</span></span><br><span class="line">    <span class="comment"># print(pic_url)</span></span><br><span class="line">    <span class="comment"># exit()</span></span><br><span class="line">    i = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> key <span class="keyword">in</span> pic_url:</span><br><span class="line">        print(<span class="string">"开始下载图片："</span>+key +<span class="string">"\r\n"</span>)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            pic = requests.get(key, timeout=<span class="number">10</span>)</span><br><span class="line">        <span class="keyword">except</span> requests.exceptions.ConnectionError:</span><br><span class="line">            print(<span class="string">'图片无法下载'</span>)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">except</span> requests.exceptions.ReadTimeout:</span><br><span class="line">            print(<span class="string">'requests.exceptions.ReadTimeout'</span>)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="comment">#保存图片路径</span></span><br><span class="line">        main_path=<span class="string">"E:/baidu/"</span> <span class="comment">#文件保存路径，如果不存在就会被重建</span></span><br><span class="line">        <span class="keyword">if</span>  <span class="keyword">not</span> os.path.exists(main_path):<span class="comment">#如果路径不存在</span></span><br><span class="line">            os.makedirs(main_path)</span><br><span class="line">        dir = <span class="string">"E:/baidu/"</span> + str(i) + <span class="string">'.jpg'</span></span><br><span class="line">        fp = open(dir, <span class="string">'wb'</span>)</span><br><span class="line">        fp.write(pic.content)</span><br><span class="line">        fp.close()</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">        url = <span class="string">'https://image.baidu.com/search/index?tn=baiduimage&amp;ipn=r&amp;ct=201326592&amp;cl=2&amp;lm=-1&amp;st=-1&amp;sf=1&amp;fmq=&amp;pv=&amp;ic=0&amp;nc=1&amp;z=&amp;se=1&amp;showtab=0&amp;fb=0&amp;width=&amp;height=&amp;face=0&amp;istype=2&amp;ie=utf-8&amp;fm=result&amp;pos=history&amp;word=siyueshinide'</span></span><br><span class="line">        result = requests.get(url)</span><br><span class="line">        download(result.text)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">        main()</span><br></pre></td></tr></tbody></table></figure><h2 id="2-3-baidu-面向对象"><a href="#2-3-baidu-面向对象" class="headerlink" title="2.3 baidu 面向对象"></a>2.3 baidu 面向对象</h2><ul><li>输入想爬取的关键词，自动爬取(只能下 30 张)</li></ul><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_id</span><span class="params">(search_id)</span>:</span></span><br><span class="line">    url = <span class="string">'http://image.baidu.com/search/index?tn=baiduimage&amp;ps=1&amp;ct=201326592&amp;lm=-1&amp;cl=2&amp;nc=1&amp;ie=utf-8&amp;word='</span> + search_id</span><br><span class="line">    <span class="keyword">return</span> url</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_obj</span><span class="params">()</span>:</span></span><br><span class="line">    url = get_id(search_id)</span><br><span class="line">    html = requests.get(url).content.decode()</span><br><span class="line">    obj_URL = re.findall(<span class="string">'"objURL":"(.*?)",'</span>,html,re.S)</span><br><span class="line">    <span class="keyword">return</span> obj_URL</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save_pic</span><span class="params">()</span>:</span></span><br><span class="line">    obj_url = get_obj()</span><br><span class="line">    i = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> objurl <span class="keyword">in</span> obj_url:</span><br><span class="line">        print(<span class="string">'开始下载图片'</span>+<span class="string">'\t'</span>+<span class="string">'第'</span>+str(i)+<span class="string">'张'</span>)</span><br><span class="line">        <span class="keyword">try</span> :</span><br><span class="line">            pic = requests.get(objurl,timeout = <span class="number">10</span>)</span><br><span class="line">        <span class="keyword">except</span> requests.exceptions.ConnectionError:</span><br><span class="line">            print(<span class="string">'图片无法下载'</span>)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">except</span> requests.exceptions.ReadTimeout:</span><br><span class="line">            print(<span class="string">'requests.exceptions.ReadTimeout'</span>)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">global</span> search_id</span><br><span class="line">        main_path = <span class="string">r'E:\learn\py\git\spider\spider_learn\baidu\pic\\'</span> + search_id +<span class="string">'\\'</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(main_path):</span><br><span class="line">            os.makedirs(main_path)</span><br><span class="line">        dir = <span class="string">"E:\learn\py\git\spider\spider_learn\\baidu\pic\\"</span> +search_id +<span class="string">'\\'</span>+ search_id+ str(i) + <span class="string">'.jpg'</span></span><br><span class="line">        <span class="keyword">with</span> open(dir,<span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(pic.content)</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ ==<span class="string">'__main__'</span>:</span><br><span class="line">    search_id = input(<span class="string">'请输入要下载的内容:'</span>)</span><br><span class="line">    save_pic()</span><br></pre></td></tr></tbody></table></figure><h2 id="2-4-baidu-more"><a href="#2-4-baidu-more" class="headerlink" title="2.4 baidu_more"></a>2.4 baidu_more</h2><ul><li><strong>进一步升级，可以爬任意数量图片</strong></li></ul><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> multiprocessing.dummy <span class="keyword">import</span> Pool</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_urls</span><span class="params">(search_id)</span>:</span></span><br><span class="line">    total = (input(<span class="string">'请输入要几页----30张一页----：'</span>))</span><br><span class="line">    url = <span class="string">'http://image.baidu.com/search/index?tn=baiduimage&amp;ps=1&amp;ct=201326592&amp;lm=-1&amp;cl=2&amp;nc=1&amp;ie=utf-8&amp;word='</span> + search_id+ <span class="string">'&amp;pn='</span></span><br><span class="line">    t = <span class="number">0</span></span><br><span class="line">    URLS = []</span><br><span class="line">    <span class="keyword">while</span> t &lt; int(total)*<span class="number">30</span>:</span><br><span class="line">        URL = url + str(t)</span><br><span class="line">        t = t + <span class="number">30</span></span><br><span class="line">        URLS.append(URL)</span><br><span class="line">    <span class="keyword">return</span> URLS</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_obj</span><span class="params">(url)</span>:</span></span><br><span class="line">    html = requests.get(url).content.decode()</span><br><span class="line">    obj_URL = re.findall(<span class="string">'"objURL":"(.*?)",'</span>,html,re.S)</span><br><span class="line">    <span class="keyword">return</span> obj_URL</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save_pic</span><span class="params">()</span>:</span></span><br><span class="line">    pool=Pool(<span class="number">5</span>)</span><br><span class="line">    objurls = pool.map(get_obj,URLS)</span><br><span class="line">    i = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> objurl <span class="keyword">in</span> objurls:</span><br><span class="line">        <span class="keyword">for</span> obj <span class="keyword">in</span> objurl:</span><br><span class="line">            print(<span class="string">'开始下载图片'</span>+<span class="string">'\t'</span>+<span class="string">'第'</span>+str(i)+<span class="string">'张'</span>)</span><br><span class="line">            <span class="keyword">try</span> :</span><br><span class="line">                pic = requests.get(obj,timeout = <span class="number">10</span>)</span><br><span class="line">            <span class="keyword">except</span> requests.exceptions.ConnectionError:</span><br><span class="line">                print(<span class="string">'图片无法下载'</span>)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">except</span> requests.exceptions.ReadTimeout:</span><br><span class="line">                print(<span class="string">'requests.exceptions.ReadTimeout'</span>)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">global</span> search_id</span><br><span class="line">            main_path = patha +<span class="string">'\\'</span> + search_id +<span class="string">'\\'</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(main_path):</span><br><span class="line">                os.makedirs(main_path)</span><br><span class="line">            dir = main_path + search_id+ str(i) + <span class="string">'.jpg'</span></span><br><span class="line">            <span class="keyword">with</span> open(dir,<span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">                f.write(pic.content)</span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ ==<span class="string">'__main__'</span>:</span><br><span class="line">    search_id = input(<span class="string">'请输入要下载的内容:'</span>)</span><br><span class="line">    URLS = get_urls(search_id)</span><br><span class="line">    patha = input(<span class="string">'输入文件保存路径----示例:E:\\baidu----:'</span>)</span><br><span class="line">    save_pic()</span><br></pre></td></tr></tbody></table></figure><h1 id="3-爬取-ins-上的图片-初级版"><a href="#3-爬取-ins-上的图片-初级版" class="headerlink" title="3. 爬取 ins 上的图片(初级版)"></a>3. 爬取 ins 上的图片(初级版)</h1><ul><li><em>分辨率低</em></li></ul><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> lxml.html</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取src</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_src</span><span class="params">()</span>:</span></span><br><span class="line">    url = <span class="string">'https://www.instagram.com/baaaakuuuu'</span></span><br><span class="line">    html = requests.get(url).content.decode()</span><br><span class="line">    selector = lxml.html.fromstring(html)</span><br><span class="line">    script = selector.xpath(<span class="string">'/html/body/script[1]/text()'</span>)[<span class="number">0</span>].strip()</span><br><span class="line">    <span class="comment"># print(script)</span></span><br><span class="line">    <span class="comment"># print(type(script))       #str</span></span><br><span class="line">    <span class="comment"># exit()</span></span><br><span class="line">    <span class="comment"># for script_in in script :</span></span><br><span class="line">        <span class="comment"># try:</span></span><br><span class="line">        <span class="comment">#     script_dic = json.loads(script_in)</span></span><br><span class="line">        <span class="comment"># print(script_dic)</span></span><br><span class="line">    src = re.findall(<span class="string">r'"thumbnail_resources":\[(.*?)\]'</span>,script,re.S)</span><br><span class="line">    <span class="comment"># print(src[0]) #str</span></span><br><span class="line">    <span class="comment"># print(type(src[0]))</span></span><br><span class="line">    <span class="comment"># exit()</span></span><br><span class="line">    <span class="keyword">return</span> src</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取图片链接</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_picurl</span><span class="params">()</span>:</span></span><br><span class="line">    src = get_src()</span><br><span class="line">    <span class="comment"># print(src)</span></span><br><span class="line">    <span class="comment"># exit()</span></span><br><span class="line">    pic_url_lst = []</span><br><span class="line">    <span class="keyword">for</span> src_ls <span class="keyword">in</span> src :         <span class="comment">#"config_height":480},{ ... ,"config_width":640,"config_height":640}</span></span><br><span class="line">        thumb = re.findall(<span class="string">r'"config_height":480},{(.*?),"config_width":640,"config_height":640}'</span>,src_ls)[<span class="number">0</span>]</span><br><span class="line">        thumb_json = <span class="string">'{'</span> + thumb + <span class="string">'}'</span></span><br><span class="line">        <span class="comment"># print(thumb_json)</span></span><br><span class="line">        <span class="comment"># exit()</span></span><br><span class="line">        thumb_py = json.loads(thumb_json)</span><br><span class="line">        pic_url = thumb_py[<span class="string">'src'</span>]</span><br><span class="line">        <span class="comment"># print(pic_url)</span></span><br><span class="line">        <span class="comment"># exit()</span></span><br><span class="line">        pic_url_lst.append(pic_url)</span><br><span class="line">    <span class="comment"># print(pic_url_lst)</span></span><br><span class="line">    <span class="comment"># exit()</span></span><br><span class="line">    <span class="keyword">return</span> pic_url_lst</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将图片链接保存</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save_pic</span><span class="params">()</span>:</span></span><br><span class="line">    pic_url_lst = get_picurl()</span><br><span class="line">    i = <span class="number">1</span></span><br><span class="line">    <span class="comment"># print(pic_url_lst)</span></span><br><span class="line">    <span class="comment"># exit()</span></span><br><span class="line">    <span class="keyword">for</span> pic_con <span class="keyword">in</span> pic_url_lst:</span><br><span class="line">        <span class="comment"># print(pic_con)</span></span><br><span class="line">        <span class="comment"># exit()</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            pic = requests.get(pic_con, timeout=<span class="number">10</span>)</span><br><span class="line">            main_path = <span class="string">'E:/ins/'</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(main_path):</span><br><span class="line">                os.makedirs(main_path)</span><br><span class="line">            path = <span class="string">'E:/ins/'</span> + <span class="string">'baku'</span> + str(i) + <span class="string">'.jpg'</span></span><br><span class="line">            <span class="keyword">with</span> open(path,<span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">                f.write(pic.content)</span><br><span class="line">                print(<span class="string">f'第<span class="subst">{i}</span>张已下载'</span>)</span><br><span class="line">            i +=<span class="number">1</span></span><br><span class="line">        <span class="keyword">except</span> requests.exceptions.ConnectionError:        <span class="comment">#requests.exceptions.ConnectionError</span></span><br><span class="line">            print(<span class="string">'图片无法下载'</span>)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">save_pic()</span><br></pre></td></tr></tbody></table></figure><h1 id="4-爬取-Wallhaven-上的图片"><a href="#4-爬取-Wallhaven-上的图片" class="headerlink" title="4. 爬取 Wallhaven 上的图片"></a>4. 爬取 Wallhaven 上的图片</h1><h2 id="4-1-龟速爬取-只是用来爬了一下博客需要的图片-hhh"><a href="#4-1-龟速爬取-只是用来爬了一下博客需要的图片-hhh" class="headerlink" title="4.1 龟速爬取,只是用来爬了一下博客需要的图片 hhh"></a>4.1 龟速爬取,只是用来爬了一下博客需要的图片 hhh</h2><p><em>爬取速度慢，要等半天才能开始保存文件，应该是我代码结构的问题，以后再做优化</em></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> lxml.html</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">headers = {<span class="string">"User-Agent"</span>:<span class="string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36"</span>}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_url</span><span class="params">()</span>:</span></span><br><span class="line">    pages = input(<span class="string">'输入页数：'</span>)</span><br><span class="line">    <span class="comment"># pages = '1'</span></span><br><span class="line">    url_pics = []</span><br><span class="line">    page = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> page &lt;= int(pages):</span><br><span class="line">        url = <span class="string">'https://wallhaven.cc/search?categories=010&amp;purity=100&amp;resolutions=1280x800&amp;sorting=relevance&amp;order=desc&amp;page='</span> + str(page)</span><br><span class="line">        html = requests.get(url,headers = headers).content.decode()</span><br><span class="line">    <span class="comment"># print(html)</span></span><br><span class="line">    <span class="comment"># exit()</span></span><br><span class="line">        selector = lxml.html.fromstring(html)</span><br><span class="line"></span><br><span class="line">        url_pic = selector.xpath(<span class="string">'//*[@id="thumbs"]/section/ul/li/figure/a/@href'</span>)</span><br><span class="line">        url_pics.append(url_pic)</span><br><span class="line">        page += <span class="number">1</span></span><br><span class="line">    print(<span class="string">'得到了内层url'</span>)</span><br><span class="line">    <span class="keyword">return</span> url_pics</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_pic</span><span class="params">()</span>:</span></span><br><span class="line">    url_pics = get_url()</span><br><span class="line">    img_urls = []</span><br><span class="line">    <span class="keyword">for</span> urlst <span class="keyword">in</span> url_pics:</span><br><span class="line">        <span class="keyword">for</span> url <span class="keyword">in</span> urlst:</span><br><span class="line">            htmlp = requests.get(url,headers = headers).content.decode()</span><br><span class="line">            <span class="comment"># print(htmlp)</span></span><br><span class="line">            <span class="comment"># exit()</span></span><br><span class="line">            img_url = re.findall(<span class="string">r'"wallpaper" src="(.*?)"'</span>,htmlp,re.S)[<span class="number">0</span>]</span><br><span class="line">            img_urls.append(img_url)</span><br><span class="line">    print(<span class="string">'得到图片的url'</span>)</span><br><span class="line">    <span class="keyword">return</span> img_urls</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_img</span><span class="params">(imgurl_list)</span>:</span></span><br><span class="line">    i = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> url <span class="keyword">in</span> imgurl_list:</span><br><span class="line">        print(<span class="string">'开始下载图片'</span>+<span class="string">'\t'</span>+<span class="string">'第'</span>+str(i)+<span class="string">'张'</span>)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            pic = requests.get(url, timeout=<span class="number">10</span>)</span><br><span class="line">        <span class="keyword">except</span> requests.exceptions.ConnectionError:</span><br><span class="line">            print(<span class="string">'图片无法下载'</span>)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">except</span> requests.exceptions.ReadTimeout:</span><br><span class="line">            print(<span class="string">'requests.exceptions.ReadTimeout'</span>)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">        main_path = <span class="string">r'E:\\wallhaven\\'</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(main_path):</span><br><span class="line">            os.makedirs(main_path)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        dir = <span class="string">'E:\\wallhaven\\'</span> + str(i) +<span class="string">'.jpg'</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">with</span> open(dir, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(pic.content)</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    imgurl_list = get_pic()</span><br><span class="line">    get_img(imgurl_list)</span><br></pre></td></tr></tbody></table></figure><h2 id="4-2-多线程爬取"><a href="#4-2-多线程爬取" class="headerlink" title="4.2 多线程爬取"></a>4.2 多线程爬取</h2><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">遇到了一个bug，等到bug解决再写上来</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 技术力 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Spider </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python-Note</title>
      <link href="/2020/02/09/note-python/"/>
      <url>/2020/02/09/note-python/</url>
      
        <content type="html"><![CDATA[<p><strong>有一定的 python 自学基础，基础不扎实</strong><br><strong>python，边学爬虫，边把不会的 python 知识不全</strong></p><a id="more"></a><h1 id="1-文件管理（txt）"><a href="#1-文件管理（txt）" class="headerlink" title="1. 文件管理（txt）"></a>1. 文件管理（txt）</h1><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fd = open(<span class="string">'file.txt'</span>,<span class="string">'w'</span>,encoding=<span class="string">'utf-8'</span>)      <span class="comment">#utf-8 or GBK</span></span><br><span class="line">fd.write(content)</span><br><span class="line">fd.close()</span><br></pre></td></tr></tbody></table></figure><p>其中 content 可以是字符串，变量，\t ……</p><hr><table><thead><tr><th align="center">r</th><th align="center">w</th><th align="center">a</th></tr></thead><tbody><tr><td align="center">只读</td><td align="center">覆盖写</td><td align="center">添加写</td></tr></tbody></table><h2 id="1-1-文件的readlines和readline"><a href="#1-1-文件的readlines和readline" class="headerlink" title="1.1 文件的readlines和readline"></a>1.1 文件的readlines和readline</h2><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">f.readlines()<span class="comment"># 全部读取最后返回一个列表存所有的类,每行后面都会带有“\n”</span></span><br><span class="line">f.readline()<span class="comment"># 读取一列数据</span></span><br></pre></td></tr></tbody></table></figure><h1 id="2-csv-文件"><a href="#2-csv-文件" class="headerlink" title="2. csv 文件"></a>2. csv 文件</h1><h2 id="2-1-列表序列数据"><a href="#2-1-列表序列数据" class="headerlink" title="2.1 列表序列数据"></a>2.1 列表序列数据</h2><ul><li>headers :表头</li><li>rows :内容</li><li>f<em>csv = csv.writer(f)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_f 为 open(‘file.txt’,’w’,encoding=’utf-8’)</em></li><li>f_csv.writerow(headers)</li><li>f_csv.writerows(rows)</li></ul><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"></span><br><span class="line">headers = [<span class="string">'class'</span>,<span class="string">'name'</span>,<span class="string">'sex'</span>,<span class="string">'height'</span>,<span class="string">'year'</span>]</span><br><span class="line"></span><br><span class="line">rows = [</span><br><span class="line">        [<span class="number">1</span>,<span class="string">'xiaoming'</span>,<span class="string">'male'</span>,<span class="number">168</span>,<span class="number">23</span>],</span><br><span class="line">        [<span class="number">1</span>,<span class="string">'xiaohong'</span>,<span class="string">'female'</span>,<span class="number">162</span>,<span class="number">22</span>],</span><br><span class="line">        [<span class="number">2</span>,<span class="string">'xiaozhang'</span>,<span class="string">'female'</span>,<span class="number">163</span>,<span class="number">21</span>],</span><br><span class="line">        [<span class="number">2</span>,<span class="string">'xiaoli'</span>,<span class="string">'male'</span>,<span class="number">158</span>,<span class="number">21</span>]</span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'test.csv'</span>,<span class="string">'w'</span>,newline=<span class="string">''</span>)<span class="keyword">as</span> f:</span><br><span class="line">    f_csv = csv.writer(f)</span><br><span class="line">    f_csv.writerow(headers)</span><br><span class="line">    f_csv.writerows(rows)</span><br></pre></td></tr></tbody></table></figure><p><em>注意：如果打开 csv 文件出现空行的情况，那么需要添加一个参数 newline=”</em><br><code>with open('test.csv','w',newline='')as f:</code></p><table><thead><tr><th align="center">class</th><th align="center">name</th><th align="center">sex</th><th align="center">height</th><th align="center">year</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">xiaoming</td><td align="center">male</td><td align="center">168</td><td align="center">23</td></tr><tr><td align="center">1</td><td align="center">xiaohong</td><td align="center">female</td><td align="center">162</td><td align="center">22</td></tr><tr><td align="center">2</td><td align="center">xiaozhang</td><td align="center">female</td><td align="center">163</td><td align="center">21</td></tr><tr><td align="center">2</td><td align="center">xiaoli</td><td align="center">male</td><td align="center">158</td><td align="center">21</td></tr></tbody></table><h2 id="2-2-字典序列数据"><a href="#2-2-字典序列数据" class="headerlink" title="2.2 字典序列数据"></a>2.2 字典序列数据</h2><ul><li>headers :表头</li><li>rows :内容</li><li>f_csv = DictWriter(f,headers)</li><li>f_csv.writeheader()</li><li>f_csv.writerows(rows)</li></ul><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"></span><br><span class="line">headers = [<span class="string">'class'</span>,<span class="string">'name'</span>,<span class="string">'sex'</span>,<span class="string">'height'</span>,<span class="string">'year'</span>]</span><br><span class="line"></span><br><span class="line">rows = [</span><br><span class="line">        {<span class="string">'class'</span>:<span class="number">1</span>,<span class="string">'name'</span>:<span class="string">'xiaoming'</span>,<span class="string">'sex'</span>:<span class="string">'male'</span>,<span class="string">'height'</span>:<span class="number">168</span>,<span class="string">'year'</span>:<span class="number">23</span>},</span><br><span class="line">        {<span class="string">'class'</span>:<span class="number">1</span>,<span class="string">'name'</span>:<span class="string">'xiaohong'</span>,<span class="string">'sex'</span>:<span class="string">'female'</span>,<span class="string">'height'</span>:<span class="number">162</span>,<span class="string">'year'</span>:<span class="number">22</span>},</span><br><span class="line">        {<span class="string">'class'</span>:<span class="number">2</span>,<span class="string">'name'</span>:<span class="string">'xiaozhang'</span>,<span class="string">'sex'</span>:<span class="string">'female'</span>,<span class="string">'height'</span>:<span class="number">163</span>,<span class="string">'year'</span>:<span class="number">21</span>},</span><br><span class="line">        {<span class="string">'class'</span>:<span class="number">2</span>,<span class="string">'name'</span>:<span class="string">'xiaoli'</span>,<span class="string">'sex'</span>:<span class="string">'male'</span>,<span class="string">'height'</span>:<span class="number">158</span>,<span class="string">'year'</span>:<span class="number">21</span>},</span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'test2.csv'</span>,<span class="string">'w'</span>,newline=<span class="string">''</span>)<span class="keyword">as</span> f:</span><br><span class="line">    f_csv = csv.DictWriter(f,headers)</span><br><span class="line">    f_csv.writeheader()</span><br><span class="line">    f_csv.writerows(rows)</span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th align="center">class</th><th align="center">name</th><th align="center">sex</th><th align="center">height</th><th align="center">year</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">xiaoming</td><td align="center">male</td><td align="center">168</td><td align="center">23</td></tr><tr><td align="center">1</td><td align="center">xiaohong</td><td align="center">female</td><td align="center">162</td><td align="center">22</td></tr><tr><td align="center">2</td><td align="center">xiaozhang</td><td align="center">female</td><td align="center">163</td><td align="center">21</td></tr><tr><td align="center">2</td><td align="center">xiaoli</td><td align="center">male</td><td align="center">158</td><td align="center">21</td></tr></tbody></table><h2 id="2-3-csv-文件的读"><a href="#2-3-csv-文件的读" class="headerlink" title="2.3 csv 文件的读"></a>2.3 csv 文件的读</h2><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'test.csv'</span>)<span class="keyword">as</span> f:</span><br><span class="line">    f_csv = csv.reader(f)</span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> f_csv:</span><br><span class="line">        print(row)</span><br><span class="line"></span><br><span class="line"><span class="string">'''result</span></span><br><span class="line"><span class="string">['class', 'name', 'sex', 'height', 'year']</span></span><br><span class="line"><span class="string">['1', 'xiaoming', 'male', '168', '23']</span></span><br><span class="line"><span class="string">['1', 'xiaohong', 'female', '162', '22']</span></span><br><span class="line"><span class="string">['2', 'xiaozhang', 'female', '163', '21']</span></span><br><span class="line"><span class="string">['2', 'xiaoli', 'male', '158', '21']</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'test.csv'</span>)<span class="keyword">as</span> f:</span><br><span class="line">    f_csv = csv.reader(f)</span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> f_csv:</span><br><span class="line">        print(row[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line"><span class="string">'''result</span></span><br><span class="line"><span class="string">class</span></span><br><span class="line"><span class="string">1</span></span><br><span class="line"><span class="string">1</span></span><br><span class="line"><span class="string">2</span></span><br><span class="line"><span class="string">2</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></tbody></table></figure><blockquote><p>参考<a href="https://blog.csdn.net/katyusha1/article/details/81606175" target="_blank" rel="noopener" title="CSDN">网站</a></p></blockquote><h1 id="3-with-open-as-读写文件"><a href="#3-with-open-as-读写文件" class="headerlink" title="3. with open () as 读写文件"></a>3. with open () as 读写文件</h1><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 读文件</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'file.txt'</span>,<span class="string">'r'</span>,) <span class="keyword">as</span> f:</span><br><span class="line">    print(f.read())</span><br><span class="line"><span class="comment"># 不需调用f.close()</span></span><br><span class="line"><span class="comment"># 如果文件过大则用read(size)比较保险</span></span><br><span class="line"><span class="comment"># 如果文件是配置文件readlines()较为方便</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 写文件</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'file.txt'</span>,<span class="string">'w'</span>,encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(<span class="string">'Hello World !'</span>)</span><br><span class="line"><span class="comment"># 文本文件    encoding 字符编码：gbk，utf-8</span></span><br><span class="line"><span class="comment"># 二进制文件  rb模式读取:图片,视频</span></span><br></pre></td></tr></tbody></table></figure><blockquote><p>参考<a href="https://blog.csdn.net/xrinosvip/article/details/82019844" target="_blank" rel="noopener" title="CSDN">网站</a></p></blockquote><h1 id="4-os-中创建文件夹"><a href="#4-os-中创建文件夹" class="headerlink" title="4. os 中创建文件夹"></a>4. os 中创建文件夹</h1><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">main_path = <span class="string">'E:/os/'</span>    <span class="comment">#创建一个路径</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(main_path):   <span class="comment">#如果该路径不存在</span></span><br><span class="line">    os.makedirs(main_path)  <span class="comment">#则新建一个路径</span></span><br></pre></td></tr></tbody></table></figure><p><strong>删除文件:</strong><code>os.remove(path)</code></p><h1 id="5-将图片保存在文件夹中"><a href="#5-将图片保存在文件夹中" class="headerlink" title="5. 将图片保存在文件夹中"></a>5. 将图片保存在文件夹中</h1><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">dir = <span class="string">'文件路径'</span> + name +<span class="string">'.jpg'</span>     <span class="comment">#文件名</span></span><br><span class="line">url_get = requests.get(url)         <span class="comment">#从url中获取图片信息</span></span><br><span class="line"><span class="keyword">with</span> open(dir,<span class="string">'wb'</span>) <span class="keyword">as</span> f:           <span class="comment">#打开图片文件，保存图片信息</span></span><br><span class="line">    f.writer(url_get.content)</span><br></pre></td></tr></tbody></table></figure><h1 id="6-try…except-语句"><a href="#6-try…except-语句" class="headerlink" title="6. try…except 语句"></a>6. try…except 语句</h1><h2 id="6-1-语法"><a href="#6-1-语法" class="headerlink" title="6.1 语法"></a>6.1 <strong>语法</strong></h2><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#python 异常处理</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">&lt;语句&gt;        <span class="comment">#运行别的代码</span></span><br><span class="line"><span class="keyword">except</span> &lt;名字&gt;：</span><br><span class="line">&lt;语句&gt;        <span class="comment">#如果在try部份引发了'name'异常</span></span><br><span class="line"><span class="keyword">except</span> &lt;名字&gt;，&lt;数据&gt;:</span><br><span class="line">&lt;语句&gt;        <span class="comment">#如果引发了'name'异常，获得附加的数据</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">&lt;语句&gt;        <span class="comment">#如果没有异常发生</span></span><br></pre></td></tr></tbody></table></figure><h2 id="6-2-使用-except-而不带任何异常类型"><a href="#6-2-使用-except-而不带任何异常类型" class="headerlink" title="6.2 使用 except 而不带任何异常类型"></a>6.2 <strong>使用 except 而不带任何异常类型</strong></h2><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    正常的操作</span><br><span class="line">   ......................</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    发生异常，执行这块代码</span><br><span class="line">   ......................</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    如果没有异常执行这块代码</span><br></pre></td></tr></tbody></table></figure><p><strong>以上方式 try-except 语句捕获所有发生的异常。但这不是一个很好的方式，我们不能通过该程序识别出具体的异常信息。因为它捕获所有的异常</strong></p><h2 id="6-3-使用-except-而带多种异常类型"><a href="#6-3-使用-except-而带多种异常类型" class="headerlink" title="6.3 使用 except 而带多种异常类型"></a>6.3 <strong>使用 except 而带多种异常类型</strong></h2><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    正常的操作</span><br><span class="line">   ......................</span><br><span class="line"><span class="keyword">except</span>(Exception1[, Exception2[,...ExceptionN]]]):</span><br><span class="line">   发生以上多个异常中的一个，执行这块代码</span><br><span class="line">   ......................</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    如果没有异常执行这块代码</span><br></pre></td></tr></tbody></table></figure><h2 id="6-4-try-finally-语句"><a href="#6-4-try-finally-语句" class="headerlink" title="6.4 try-finally 语句"></a>6.4 <strong>try-finally 语句</strong></h2><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">&lt;语句&gt;</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">&lt;语句&gt;    <span class="comment">#退出try时总会执行</span></span><br><span class="line"><span class="keyword">raise</span></span><br></pre></td></tr></tbody></table></figure><h2 id="6-5-异常的参数"><a href="#6-5-异常的参数" class="headerlink" title="6.5 异常的参数"></a>6.5 <strong>异常的参数</strong></h2><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    正常的操作</span><br><span class="line">   ......................</span><br><span class="line"><span class="keyword">except</span> ExceptionType, Argument:</span><br><span class="line">    你可以在这输出 Argument 的值...</span><br></pre></td></tr></tbody></table></figure><h2 id="6-6-用户自定义异常"><a href="#6-6-用户自定义异常" class="headerlink" title="6.6 用户自定义异常"></a>6.6 <strong>用户自定义异常</strong></h2><ul><li>通过创建一个新的异常类，程序可以命名它们自己的异常。异常应该是典型的继承自 Exception 类，通过直接或间接的方式</li><li>以下为与 RuntimeError 相关的实例,实例中创建了一个类，基类为 RuntimeError，用于在异常触发时输出更多的信息</li><li>在 try 语句块中，用户自定义的异常后执行 except 块语句，变量 e 是用于创建 Networkerror 类的实例</li></ul><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Networkerror</span><span class="params">(RuntimeError)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, arg)</span>:</span></span><br><span class="line">        self.args = arg</span><br></pre></td></tr></tbody></table></figure><ul><li><strong>在你定义以上类后，你可以触发该异常，如下所示：</strong></li></ul><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">raise</span> Networkerror(<span class="string">"Bad hostname"</span>)</span><br><span class="line"><span class="keyword">except</span> Networkerror,e:</span><br><span class="line">    <span class="keyword">print</span> e.args</span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th align="center">异常名称</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">BaseException</td><td align="center">所有异常的基类</td></tr><tr><td align="center">SystemExit</td><td align="center">解释器请求退出</td></tr><tr><td align="center">KeyboardInterrupt</td><td align="center">用户中断执行(通常是输入^C)</td></tr><tr><td align="center">Exception</td><td align="center">常规错误的基类</td></tr><tr><td align="center">StopIteration</td><td align="center">迭代器没有更多的值</td></tr><tr><td align="center">GeneratorExit</td><td align="center">生成器(generator)发生异常来通知退出</td></tr><tr><td align="center">StandardError</td><td align="center">所有的内建标准异常的基类</td></tr><tr><td align="center">ArithmeticError</td><td align="center">所有数值计算错误的基类</td></tr><tr><td align="center">FloatingPointError</td><td align="center">浮点计算错误</td></tr><tr><td align="center">OverflowError</td><td align="center">数值运算超出最大限制</td></tr><tr><td align="center">ZeroDivisionError</td><td align="center">除(或取模)零 (所有数据类型)</td></tr><tr><td align="center">AssertionError</td><td align="center">断言语句失败</td></tr><tr><td align="center">AttributeError</td><td align="center">对象没有这个属性</td></tr><tr><td align="center">EOFError</td><td align="center">没有内建输入,到达 EOF 标记</td></tr><tr><td align="center">EnvironmentError</td><td align="center">操作系统错误的基类</td></tr><tr><td align="center">IOError</td><td align="center">输入/输出操作失败</td></tr><tr><td align="center">OSError</td><td align="center">操作系统错误</td></tr><tr><td align="center">WindowsError</td><td align="center">系统调用失败</td></tr><tr><td align="center">ImportError</td><td align="center">导入模块/对象失败</td></tr><tr><td align="center">LookupError</td><td align="center">无效数据查询的基类</td></tr><tr><td align="center">IndexError</td><td align="center">序列中没有此索引(index)</td></tr><tr><td align="center">KeyError</td><td align="center">映射中没有这个键</td></tr><tr><td align="center">MemoryError</td><td align="center">内存溢出错误(对于 Python 解释器不是致命的)</td></tr><tr><td align="center">NameError</td><td align="center">未声明/初始化对象 (没有属性)</td></tr><tr><td align="center">UnboundLocalError</td><td align="center">访问未初始化的本地变量</td></tr><tr><td align="center">ReferenceError</td><td align="center">弱引用(Weak reference)试图访问已经垃圾回收了的对象</td></tr><tr><td align="center">RuntimeError</td><td align="center">一般的运行时错误</td></tr><tr><td align="center">NotImplementedError</td><td align="center">尚未实现的方法</td></tr><tr><td align="center">SyntaxError Python</td><td align="center">语法错误</td></tr><tr><td align="center">IndentationError</td><td align="center">缩进错误</td></tr><tr><td align="center">TabError Tab</td><td align="center">和空格混用</td></tr><tr><td align="center">SystemError</td><td align="center">一般的解释器系统错误</td></tr><tr><td align="center">TypeError</td><td align="center">对类型无效的操作</td></tr><tr><td align="center">ValueError</td><td align="center">传入无效的参数</td></tr><tr><td align="center">UnicodeError Unicode</td><td align="center">相关的错误</td></tr><tr><td align="center">UnicodeDecodeError Unicode</td><td align="center">解码时的错误</td></tr><tr><td align="center">UnicodeEncodeError Unicode</td><td align="center">编码时错误</td></tr><tr><td align="center">UnicodeTranslateError Unicode</td><td align="center">转换时错误</td></tr><tr><td align="center">Warning</td><td align="center">警告的基类</td></tr><tr><td align="center">DeprecationWarning</td><td align="center">关于被弃用的特征的警告</td></tr><tr><td align="center">FutureWarning</td><td align="center">关于构造将来语义会有改变的警告</td></tr><tr><td align="center">OverflowWarning</td><td align="center">旧的关于自动提升为长整型(long)的警告</td></tr><tr><td align="center">PendingDeprecationWarning</td><td align="center">关于特性将会被废弃的警告</td></tr><tr><td align="center">RuntimeWarning</td><td align="center">可疑的运行时行为(runtime behavior)的警告</td></tr><tr><td align="center">SyntaxWarning</td><td align="center">可疑的语法的警告</td></tr><tr><td align="center">UserWarning</td><td align="center">用户代码生成的警告</td></tr></tbody></table><blockquote><p>参考<a href="https://www.runoob.com/python/python-exceptions.html" target="_blank" rel="noopener">教程</a></p></blockquote><h1 id="7-python-小知识点"><a href="#7-python-小知识点" class="headerlink" title="7. python 小知识点"></a>7. python 小知识点</h1><h2 id="7-1-换行符-‘-n’-和-回车符-‘-r’-的区别？"><a href="#7-1-换行符-‘-n’-和-回车符-‘-r’-的区别？" class="headerlink" title="7.1 换行符 ‘\n’ 和 回车符 ‘\r’ 的区别？"></a>7.1 换行符 ‘\n’ 和 回车符 ‘\r’ 的区别？</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">换行符就是另起一新行，光标在新行的开头；</span><br><span class="line">\n</span><br><span class="line">回车符就是光标回到一旧行的开头；(即光标目前所在的行为旧行)</span><br><span class="line">\r</span><br><span class="line">在解析文本或其他格式的文件内容时，常常要碰到判定回车式换行的地方</span><br><span class="line">这个时候就要注意既要判定"\r\n"又要判定"\n"。</span><br></pre></td></tr></tbody></table></figure><h2 id="7-2-Python-中-import-from…import-import…as-的区别"><a href="#7-2-Python-中-import-from…import-import…as-的区别" class="headerlink" title="7.2 Python 中 import, from…import,import…as 的区别"></a>7.2 Python 中 import, from…import,import…as 的区别</h2><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line">print(datetime.datetime.now())</span><br></pre></td></tr></tbody></table></figure><p>以上代码实现输出系统当前时间，是引入整个 datetime 包，然后再调用 datetime 这个类中的 now()方法</p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line">print(datetime.now())</span><br></pre></td></tr></tbody></table></figure><p>这里是从 datetime 包中只导入 datetime 这个类，让后再调用 datetime 这个类中的 now()方法实现同样的目的</p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> datetime <span class="keyword">as</span> dt</span><br><span class="line">print(dt.datetime.now())</span><br></pre></td></tr></tbody></table></figure><p>假如你嫌 datetime 这个包名称太长，想要给它取个别名，以后每次用到它的时候都用它的别名代替它，这时就需要用到 import…as</p><h2 id="7-3-Python-中-n-、-m-、-1-、-1-、-1-、-2-1-和-1-的含义"><a href="#7-3-Python-中-n-、-m-、-1-、-1-、-1-、-2-1-和-1-的含义" class="headerlink" title="7.3 Python 中[ : n]、[m : ]、[-1]、[:-1]、[::-1]、[2::-1]和[1:]的含义"></a>7.3 Python 中[ : n]、[m : ]、[-1]、[:-1]、[::-1]、[2::-1]和[1:]的含义</h2><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[m : ] 代表列表中的第m+<span class="number">1</span>项到最后一项</span><br><span class="line"></span><br><span class="line">[ : n] 代表列表中的第一项到第n项</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">a=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3.4</span>,<span class="number">5</span>]</span><br><span class="line">print(a)</span><br><span class="line">[ <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> ]</span><br><span class="line"></span><br><span class="line">print(a[<span class="number">-1</span>])     取最后一个元素</span><br><span class="line">结果：[<span class="number">5</span>]</span><br><span class="line"></span><br><span class="line">print(a[:<span class="number">-1</span>])     除了最后一个取全部</span><br><span class="line">结果：[ <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> ]</span><br><span class="line"></span><br><span class="line">print(a[::<span class="number">-1</span>])     取从后向前（相反）的元素</span><br><span class="line">结果：[ <span class="number">5</span> <span class="number">4</span> <span class="number">3</span> <span class="number">2</span> <span class="number">1</span> ]</span><br><span class="line"></span><br><span class="line">print(a[<span class="number">2</span>::<span class="number">-1</span>])     取从下标为<span class="number">2</span>的元素翻转读取</span><br><span class="line">结果：[ <span class="number">3</span> <span class="number">2</span> <span class="number">1</span> ]</span><br><span class="line"></span><br><span class="line">print(a[<span class="number">1</span>:])     取第二个到最后一个元素</span><br><span class="line">结果：[<span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span>]</span><br></pre></td></tr></tbody></table></figure><h2 id="7-4-python-浮点数保留几位小数"><a href="#7-4-python-浮点数保留几位小数" class="headerlink" title="7.4 python 浮点数保留几位小数"></a>7.4 python 浮点数保留几位小数</h2><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">5.026</span></span><br><span class="line"></span><br><span class="line">b = <span class="number">5.000</span></span><br><span class="line"></span><br><span class="line">round(a,<span class="number">2</span>)</span><br><span class="line"><span class="comment"># 5.03</span></span><br><span class="line"></span><br><span class="line">round(b,<span class="number">2</span>)</span><br><span class="line"><span class="comment"># 5.0</span></span><br><span class="line"></span><br><span class="line"><span class="string">'%.2f'</span> % a</span><br><span class="line"><span class="comment"># '5.03'</span></span><br><span class="line"></span><br><span class="line"><span class="string">'%.2f'</span> % b</span><br><span class="line"><span class="comment"># '5.00'</span></span><br><span class="line"></span><br><span class="line">float(<span class="string">'%.2f'</span> % a)</span><br><span class="line"><span class="comment"># 5.03</span></span><br><span class="line"></span><br><span class="line">float(<span class="string">'%.2f'</span> % b)</span><br><span class="line"><span class="comment"># 5.0</span></span><br></pre></td></tr></tbody></table></figure><h1 id="8-python-中陌生的函数"><a href="#8-python-中陌生的函数" class="headerlink" title="8. python 中陌生的函数"></a>8. python 中陌生的函数</h1><p><em>自己还不太熟悉的</em></p><h2 id="8-1-str-split-对字符串进行切片–返回一个列表"><a href="#8-1-str-split-对字符串进行切片–返回一个列表" class="headerlink" title="8.1 str.split() 对字符串进行切片–返回一个列表"></a>8.1 <code>str.split()</code> <strong>对字符串进行切片–返回一个列表</strong></h2><ul><li>语法<code>str.split(str="", num=string.count(str)).</code></li></ul><ul><li>str：分隔符，默认为所有的空字符，包括空格、换行、指标</li><li>num：分割次数，默认为-1，即分割所有</li></ul><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># example</span></span><br><span class="line">txt = <span class="string">"Google#Runoob#Taobao#Facebook"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 第二个参数为 1，返回两个参数列表</span></span><br><span class="line">x = txt.split(<span class="string">"#"</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">print(x)         <span class="comment">#['Google', 'Runoob#Taobao#Facebook']</span></span><br></pre></td></tr></tbody></table></figure><blockquote><p>参考教程：<a href="https://www.runoob.com/python/att-string-split.html" target="_blank" rel="noopener" title="runoob.com">RUNOOB</a></p></blockquote><h2 id="8-2-str-find-检测字符串中是否包含子字符串-str"><a href="#8-2-str-find-检测字符串中是否包含子字符串-str" class="headerlink" title="8.2 str.find() 检测字符串中是否包含子字符串 str"></a>8.2 <code>str.find()</code> <strong>检测字符串中是否包含子字符串 str</strong></h2><ul><li><em>如果包含子字符串返回开始的索引值，否则返回-1</em></li></ul><ul><li>语法<code>str.find(str, beg=0, end=len(string))</code></li><li>str – 指定检索的字符串</li><li>beg – 开始索引，默认为 0</li><li>end – 结束索引，默认为字符串的长度</li></ul><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># example</span></span><br><span class="line">str1 = <span class="string">"this is string example....wow!!!"</span>;</span><br><span class="line">str2 = <span class="string">"exam"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> str1.find(str2);          <span class="comment">#15</span></span><br><span class="line"><span class="keyword">print</span> str1.find(str2, <span class="number">10</span>);      <span class="comment">#15</span></span><br><span class="line"><span class="keyword">print</span> str1.find(str2, <span class="number">40</span>);      <span class="comment">#-1,查不到返回-1</span></span><br></pre></td></tr></tbody></table></figure><h2 id="8-3-string-join"><a href="#8-3-string-join" class="headerlink" title="8.3 string.join()"></a>8.3 <code>string.join()</code></h2><ul><li>语法 <code>'sep'.join(seq)</code><em>以 sep 作为分隔符，将 seq 所有的元素合并成一个新的字符串</em> <em>返回值：返回一个以分隔符 sep 连接各个元素后生成的字符串</em></li><li>sep：分隔符。可以为空</li><li>seq：要连接的元素序列、字符串、元组、字典</li></ul><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>seq1 = [<span class="string">'hello'</span>,<span class="string">'good'</span>,<span class="string">'boy'</span>,<span class="string">'doiido'</span>] <span class="comment">#对序列操作</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> <span class="string">' '</span>.join(seq1)</span><br><span class="line">hello good boy doiido</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> <span class="string">':'</span>.join(seq1)</span><br><span class="line">hello:good:boy:doiido</span><br><span class="line"></span><br><span class="line"><span class="comment"># 对字符串操作</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>seq2 = <span class="string">"hello good boy doiido"</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> <span class="string">':'</span>.join(seq2)</span><br><span class="line">h:e:l:l:o: :g:o:o:d: :b:o:y: :d:o:i:i:d:o</span><br><span class="line"></span><br><span class="line"><span class="comment"># 对元组操作</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>seq3 = (<span class="string">'hello'</span>,<span class="string">'good'</span>,<span class="string">'boy'</span>,<span class="string">'doiido'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> <span class="string">':'</span>.join(seq3)</span><br><span class="line">hello:good:boy:doiido</span><br><span class="line"></span><br><span class="line"><span class="comment"># 对字典操作</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>seq4 = {<span class="string">'hello'</span>:<span class="number">1</span>,<span class="string">'good'</span>:<span class="number">2</span>,<span class="string">'boy'</span>:<span class="number">3</span>,<span class="string">'doiido'</span>:<span class="number">4</span>}</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> <span class="string">':'</span>.join(seq4)</span><br><span class="line">boy:good:doiido:hello</span><br></pre></td></tr></tbody></table></figure><ul><li><strong>另一个 <code>os.path.join()</code></strong></li></ul><ul><li>语法 <code>os.path.join(path1[,path2[,......]])</code></li></ul><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment"># 合并目录</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> os</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.path.join(<span class="string">'/hello/'</span>,<span class="string">'good/boy/'</span>,<span class="string">'doiido'</span>)</span><br><span class="line"><span class="string">'/hello/good/boy/doiido'</span></span><br></pre></td></tr></tbody></table></figure><blockquote><p>参考<a href="https://www.cnblogs.com/sui776265233/p/10755525.html" target="_blank" rel="noopener">博客网站</a></p></blockquote><h2 id="8-4-ord-amp-chr"><a href="#8-4-ord-amp-chr" class="headerlink" title="8.4 ord() &amp; chr()"></a>8.4 ord() &amp; chr()</h2><p>ord()<br>将字符转化为ascii码</p><p>chr()<br>将ascii码转化为字母或实际数字</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ord(<span class="string">'a'</span>)  <span class="comment"># 返回ASCII码 97</span></span><br><span class="line"></span><br><span class="line">chr(<span class="number">97</span>)   <span class="comment"># 返回 字母'a'</span></span><br></pre></td></tr></tbody></table></figure><h1 id="9-python中类的相关知识"><a href="#9-python中类的相关知识" class="headerlink" title="9. python中类的相关知识"></a>9. python中类的相关知识</h1><h2 id="9-1-类的定义和创建"><a href="#9-1-类的定义和创建" class="headerlink" title="9.1 类的定义和创建"></a>9.1 类的定义和创建</h2><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义类，类名为Cname</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cname</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建cname1实例</span></span><br><span class="line">cname1 = Cname()</span><br></pre></td></tr></tbody></table></figure><h2 id="9-2-类中的实例属性与类属性"><a href="#9-2-类中的实例属性与类属性" class="headerlink" title="9.2 类中的实例属性与类属性"></a>9.2 类中的实例属性与类属性</h2><ul><li>实例属性：用于区分不同的实例，不同的类有不同的实例属性</li><li>类属性：是每个实例共有的属性，每个实例共有的属性</li></ul><h3 id="9-2-1-实例属性"><a href="#9-2-1-实例属性" class="headerlink" title="9.2.1 实例属性"></a>9.2.1 实例属性</h3><p><code>cname1.name = y</code> <code>cname2.name = q</code><br>每个实例有了name属性后就可以访问<br><code>print(cname1.name)</code> <code>print(cname2.name)</code></p><p>但是这样会比较麻烦，所以可以在每个实例中统一加上name属性</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cname</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,name)</span>:</span>  <span class="comment"># 初始化一个属性r</span></span><br><span class="line">        self.name = name</span><br></pre></td></tr></tbody></table></figure><p><strong>__init__() 方法的第一个参数必须是 self</strong><br><em>self 代表类的实例，是通过类创建的实例</em></p><p>然后创建实例，就可以直接带上参数 <code>cname1 = Cname(y)</code><br>然后访问实例属性 <code>print(cname1.name)</code></p><h3 id="9-2-2-类属性"><a href="#9-2-2-类属性" class="headerlink" title="9.2.2 类属性"></a>9.2.2 类属性</h3><p>类的属性绑定后，所有实例都可以访问，而且<strong>实例访问的类属性都相同</strong><br><strong>实例属性每个实例各自拥有，互相独立，而类属性有且只有一份</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cname</span><span class="params">(object)</span>:</span></span><br><span class="line">    zhongz = <span class="string">'people'</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,name)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line"></span><br><span class="line">cname1 = Cname(<span class="string">'y'</span>)</span><br><span class="line">cname2 = Cname(<span class="string">'q'</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">'--------'</span>)</span><br><span class="line">print(cname1.zhongz)    <span class="comment"># people</span></span><br><span class="line">print(cname2.zhongz)    <span class="comment"># people</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过类名修改了类属性后</span></span><br><span class="line">Cname.zhongz = <span class="string">'tenshi'</span></span><br><span class="line">print(<span class="string">'--------'</span>)</span><br><span class="line">print(cname1.zhongz)    <span class="comment"># tenshi</span></span><br><span class="line">print(cname2.zhongz)    <span class="comment"># tenshi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过实例名修改了类属性</span></span><br><span class="line">cname1.zhongz = <span class="string">'mea'</span></span><br><span class="line">print(<span class="string">'--------'</span>)</span><br><span class="line">print(cname1.zhongz)    <span class="comment"># mea</span></span><br><span class="line">print(cname2.zhongz)    <span class="comment"># tenshi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除了cname1的类属性zhongz后</span></span><br><span class="line">print(<span class="string">'--------'</span>)</span><br><span class="line">print(cname1.zhongz)    <span class="comment"># mea</span></span><br><span class="line"><span class="keyword">del</span> cname1.zhongz</span><br><span class="line">print(cname1.zhongz)    <span class="comment"># tenshi</span></span><br></pre></td></tr></tbody></table></figure><p><strong>要修改类属性，不要再实例上修改，而是在类名上修改</strong></p><h2 id="9-3-类的实例方法"><a href="#9-3-类的实例方法" class="headerlink" title="9.3 类的实例方法"></a>9.3 类的实例方法</h2><p><strong>method</strong> is the <strong>function</strong> in <strong>class</strong> <del>英语四级差点没过的渣渣</del><br><strong>方法是表明这个类用是来做什么,方法就是类中的函数</strong></p><p><em>最简单的一个方法：打印属性</em></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cname</span><span class="params">(object)</span>:</span></span><br><span class="line">    zhongz = <span class="string">'people'</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,name)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">printname</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(self.name) <span class="comment"># 打印名字</span></span><br><span class="line"></span><br><span class="line">cname1 = Cname(<span class="string">'y'</span>)</span><br><span class="line">cname2 = Cname(<span class="string">'q'</span>)</span><br><span class="line">cname1.printname()  <span class="comment"># y</span></span><br><span class="line">cname2.printname()  <span class="comment"># q</span></span><br></pre></td></tr></tbody></table></figure><p><code>printname(self)</code>就是一个最简单的方法</p><h2 id="9-4-类中的访问限制"><a href="#9-4-类中的访问限制" class="headerlink" title="9.4 类中的访问限制"></a>9.4 类中的访问限制</h2><h3 id="9-4-1-属性的访问限制"><a href="#9-4-1-属性的访问限制" class="headerlink" title="9.4.1 属性的访问限制"></a>9.4.1 属性的访问限制</h3><p>python的类中的属性，如果有些属性不希望被外部访问，我们可以属性命名时以双下划线开头 <code>__</code>，如 <code>__age</code></p><blockquote><p>但，如果一个属性以”__xxx__“的形式定义，那么它可以被外部访问。以”__xxx__“定义的属性在Python的类中被称为特殊属性，有很多预定义的特殊属性是以“__xxx__”定义，所以我们不要把普通属性用”__xxx__“定义。</p></blockquote><blockquote><p><strong>加双下划线__xx 的属性，可以通过“ _类名__xx ”可以访问到属性的值 如<code>Cname._Cname__age</code></strong></p></blockquote><h3 id="9-4-2-方法的访问限制"><a href="#9-4-2-方法的访问限制" class="headerlink" title="9.4.2 方法的访问限制"></a>9.4.2 方法的访问限制</h3><p>在方法名前加双下划线，如<code>def __printage():</code><br>此时，该方法只能在类的内部使用，而无法被外部调用</p><h2 id="9-5-类中的装饰方法"><a href="#9-5-类中的装饰方法" class="headerlink" title="9.5 类中的装饰方法"></a>9.5 类中的装饰方法</h2><ul><li><code>@classmethod</code>    用来修饰类方法。使用在与类进行交互，但不和其实例进行交互的函数方法上</li><li><code>@staticmethod</code>   用来修饰静态方法。使用在有些与类相关函数，但不使用该类或该类的实例。如更改环境变量、修改其他类的属性等</li></ul><p><em>classmethod必须使用类的对象作为第一个参数，而staticmethod则可以不传递任何参数</em></p><h3 id="9-5-1-classmethod-修饰方法——类方法"><a href="#9-5-1-classmethod-修饰方法——类方法" class="headerlink" title="9.5.1 @classmethod 修饰方法——类方法"></a>9.5.1 @classmethod 修饰方法——类方法</h3><p>类方法，我们不用通过实例化类就能访问的方法。而且@classmethod 装饰的方法不能使用实例属性，只能是类属性。它主要使用在和类进行交互，但不和其实例进行交互的函数方法上。</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cname</span><span class="params">(object)</span>:</span></span><br><span class="line">    zhongz = <span class="string">'people'</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,name)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">printname</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(self.name)</span><br><span class="line">    </span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">printwe</span><span class="params">(cls)</span>:</span></span><br><span class="line">        print(cls.zhongz)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Cname.printname()   # 没有实例化 ，会发生错误</span></span><br><span class="line">Cname.printwe()     <span class="comment"># 没有实例化也可以访问</span></span><br></pre></td></tr></tbody></table></figure><blockquote><p>printwe(cls)中cls表示的是类，它和self类实例有一定的差别。类方法中都是使用cls，实例方法中使用self</p></blockquote><h3 id="9-5-2-staticmethod-修饰方法——静态方法"><a href="#9-5-2-staticmethod-修饰方法——静态方法" class="headerlink" title="9.5.2 @staticmethod 修饰方法——静态方法"></a>9.5.2 @staticmethod 修饰方法——静态方法</h3><p><code>@staticmethod</code> 不强制要求传递参数（它做的事与类方法或实例方法一样）<br><code>@staticmethod</code> 使用在有些和类相关函数，但不使用该类或者该类的实例。如更改环境变量、修改其他类的属性等<br><code>@staticmethod</code> 修饰的方法是放在类外的函数，我们为了方便将他移动到了类里面，它对类的运行无影响</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Date</span><span class="params">(object)</span>:</span></span><br><span class="line">   day = <span class="number">0</span></span><br><span class="line">   month = <span class="number">0</span></span><br><span class="line">   year = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, year=<span class="number">0</span>, month=<span class="number">0</span>, day=<span class="number">0</span>)</span>:</span></span><br><span class="line">       self.day = day</span><br><span class="line">       self.month = month</span><br><span class="line">       self.year = year</span><br><span class="line"></span><br><span class="line"><span class="meta">   @classmethod</span></span><br><span class="line">   <span class="function"><span class="keyword">def</span> <span class="title">from_string</span><span class="params">(cls, date_as_string)</span>:</span></span><br><span class="line">       year, month, day = date_as_string.split(<span class="string">'-'</span>)</span><br><span class="line">       date = cls(year, month, day)</span><br><span class="line">       <span class="keyword">return</span> date</span><br><span class="line">    <span class="comment"># 返回的是类的实例</span></span><br><span class="line"></span><br><span class="line"><span class="meta">   @staticmethod</span></span><br><span class="line">   <span class="function"><span class="keyword">def</span> <span class="title">is_date_valid</span><span class="params">(date_as_string)</span>:</span></span><br><span class="line">       <span class="string">"""</span></span><br><span class="line"><span class="string">      用来校验日期的格式是否正确</span></span><br><span class="line"><span class="string">       """</span></span><br><span class="line">       year, month, day = date_as_string.split(<span class="string">'-'</span>)</span><br><span class="line">       <span class="keyword">return</span> int(year) &lt;= <span class="number">3999</span> <span class="keyword">and</span> int(month) &lt;= <span class="number">12</span> <span class="keyword">and</span> int(day) &lt;= <span class="number">31</span></span><br><span class="line"></span><br><span class="line">date1 = Date.from_string(<span class="string">'2012-05-10'</span>)</span><br><span class="line">print(date1.year, date1.month, date1.day)</span><br><span class="line">is_date = Date.is_date_valid(<span class="string">'2012-09-18'</span>) <span class="comment"># 格式正确 返回True</span></span><br></pre></td></tr></tbody></table></figure><p>is_date_valid(date_as_string) 只有一个参数，它的运行不会影响类的属性</p><blockquote><p>@staticmethod修饰方法 is_date_valid(date_as_string)中无实例化参数self或者cls；而@classmethod修饰的方法中有from_string(cls, date_as_string) 类参数cls</p></blockquote><h2 id="9-6-python中的property的使用"><a href="#9-6-python中的property的使用" class="headerlink" title="9.6 python中的property的使用"></a>9.6 python中的property的使用</h2><p>property的作用</p><ul><li>作为装饰器 @property将类方法转换为类属性（只读）</li><li>property重新实现一个属性的setter和getter方法</li></ul><h3 id="9-6-1-property将类方法转换为只读属性"><a href="#9-6-1-property将类方法转换为只读属性" class="headerlink" title="9.6.1 @property将类方法转换为只读属性"></a>9.6.1 @property将类方法转换为只读属性</h3><p>经常使用，将类的属性设置为不可修改</p><p>将一个类方法转变成一个类属性</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Circle</span><span class="params">(object)</span>:</span></span><br><span class="line">   __pi = <span class="number">3.14</span></span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, r)</span>:</span></span><br><span class="line">       self.r = r</span><br><span class="line"></span><br><span class="line"><span class="meta">   @property</span></span><br><span class="line">   <span class="function"><span class="keyword">def</span> <span class="title">pi</span><span class="params">(self)</span>:</span></span><br><span class="line">       <span class="keyword">return</span> self.__pi</span><br><span class="line"></span><br><span class="line">circle1 = Circle(<span class="number">2</span>)</span><br><span class="line">print(circle1.pi)</span><br><span class="line">circle1.pi=<span class="number">3.14159</span>  <span class="comment"># 出现AttributeError异常</span></span><br></pre></td></tr></tbody></table></figure><p>创建实例后我们可以使用circle1.pi 自己获取方法的返回值，而且他只能读不能修改</p><h3 id="9-6-2-property重新实现setter和getter方法"><a href="#9-6-2-property重新实现setter和getter方法" class="headerlink" title="9.6.2 property重新实现setter和getter方法"></a>9.6.2 property重新实现setter和getter方法</h3><p>我也不太懂hhh</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Circle</span><span class="params">(object)</span>:</span></span><br><span class="line">   __pi = <span class="number">3.14</span></span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, r)</span>:</span></span><br><span class="line">       self.r = r</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">def</span> <span class="title">get_pi</span><span class="params">(self)</span>:</span></span><br><span class="line">       <span class="keyword">return</span> self.__pi</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">def</span> <span class="title">set_pi</span><span class="params">(self, pi)</span>:</span></span><br><span class="line">       Circle.__pi = pi</span><br><span class="line"></span><br><span class="line">   pi = property(get_pi, set_pi)</span><br><span class="line"></span><br><span class="line">circle1 = Circle(<span class="number">2</span>)</span><br><span class="line">circle1.pi = <span class="number">3.14</span>  <span class="comment"># 设置 pi的值</span></span><br><span class="line">print(circle1.pi)  <span class="comment"># 访问 pi的值</span></span><br></pre></td></tr></tbody></table></figure><p>当我们以这种方式使用属性函数时，它允许pi属性设置并获取值本身而不破坏原有代码</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Circle</span><span class="params">(object)</span>:</span></span><br><span class="line">   __pi = <span class="number">3.14</span></span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, r)</span>:</span></span><br><span class="line">       self.r = r</span><br><span class="line"></span><br><span class="line"><span class="meta">   @property</span></span><br><span class="line">   <span class="function"><span class="keyword">def</span> <span class="title">pi</span><span class="params">(self)</span>:</span></span><br><span class="line">       <span class="keyword">return</span> self.__pi</span><br><span class="line"></span><br><span class="line"><span class="meta">   @pi.setter</span></span><br><span class="line">   <span class="function"><span class="keyword">def</span> <span class="title">pi</span><span class="params">(self, pi)</span>:</span></span><br><span class="line">       Circle.__pi = pi</span><br><span class="line"></span><br><span class="line">circle1 = Circle(<span class="number">2</span>)</span><br><span class="line">circle1.pi = <span class="number">3.14</span>  <span class="comment"># 设置 pi的值</span></span><br><span class="line">print(circle1.pi)  <span class="comment"># 访问 pi的值</span></span><br></pre></td></tr></tbody></table></figure><p>把一个getter方法变成属性，只需要加上@property就可以了，如上此时pi(self)方法，@property本身又创建了另一个装饰器@pi.setter，负责把一个setter方法变成属性赋值，于是，将@pi.setter加到pi(self, pi)上，我们就拥有一个可控的属性操作</p><blockquote><p>参考<a href="https://www.zhihu.com/people/lyzf" target="_blank" rel="noopener">知乎大佬</a>的<a href="https://zhuanlan.zhihu.com/p/30223570" target="_blank" rel="noopener">教程</a><br>感谢大佬让我搞懂了python的类，虽然最后的不太懂，但是基础是懂了</p></blockquote><p>接着学aaaaaaa</p><h2 id="9-7-类的继承-—-大师，我悟了"><a href="#9-7-类的继承-—-大师，我悟了" class="headerlink" title="9.7 类的继承  — 大师，我悟了"></a>9.7 类的继承  — 大师，我悟了</h2><h3 id="9-7-1-类的继承"><a href="#9-7-1-类的继承" class="headerlink" title="9.7.1 类的继承"></a>9.7.1 类的继承</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span><span class="params">(object)</span>:</span>  <span class="comment">#  python3中所有类都可以继承于object基类</span></span><br><span class="line">   <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, age)</span>:</span></span><br><span class="line">       self.name = name</span><br><span class="line">       self.age = age</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">def</span> <span class="title">call</span><span class="params">(self)</span>:</span></span><br><span class="line">       print(self.name, <span class="string">'会叫'</span>)</span><br><span class="line"><span class="comment"># 现在我们需要定义一个Cat猫类继承于Animal，猫类比动物类多一个sex属性。</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cat</span><span class="params">(Animal)</span>:</span></span><br><span class="line">   <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,name,age,sex)</span>:</span></span><br><span class="line">       super(Cat, self).__init__(name,age)  <span class="comment"># 不要忘记从Animal类引入属性</span></span><br><span class="line">       self.sex=sex</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:  <span class="comment"># 单模块被引用时下面代码不会受影响，用于调试</span></span><br><span class="line">   c = Cat(<span class="string">'喵喵'</span>, <span class="number">2</span>, <span class="string">'男'</span>)  <span class="comment">#  Cat继承了父类Animal的属性</span></span><br><span class="line">c.call()  <span class="comment"># 输出 喵喵 会叫 ，Cat继承了父类Animal的方法</span></span><br></pre></td></tr></tbody></table></figure><p>我悟了：类的继承一般都是object，然后如果想要继承自己的类，则可以把object继承对象改一下，原来类名后括号里的东西是继承对象</p><p>一定要用 <code>super(Cat, self).__init__(name,age)</code> 去初始化父类，否则，继承自 Animal的 Cat子类将没有 <code>name</code> 和 <code>age</code> 两个属性</p><p>函数<code>super(Cat, self)</code>将返回当前类继承的父类，即 Animal，然后调用<code>__init__()</code>方法，注意self参数已在<code>super()</code>中传入，在<code>__init__()</code>中将隐式传递，不能再写出self</p><h3 id="9-7-2-Python对子类方法的重构"><a href="#9-7-2-Python对子类方法的重构" class="headerlink" title="9.7.2 Python对子类方法的重构"></a>9.7.2 Python对子类方法的重构</h3><p>子类中的方法要求跟父类中的方法不同时，可以在子类中重构方法</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cat</span><span class="params">(Animal)</span>:</span></span><br><span class="line">   <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, age, sex)</span>:</span></span><br><span class="line">       super(Cat, self).__init__(name,age)</span><br><span class="line">       self.sex = sex</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">def</span> <span class="title">call</span><span class="params">(self)</span>:</span></span><br><span class="line">       print(self.name,<span class="string">'会“喵喵”叫'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">   c = Cat(<span class="string">'喵喵'</span>, <span class="number">2</span>, <span class="string">'男'</span>)</span><br><span class="line">   c.call()  <span class="comment"># 输出：喵喵 会“喵喵”叫</span></span><br></pre></td></tr></tbody></table></figure><p>当我们在子类中重构父类的方法后，Cat子类的实例先会在自己的类Cat中查找该方法，当找不到该方法时才会去父类Animal中查找对应的方法</p><h3 id="9-7-3-Python中子类与父类的关系"><a href="#9-7-3-Python中子类与父类的关系" class="headerlink" title="9.7.3 Python中子类与父类的关系"></a>9.7.3 Python中子类与父类的关系</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span><span class="params">(object)</span>:</span></span><br><span class="line">   <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cat</span><span class="params">(Animal)</span>:</span></span><br><span class="line">   <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">A= Animal()</span><br><span class="line">C = Cat()</span><br></pre></td></tr></tbody></table></figure><ul><li>“A”是Animal类的实例，但，“A”不是Cat类的实例。</li><li>“C”是Animal类的实例，“C”也是Cat类的实例。</li></ul><p>函数 <code>isinstance(变量,类型)</code><br>判断变量的类型，判断对象之间的关系</p><figure class="highlight"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">'"A" IS Animal?'</span>, isinstance(A, Animal))</span><br><span class="line">print(<span class="string">'"A" IS Cat?'</span>, isinstance(A, Cat))</span><br><span class="line">print(<span class="string">'"C" IS Animal?'</span>, isinstance(C, Animal))</span><br><span class="line">print(<span class="string">'"C" IS Cat?'</span>, isinstance(C, Cat))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出</span></span><br><span class="line">"A" IS Animal? True</span><br><span class="line">"A" IS Cat? False</span><br><span class="line">"C" IS Animal? True</span><br><span class="line">"C" IS Cat? True</span><br></pre></td></tr></tbody></table></figure><h3 id="9-7-4-python中多态"><a href="#9-7-4-python中多态" class="headerlink" title="9.7.4 python中多态"></a>9.7.4 python中多态</h3><p>类具有继承关系，并且子类类型可以向上转型看做父类类型，如果我们从 Animal派生出 Cat和Dog，并都写了一个 call() 方法</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span><span class="params">(object)</span>:</span>  </span><br><span class="line">   <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, age)</span>:</span></span><br><span class="line">       self.name = name</span><br><span class="line">       self.age = age</span><br><span class="line">   <span class="function"><span class="keyword">def</span> <span class="title">call</span><span class="params">(self)</span>:</span></span><br><span class="line">       print(self.name, <span class="string">'会叫'</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cat</span><span class="params">(Animal)</span>:</span></span><br><span class="line">   <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, age, sex)</span>:</span></span><br><span class="line">       super(Cat, self).__init__(name, age)</span><br><span class="line">       self.sex = sex</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">def</span> <span class="title">call</span><span class="params">(self)</span>:</span></span><br><span class="line">       print(self.name, <span class="string">'会“喵喵”叫'</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span><span class="params">(Animal)</span>:</span></span><br><span class="line">   <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, age, sex)</span>:</span></span><br><span class="line">       super(Dog, self).__init__(name, age)</span><br><span class="line">       self.sex = sex</span><br><span class="line">   <span class="function"><span class="keyword">def</span> <span class="title">call</span><span class="params">(self)</span>:</span></span><br><span class="line">       print(self.name, <span class="string">'会“汪汪”叫'</span>)</span><br></pre></td></tr></tbody></table></figure><p>我们定义一个do函数，接收一个变量 ‘all’,如下：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">do</span><span class="params">(all)</span>:</span></span><br><span class="line">   all.call()</span><br><span class="line"></span><br><span class="line">A = Animal(<span class="string">'小黑'</span>,<span class="number">4</span>)</span><br><span class="line">C = Cat(<span class="string">'喵喵'</span>, <span class="number">2</span>, <span class="string">'男'</span>)</span><br><span class="line">D = Dog(<span class="string">'旺财'</span>, <span class="number">5</span>, <span class="string">'女'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> (A,C,D):</span><br><span class="line">   do(x)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出结果</span></span><br><span class="line"><span class="comment"># 小黑 会叫</span></span><br><span class="line"><span class="comment"># 喵喵 会“喵喵”叫</span></span><br><span class="line"><span class="comment"># 旺财 会“汪汪”叫</span></span><br></pre></td></tr></tbody></table></figure><p>这种行为称为多态。也就是说，方法调用将作用在 all 的实际类型上。C 是 Cat 类型，它实际上拥有自己的 call() 方法以及从 Animal 继承的 call 方法<br>而调用 C .call() 总是先查找它自身的定义，如果没有定义，则顺着继承链向上查找，直到在某个父类中找到为止</p><blockquote><p>注意事项</p><ul><li>在继承中基类的构造方法（<code>__init__()方法</code>）不会被自动调用，它需要在其派生类的构造方法中亲自专门调用。</li><li>在调用基类的方法时，需要加上基类的类名前缀，且需要带上self参数变量。而在类中调用普通函数时并不需要带上self参数</li><li>Python总是首先查找对应类的方法，如果它不能在派生类中找到对应的方法，它才开始到基类中逐个查找。（先在本类中查找调用的方法，找不到才去基类中找）</li></ul></blockquote><h1 id="10-几个python编写技巧"><a href="#10-几个python编写技巧" class="headerlink" title="10. 几个python编写技巧"></a>10. 几个python编写技巧</h1><h2 id="10-1-变量的交换"><a href="#10-1-变量的交换" class="headerlink" title="10.1 变量的交换"></a>10.1 变量的交换</h2><p><code>a,b = b,a</code></p><h2 id="10-2-字符串格式化"><a href="#10-2-字符串格式化" class="headerlink" title="10.2 字符串格式化"></a>10.2 字符串格式化</h2><p><code>print("Hi, I'm %s . I'm from %s . And I'm %d" % (name,country,age))</code><br><code>print("Hi, I'm {} . I'm from {} . And I'm {}".format(name,country,age))</code><br><code>print(f"Hi, I'm {name} . I'm from {country} . And I'm {age+1}"</code></p><h2 id="10-3-Yield语法"><a href="#10-3-Yield语法" class="headerlink" title="10.3 Yield语法"></a>10.3 Yield语法</h2><p>yield不需要整个列表生成完毕后再输出，可以一个一个输出</p><p>每当一个数据生成时，可以直接输出</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fibonacci</span><span class="params">(n)</span>:</span></span><br><span class="line">    a = <span class="number">0</span></span><br><span class="line">    b = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(n):</span><br><span class="line">        <span class="keyword">yield</span> a</span><br><span class="line">        a, b = b, a+b</span><br><span class="line">    <span class="keyword">return</span> nums</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> fibonacci(<span class="number">10</span>):</span><br><span class="line">    print(i)</span><br></pre></td></tr></tbody></table></figure><h2 id="10-4-列表解析式"><a href="#10-4-列表解析式" class="headerlink" title="10.4 列表解析式"></a>10.4 列表解析式</h2><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 学习力 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github的一些基本知识</title>
      <link href="/2020/02/09/tools-github/"/>
      <url>/2020/02/09/tools-github/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><h2 id="1-Github"><a href="#1-Github" class="headerlink" title="1. Github"></a>1. Github</h2><h3 id="1-1-搜索技巧"><a href="#1-1-搜索技巧" class="headerlink" title="1.1 搜索技巧"></a>1.1 搜索技巧</h3><h4 id="①-in-name-spring-boot"><a href="#①-in-name-spring-boot" class="headerlink" title="① in:name spring boot"></a>① in:name spring boot</h4><p>名字里带 spring boot，在 name 中搜</p><h4 id="②-in-readme-spring-boot"><a href="#②-in-readme-spring-boot" class="headerlink" title="② in:readme spring boot"></a>② in:readme spring boot</h4><p>readme 中带 spring boot，在 readme 中搜</p><h4 id="③-in-description"><a href="#③-in-description" class="headerlink" title="③ in:description"></a>③ in:description</h4><p>在描述中搜</p><h4 id="④-stars-gt-3000"><a href="#④-stars-gt-3000" class="headerlink" title="④ stars:>3000"></a>④ stars:&gt;3000</h4><p>stars 多于 3000 的数据库</p><h4 id="⑤-forks-gt-3000"><a href="#⑤-forks-gt-3000" class="headerlink" title="⑤ forks:>3000"></a>⑤ forks:&gt;3000</h4><p>forks 多于 3000 的数据库</p><h4 id="⑥-language-java"><a href="#⑥-language-java" class="headerlink" title="⑥ language:java"></a>⑥ language:java</h4><p>java 语言的数据库</p><h4 id="⑦-push-gt-2019-02-01"><a href="#⑦-push-gt-2019-02-01" class="headerlink" title="⑦ push:>2019-02-01"></a>⑦ push:&gt;2019-02-01</h4><p>在 2019.02.01 以后有过更新的数据库</p><blockquote><p>在<a href="https://www.bilibili.com/video/av75587104" target="_blank" rel="noopener">大佬 b 站视频</a>中学习</p></blockquote><h2 id="2-Git"><a href="#2-Git" class="headerlink" title="2. Git"></a>2. Git</h2><h3 id="2-1-git-使用"><a href="#2-1-git-使用" class="headerlink" title="2.1 git 使用"></a>2.1 git 使用</h3><blockquote><p><a href="https://space.bilibili.com/503792864" target="_blank" rel="noopener">大佬的b站帐号</a><br><a href="https://www.bilibili.com/video/av540325349" target="_blank" rel="noopener">大佬的视频</a></p></blockquote><p><img src="https://raw.githubusercontent.com/yq010105/Blog_images/master/img/git.png" alt="大佬做的图"></p><p>基本操作：</p><ul><li><code>git init 项目名</code> 创建一个新的本地代码库</li><li><code>git config --global user.name "your name"</code> 设置你的名字，将会被加到commit和tags中</li><li><code>git config --global user.email "youremail"</code> 设置邮箱地址，将会被加到commit和tags中</li></ul><h4 id="2-1-1-本地操作"><a href="#2-1-1-本地操作" class="headerlink" title="2.1.1 本地操作"></a>2.1.1 本地操作</h4><ul><li><code>git add .</code>放到暂存区</li><li><code>git commit -m 'title'</code> 提交代码到本地仓库</li><li><code>git status</code> 查看当前状态，列出所有新修改、暂存区文件的修改情况</li><li><code>git log --n</code> 显示最近n次commit记录</li><li><code>git reset  --hard commit_id</code> 回滚版本 <em>commit_id: 就是用git reflog可以查看到的一串东西</em></li><li><code>git diff [file]</code> 查看工作区和暂存区的区别 ：<code>git diff</code> <code>git diff --cached</code></li><li><code>git rm [file]</code> 删除工作区和暂存区的文件</li><li><code>git reflog</code> 记录所有的操作记录</li><li><code>git checkout -- [file]</code> 把工作区修改撤销掉</li><li><code>git reset HEAD [file]</code> 把暂存区的修改撤销掉</li><li><code>git stash</code> 把工作区修改内容保存到贮藏区</li><li><code>git stash pop</code> 将贮藏区的内容恢复到工作区</li><li><code>git tag</code> 列出代码库中所有的tag</li><li><code>git tag -a&lt;版本号&gt;-m message</code> 新增一个版本号 </li></ul><h4 id="2-1-2-分支操作"><a href="#2-1-2-分支操作" class="headerlink" title="2.1.2 分支操作"></a>2.1.2 分支操作</h4><ul><li><code>git branch -a</code> 列出当地所有分支</li><li><code>git switch -c [name]</code> 创建一个新的分支</li><li><code>git switch [name]</code> 切换分支</li><li><code>git merge [from name]</code> 将name分支与当前分支合并</li><li><code>git branch -d [name]</code> 删除name分支</li></ul><h4 id="2-1-3-远程操作"><a href="#2-1-3-远程操作" class="headerlink" title="2.1.3 远程操作"></a>2.1.3 远程操作</h4><ul><li><code>git clone url</code> 从远程代码库下载整个代码库和历史记录</li><li><code>git remote add &lt;remote name&gt; &lt;url&gt;</code> 链接一个远程库</li><li><code>git fetch</code> 从远程代码库下载所有变动</li><li><code>git push</code> 将当前本地的代码库推送到远程remote库的branch分支</li><li><code>git pull</code> 从远程库拉去代码并将当前分支和他的<code>upstream merge</code></li></ul><h3 id="2-2-gitignore-文件"><a href="#2-2-gitignore-文件" class="headerlink" title="2.2 .gitignore 文件"></a>2.2 .gitignore 文件</h3><table><thead><tr><th align="center">例子</th><th align="center">解释</th></tr></thead><tbody><tr><td align="center">/mtk</td><td align="center">过滤整个文件夹</td></tr><tr><td align="center">*.zip</td><td align="center">过滤所有.zip 文件</td></tr><tr><td align="center">/mtk/do.c</td><td align="center">过滤某个具体文件</td></tr><tr><td align="center">!/mtk/one.txt</td><td align="center">追踪（不过滤）某个具体文件</td></tr></tbody></table><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">配置语法</span><br><span class="line">以斜杠“/”开头表示目录；</span><br><span class="line">以星号“*”通配多个字符；</span><br><span class="line">以问号“?”通配单个字符</span><br><span class="line">以方括号“[]”包含单个字符的匹配列表；</span><br><span class="line">以叹号“!”表示不忽略(跟踪)匹配到的文件或目录。</span><br><span class="line">注意： git 对于 .gitignore配置文件是按行从上到下进行规则匹配的</span><br></pre></td></tr></tbody></table></figure><ul><li><em>如果你创建.gitignore 文件之前就 push 了某一文件，那么即使你在.gitignore 文件中写入过滤该文件的规则，该规则也不会起作用，git 仍然会对该文件进行版本管理</em></li><li><strong>.gitignore 规则不生效</strong><br><em>.gitignore 只能忽略那些原来没有被 track 的文件，如果某些文件已经被纳入了版本管理中，则修改.gitignore 是无效的</em></li><li><strong>解决方法</strong><br><strong>解决方法就是先把本地缓存删除（改变成未 track 状态），然后再提交</strong></li></ul><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git rm -r --cached .</span><br><span class="line">git add .</span><br><span class="line">git commit -m 'update .gitignore'</span><br></pre></td></tr></tbody></table></figure><ul><li><strong>Git 忽略文件提交的三种方法</strong></li><li><strong>1、在 Git 项目中定义 .gitignore 文件</strong><br>这种方式通过在项目的某个文件夹下定义 .gitignore 文件，在该文件中定义相应的忽略规则，来管理当前文件夹下的文件的 Git 提交行为<br>在 .gitingore 文件中，遵循相应的语法，在每一行指定一个忽略规则</li><li><strong>2、在 Git 项目的设置中指定排除文件</strong><br>这种方式只是临时指定该项目的行为，需要编辑当前项目下的 .git/info/exclude 文件，然后将需要忽略提交的文件写入其中<br><em>这种方式指定的忽略文件的根目录是项目根目录</em></li><li><strong>3、定义 Git 全局的 .gitignore 文件</strong><br>除了可以在项目中定义 .gitignore 文件外，还可以设置全局的 git .gitignore 文件来管理所有 Git 项目的行为。这种方式在不同的项目开发者之间是不共享的，是属于项目之上 Git 应用级别的行为</li></ul><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Git 忽略规则匹配语法</span><br><span class="line">在 .gitignore 文件中，每一行的忽略规则的语法如下：</span><br><span class="line"></span><br><span class="line">空格不匹配任意文件，可作为分隔符，可用反斜杠转义</span><br><span class="line"># 开头的模式标识注释，可以使用反斜杠进行转义</span><br><span class="line">! 开头的模式标识否定，该文件将会再次被包含，如果排除了该文件的父级目录，则使用 ! 也不会再次被包含。可以使用反斜杠进行转义</span><br><span class="line">/ 结束的模式只匹配文件夹以及在该文件夹路径下的内容，但是不匹配该文件</span><br><span class="line">/ 开始的模式匹配项目跟目录</span><br><span class="line">如果一个模式不包含斜杠，则它匹配相对于当前 .gitignore 文件路径的内容，如果该模式不在 .gitignore 文件中，则相对于项目根目录</span><br><span class="line">**匹配多级目录，可在开始，中间，结束</span><br><span class="line">?通用匹配单个字符</span><br><span class="line">[]通用匹配单个字符列表</span><br></pre></td></tr></tbody></table></figure><blockquote><p>作者：王伟 desire<br>链接：<a href="https://www.jianshu.com/p/74bd0ceb6182" target="_blank" rel="noopener">https://www.jianshu.com/p/74bd0ceb6182</a><br>来源：简书<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p></blockquote><h3 id="2-3-cmder-命令操作文件和文件夹"><a href="#2-3-cmder-命令操作文件和文件夹" class="headerlink" title="2.3 cmder 命令操作文件和文件夹"></a>2.3 cmder 命令操作文件和文件夹</h3><p>常用命令</p><ul><li>切换目录 cd：change directory 的简写，如：cd d:aa/nn 意思就是切换到 d 盘下的 aa 文件夹下的 nn 文件夹</li><li>回到上一目录 cd .. 这个结合我们写 js 或者 css 时，引用文件时写为../lib/aa.js 所以这个很好理解 需要注意的是在 cd 和..之间有个空格</li><li>创建文件 touch 如：touch aa.te 意思就是在当前目录下创建一个名为 aa.te 的文件</li><li>删除文件 rm 是 remove 的简写 如：rm aa.te 意思就为删除当前目录下的 aa.te 文件</li><li>创建文件夹 mkdir 为 make directory 的简写，如 mkdir aa 即为在当前目录下创建一个 aa 文件夹</li><li>删除文件夹 rm -r 其中的 r 表示递归（recusive）的意思，意思就是先删除文件夹里的文件在删除文件夹，如：rm -r aa 意思为删除 aa 文件夹下的文件和 aa 文件夹自己</li><li>打印当前目录路劲 pwd 为 print working directory 的简写，</li><li>显示当前目录下的所有文件列表 ls 为 list 的简写，当然也可以用 ll 命令，它比 ls 显示的内容更加详细，但是 ll 在 cmder 中不可用</li><li>清屏 cmder 中为 cls 和 clear 均可，reset 无效， 而在 bash 中 clear 和 reset 均可，cls 无效；</li></ul><p><img src="https://raw.githubusercontent.com/yq010105/Blog_images/master/img/cmder.png" alt="cmder"></p><blockquote><p>版权声明：本文为 CSDN 博主「LeonWuV」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。<br><a href="https://blog.csdn.net/wxl1555/article/details/79887591" target="_blank" rel="noopener">原文链接</a></p></blockquote><h3 id="2-4-更加基础的-cmd-命令"><a href="#2-4-更加基础的-cmd-命令" class="headerlink" title="2.4 更加基础的 cmd 命令"></a>2.4 更加基础的 cmd 命令</h3><ul><li>mkdir <code>mkdir 文件夹名</code> 新建文件夹</li><li>touch <code>touch 文件名</code>新建文件<ul><li>另一种方法：<code>cd .&gt;user.js</code> // 在当前目录下新建 user.js 文件</li></ul></li><li>rm/del <code>rm 文件名</code> <code>del 文件名</code>删除文件</li><li>rmdir <code>rmdir 空文件夹名</code>删除空文件夹<ul><li><code>rmdir /s/q 文件夹名</code>删除文件夹及内的全部文件 /s -删除全部子目录及内容，/q - 不显示 Y/N 询问</li><li><code>rmdir /s/q d:\multify\my-multify</code> 删除 D 盘 multify 文件夹下的 my-multify 文件夹以及子内容，并且不提示</li></ul></li><li>rename<code>rename 1.txt 1.bat</code> 文件重命名</li><li><code>echo 111&gt;&gt;1.txt</code> 将 111 写进 1.txt 中，cmd 文本编辑<ul><li><code>echo .&gt;&gt;1.txt</code> 换行写</li><li><code>for /f %i in ('type 1.txt') do md %i</code>以一个 txt 文件中的内容为名称创建文件(夹)</li><li><code>copy con 1.txt</code> 然后将内容写入 1.txt 文件中(好像只能覆盖)</li></ul></li><li><code>type 文件名</code> 查看文本文件内容</li><li><code>move 路径/文件名 路径</code> 移动文件<ul><li><code>move 路径\*.* 路径\</code> 移动所有文件</li></ul></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 学习力 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown基本知识</title>
      <link href="/2020/02/08/learn-markdown/"/>
      <url>/2020/02/08/learn-markdown/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><h2 id="1-空格"><a href="#1-空格" class="headerlink" title="1. 空格"></a>1. 空格</h2><table><thead><tr><th align="center">语法</th><th align="center">example</th><th align="center">解释</th></tr></thead><tbody><tr><td align="center"><code>ok&amp;nbsp;ok</code>&nbsp;</td><td align="center">ok&nbsp;ok</td><td align="center">它是按下 space 键产生的空格,叫不换行空格，全称是 No-Break Space</td></tr><tr><td align="center"><code>ok&amp;ensp;ok</code> </td><td align="center">ok ok</td><td align="center">等同于字体度的一半,叫“半角空格”，全称是 En Space</td></tr><tr><td align="center"><code>ok&amp;emsp;ok</code> </td><td align="center">ok ok</td><td align="center">1 em 在 16px 的字体中就是 16px,它叫“全角空格”，全称是 Em Space</td></tr><tr><td align="center"><code>ok&amp;thinsp;ok</code> </td><td align="center">ok ok</td><td align="center">“窄空格”，全称是 Thin Space。占据的宽度比较小。它是 em 之六分之一宽</td></tr><tr><td align="center"><code>ok&amp;zwj;ok</code>‍</td><td align="center">ok‍ok</td><td align="center">它叫零宽连字，全称是 Zero Width Joiner，简称“ZWJ”，是一个不打印字符</td></tr></tbody></table><blockquote><p>参考<a href="https://www.jianshu.com/p/31eade263e7a" target="_blank" rel="noopener" title="简书">网站</a></p></blockquote><h2 id="2-链接"><a href="#2-链接" class="headerlink" title="2. 链接"></a>2. 链接</h2><h3 id="2-1-行内式-方便简洁"><a href="#2-1-行内式-方便简洁" class="headerlink" title="2.1 行内式(方便简洁)"></a>2.1 行内式(方便简洁)</h3><p><code>[链接文字](链接网址 "标题")</code><br><code>This is an [example link](https://www.jianshu.com/p/31eade263e7a)</code><br>会显示为:&nbsp;This is an <a href="https://www.jianshu.com/p/31eade263e7a" target="_blank" rel="noopener">example link</a></p><h3 id="2-2-锚点（有了目录的话，基本不用了）"><a href="#2-2-锚点（有了目录的话，基本不用了）" class="headerlink" title="2.2 锚点（有了目录的话，基本不用了）"></a>2.2 锚点（有了目录的话，基本不用了）</h3><ul><li>第一种</li></ul><p><code>- [测试](#测试)</code><br><code>### &lt;a id="测试"&gt;测试&lt;/a&gt;</code></p><ul><li><a href="#测试">测试</a></li></ul><ul><li>第二种</li></ul><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">### <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#测试2"</span>&gt;</span>测试2<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">h</span><br><span class="line">t</span><br><span class="line">m</span><br><span class="line">l</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">"测试2"</span>&gt;</span>测试2<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><ul><li><a href="#测试2">测试 2</a></li></ul><blockquote><p>参考<a href="https://blog.csdn.net/wangzhibo666/article/details/88731227" target="_blank" rel="noopener" title="CSDN">link</a></p></blockquote><h2 id="3-图片"><a href="#3-图片" class="headerlink" title="3. 图片"></a>3. 图片</h2><h3 id="3-1-网络图片的添加"><a href="#3-1-网络图片的添加" class="headerlink" title="3.1 网络图片的添加"></a>3.1 网络图片的添加</h3><figure class="highlight md"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">alt 属性文本</span>](<span class="link">图片地址</span>)</span><br><span class="line"></span><br><span class="line">![<span class="string">alt 属性文本</span>](<span class="link">图片地址 "可选标题"</span>)</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![四月是你的谎言](https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=905665511,4125694826&amp;fm=26&amp;gp=0.jpg "四谎")</span><br></pre></td></tr></tbody></table></figure><p><img src="https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=905665511,4125694826&amp;fm=26&amp;gp=0.jpg" alt="四月是你的谎言" title="四谎"></p><h3 id="3-2-本地图片的添加"><a href="#3-2-本地图片的添加" class="headerlink" title="3.2 本地图片的添加"></a>3.2 本地图片的添加</h3><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">![avatar](/img/picture_exam.jpeg "example")</span><br><span class="line">--or--</span><br><span class="line">&lt;!-- &lt;img src="/img/picture_exam.jpeg " width = 10% height = 10% div align=right /&gt; --&gt;</span><br><span class="line">或者是</span><br><span class="line">&lt;!-- &lt;img src="url" width = "100" height = "100" div align=center /&gt; --&gt;</span><br></pre></td></tr></tbody></table></figure><p><img src="/img/picture_exam.jpeg" alt="avatar" title="example"><br><img src="/img/picture_exam.jpeg " width="10%" height="10%" div="" align="center"></p><h2 id="4-表格"><a href="#4-表格" class="headerlink" title="4. 表格"></a>4. 表格</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| 左对齐 | 右对齐 | 居中对齐 |</span><br><span class="line">| :----- | -----: | :------: |</span><br><span class="line">| 单元格 | 单元格 |  单元格  |</span><br><span class="line">| 单元格 | 单元格 |  单元格  |</span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th align="left">左对齐</th><th align="right">右对齐</th><th align="center">居中对齐</th></tr></thead><tbody><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr></tbody></table><blockquote><p>参考教程:<a href="https://www.runoob.com/markdown/md-tutorial.html" target="_blank" rel="noopener">markdown</a></p></blockquote><h2 id="5-设置字体大小颜色"><a href="#5-设置字体大小颜色" class="headerlink" title="5. 设置字体大小颜色"></a>5. 设置字体大小颜色</h2><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">"黑体"</span>&gt;</span>我是黑体字<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">"微软雅黑"</span>&gt;</span>我是微软雅黑<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">"STCAIYUN"</span>&gt;</span>我是华文彩云<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">#0099ff</span> <span class="attr">size</span>=<span class="string">7</span> <span class="attr">face</span>=<span class="string">"黑体"</span>&gt;</span>color=#0099ff size=72 face="黑体"<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">#00ffff</span> <span class="attr">size</span>=<span class="string">72</span>&gt;</span>color=#00ffff<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">gray</span> <span class="attr">size</span>=<span class="string">72</span>&gt;</span>color=gray<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p><font face="黑体">我是黑体字</font><br><font face="微软雅黑">我是微软雅黑</font><br><font face="STCAIYUN">我是华文彩云</font><br><font color="#0099ff" size="7" face="黑体">color=#0099ff size=72 face=”黑体”</font><br><font color="#00ffff" size="72">color=#00ffff</font><br><font color="gray" size="72">color=gray</font></p><ul><li><p>测试用的锚点：</p><ul><li><a id="测试">锚点测试</a></li><li><a id="测试2">锚点测试 2</a></li></ul><blockquote><p>参考网站:<a href="https://blog.csdn.net/weixin_37998647/article/details/79428290" target="_blank" rel="noopener" title="CSDN">CSDN</a></p></blockquote></li></ul><h2 id="6-待办清单"><a href="#6-待办清单" class="headerlink" title="6. 待办清单"></a>6. 待办清单</h2><p>可能是我的这个hexo主题不适配这种语法，但是再typora中就可以显示<br><em>有的markdown支持有的不支持</em></p><ul><li><input disabled="" type="checkbox"> 任务一</li><li><input checked="" disabled="" type="checkbox"> 任务二</li></ul><figure class="highlight md"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">- </span>[ ] 任务一</span><br><span class="line"><span class="bullet">- </span>[x] 任务二</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 学习力 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spider-Note</title>
      <link href="/2020/02/08/note-spider/"/>
      <url>/2020/02/08/note-spider/</url>
      
        <content type="html"><![CDATA[<blockquote><p>参考 Github 上的<a href="https://github.com/kingname/SourceCodeOfBook" target="_blank" rel="noopener" title="Github">教程</a>学习<br>一个连 python 都没有完全学会的菜鸡来学爬虫</p></blockquote><a id="more"></a><h1 id="1-线程"><a href="#1-线程" class="headerlink" title="1. 线程"></a>1. 线程</h1><h2 id="1-1-线程-Pool"><a href="#1-1-线程-Pool" class="headerlink" title="1.1 线程 Pool"></a>1.1 线程 Pool</h2><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> multiprocessing.dummy <span class="keyword">import</span> Pool</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">calc_power2</span><span class="params">(num)</span>:</span></span><br><span class="line"><span class="keyword">return</span> num*num</span><br><span class="line">pool = Pool(<span class="number">5</span>)</span><br><span class="line">origin_num = [x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10</span>)]</span><br><span class="line">result = pool.map(calc_power2,origin_num)</span><br><span class="line">print(<span class="string">f'0~9的平方分别为：<span class="subst">{result}</span>'</span>)</span><br></pre></td></tr></tbody></table></figure><p><code>Pool(5)</code>  五个线程</p><hr><h2 id="1-2-所用函数"><a href="#1-2-所用函数" class="headerlink" title="1.2 所用函数"></a>1.2 所用函数</h2><p><code>time.time()</code> &nbsp; 程序当前时间<br>eg：用来对比单线程和多线程访问 baidu 的速度</p><h1 id="2-request-库"><a href="#2-request-库" class="headerlink" title="2. request 库"></a>2. request 库</h1><h2 id="2-1-基础用法"><a href="#2-1-基础用法" class="headerlink" title="2.1 基础用法"></a>2.1 基础用法</h2><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">url = <span class="string">''</span></span><br><span class="line">headers = {</span><br><span class="line">    <span class="string">"UserAgent"</span>:<span class="string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like\ Gecko) Chrome/80.0.3987.87 Safari/537.36 Edg/80.0.361.48"</span></span><br><span class="line">}</span><br><span class="line">response = requests.get(url,headers=headers)</span><br><span class="line">response.encoding = <span class="string">'utf-8'</span>  <span class="comment">#或者GBK</span></span><br><span class="line">html = response.text</span><br></pre></td></tr></tbody></table></figure><h2 id="2-2-进阶用法"><a href="#2-2-进阶用法" class="headerlink" title="2.2 进阶用法"></a>2.2 进阶用法</h2><ul><li><strong>使用 requests 模拟发送 get 请求</strong></li></ul><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://exercise.kingname.info/ajax_1_backend'</span></span><br><span class="line">html = requests.get(url).content.decode()</span><br><span class="line">print(html)</span><br><span class="line"><span class="comment"># 如果你看到这一段文字，说明你已经成功访问了这个页面,并获取了GET方式的异步加载数据。</span></span><br></pre></td></tr></tbody></table></figure><ul><li><strong>使用 requests 模拟发送 post 请求</strong></li></ul><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://exercise.kingname.info/ajax_1_postbackend'</span></span><br><span class="line">html = requests.post(url,json={<span class="string">'name'</span>:<span class="string">'yunq'</span>,<span class="string">'age'</span>:<span class="number">24</span>}).content.decode()</span><br><span class="line">print(html)</span><br><span class="line"><span class="comment"># 如果你看到这一段文字，说明你已经成功访问了这个页面，并获取了POST方式的异步加载数据。你向服务器提交的两个参数，分别为name： yunq, age：24</span></span><br></pre></td></tr></tbody></table></figure><blockquote><p>参考<a href="http://exercise.kingname.info/exercise_ajax_1.html" target="_blank" rel="noopener">学习网站</a>，(<a href="#异步GET与POST请求">异步 GET 与 POST 请求</a>)</p></blockquote><h1 id="3-re-库"><a href="#3-re-库" class="headerlink" title="3. re 库"></a>3. re 库</h1><h2 id="3-1-基础用法"><a href="#3-1-基础用法" class="headerlink" title="3.1 基础用法"></a>3.1 基础用法</h2><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">re.findall(<span class="string">r''</span>,html,re.S)   <span class="comment">#返回一个列表，这是一个列表所以可以取第一个数据</span></span><br><span class="line">                            <span class="comment">#re.findall(r'',html,re.S)[0]</span></span><br><span class="line"></span><br><span class="line">re.search(<span class="string">r''</span>,html,re.S)    <span class="comment">#返回一个re.Match类型数据</span></span><br><span class="line">                            <span class="comment">#&lt;re.Match object; span=(214, 297), match='secret = \'{"code": "\\u884c\\u52a8\\u4ee3\\u53f7&gt;</span></span><br><span class="line"></span><br><span class="line">re.search(<span class="string">r'href="sf"&gt;(.*?)&lt;'</span>).group()</span><br><span class="line">                            <span class="comment">#返回一个字符串             #.*?是匹配到的内容</span></span><br><span class="line">                            <span class="comment">#group()返回的是''内的字符串内容:href="sf"&gt;(.*?)&lt;</span></span><br><span class="line">                            <span class="comment">#group(1)返回的是()中的字符串内容:.*?</span></span><br><span class="line">                            <span class="comment">#如果(.*?)有多个，则使用group(1),group(2)........</span></span><br></pre></td></tr></tbody></table></figure><h1 id="4-正则表达式"><a href="#4-正则表达式" class="headerlink" title="4. 正则表达式"></a>4. 正则表达式</h1><p><code>.*?</code></p><h1 id="5-Xpath–lxml-库"><a href="#5-Xpath–lxml-库" class="headerlink" title="5. Xpath–lxml 库"></a>5. Xpath–lxml 库</h1><ul><li>XPath 是一种查询语言，能从 XML\HTML 的树状结构中寻找节点</li></ul><h2 id="5-1-XPath-语法"><a href="#5-1-XPath-语法" class="headerlink" title="5.1 XPath 语法"></a>5.1 XPath 语法</h2><h3 id="5-1-1-XPath-语法解析"><a href="#5-1-1-XPath-语法解析" class="headerlink" title="5.1.1 XPath 语法解析"></a>5.1.1 XPath 语法解析</h3><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">example_html</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>测试<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"useful"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"info"</span>&gt;</span>我需要的信息1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"info"</span>&gt;</span>我需要的信息2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"info"</span>&gt;</span>我需要的信息3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"useless"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"info"</span>&gt;</span>垃圾1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"info"</span>&gt;</span>垃圾2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p><code>info = selector.xpath('//div[@class="useful"]/ul/li/text()')</code><br>就可以提取出 class=”userful”中的三句话，返回一个列表</p><h3 id="5-1-2-基本框架"><a href="#5-1-2-基本框架" class="headerlink" title="5.1.2 基本框架"></a>5.1.2 基本框架</h3><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> lxml.html</span><br><span class="line">selector = lxml.html.fromstring(<span class="string">'网页源代码'</span>)    <span class="comment">#网页源代码可用requests来获取</span></span><br><span class="line">info = selector.xpath(<span class="string">'一段XPath语句'</span>)</span><br></pre></td></tr></tbody></table></figure><h3 id="5-1-3-example"><a href="#5-1-3-example" class="headerlink" title="5.1.3 example"></a>5.1.3 example</h3><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> lxml.html</span><br><span class="line"></span><br><span class="line">source = <span class="string">'''</span></span><br><span class="line"><span class="string">&lt;html&gt;</span></span><br><span class="line"><span class="string">    &lt;head&gt;</span></span><br><span class="line"><span class="string">&nbsp;&nbsp;&nbsp;      &lt;title&gt;测试&lt;/title&gt;</span></span><br><span class="line"><span class="string">&nbsp;   &lt;/head&gt;</span></span><br><span class="line"><span class="string">&nbsp;   &lt;body&gt;</span></span><br><span class="line"><span class="string">&nbsp;&nbsp;&nbsp;      &lt;div class="useful"&gt;</span></span><br><span class="line"><span class="string"> &lt;ul&gt;</span></span><br><span class="line"><span class="string">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;            &lt;li class="info"&gt;我需要的信息1&lt;/li&gt;</span></span><br><span class="line"><span class="string">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;            &lt;li class="info"&gt;我需要的信息2&lt;/li&gt;</span></span><br><span class="line"><span class="string">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;            &lt;li class="info"&gt;我需要的信息3&lt;/li&gt;</span></span><br><span class="line"><span class="string"> &lt;/ul&gt;</span></span><br><span class="line"><span class="string">&nbsp;&nbsp;&nbsp;&nbsp;     &lt;/div&gt;</span></span><br><span class="line"><span class="string">&nbsp;&nbsp;&nbsp;&nbsp;     &lt;div class="useless"&gt;</span></span><br><span class="line"><span class="string">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;         &lt;ul&gt;</span></span><br><span class="line"><span class="string">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;           &lt;li class="info"&gt;垃圾1&lt;/li&gt;</span></span><br><span class="line"><span class="string">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;           &lt;li class="info"&gt;垃圾2&lt;/li&gt;</span></span><br><span class="line"><span class="string">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;         &lt;/ul&gt;</span></span><br><span class="line"><span class="string">&nbsp;&nbsp;&nbsp;&nbsp;     &lt;/div&gt;</span></span><br><span class="line"><span class="string">&nbsp;    &lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">selector = lxml.html.fromstring(source)</span><br><span class="line">info = selector.xpath(<span class="string">'//div[@class="useful"]/ul/li/text()'</span>)</span><br><span class="line">print(info)         <span class="comment">#['我需要的信息1', '我需要的信息2', '我需要的信息3']</span></span><br></pre></td></tr></tbody></table></figure><hr><ul><li>a.<strong>XPath 语句格式</strong><br><code>info = selector.xpath('一段XPath语句')</code>中’一段 XPath 语句’的格式<br>核心思想：XPath 就是写地址<br>获取文本：<code>//标签1[@属性1="属性值1"]/标签2[@属性2="属性值2"]/..../text()</code><br>获取属性值：<code>//标签1[@属性1="属性值1"]/标签2[@属性2="属性值2"]/..../@属性n</code><br>其中的<code>[@属性="属性值"]</code>不是必需的，其作用是帮助过滤相同的标签，无相同标签可省略</li><li>b.<strong>标签 1 的选取</strong><br>标签 1 可以直接从 html 这个最外层的标签开始，一层一层往下找，这个时候，XPath 语句是这样的：<br><code>/html/body/div[@class="useful"]/ul/li/text()</code><br>但是由于前面的’/html/body’是所有 HTML 通用的，而且没有属性，所以可不写，即带属性标签前的标签都可以省略</li><li>c.<strong>可以省略的属性</strong><br>1、本身标签没有属性<br>2、这个标签所有的属性值相同</li><li>d.<strong>XPath 的特殊情况</strong><br>1、以相同字符串开头<code>标签[starts-with(@属性,"开头字符串")]</code></li></ul><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id="test-1"&gt;需要的内容1&lt;/div&gt;</span><br><span class="line">&lt;div id="test-2"&gt;需要的内容2&lt;/div&gt;</span><br><span class="line">&lt;div id="testfault"&gt;需要的内容3&lt;/div&gt;</span><br><span class="line">&lt;div id="useless"&gt;这是我不需要的内容&lt;/div&gt;</span><br><span class="line">content = selector.xpath(<span class="string">'//div[starts-with(@id,"test")]/text()'</span>)</span><br><span class="line">print(content)      <span class="comment">#['需要的内容1','需要的内容3','需要的内容2']</span></span><br></pre></td></tr></tbody></table></figure><p>2、属性值包含相同字符串<code>标签[contains(@属性,"相同字符串")]</code><br>3、对 XPath 返回的对象执行 XPath</p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">useful = selector.xpath(<span class="string">'//div[@class="useful"]'</span>)   <span class="comment">#这里返回一个列表</span></span><br><span class="line">info_list = useful[<span class="number">0</span>].xpath(<span class="string">'ul/li/text()'</span>)         <span class="comment">#useful[0]即为列表中第一个数据</span></span><br><span class="line">print(info_list)</span><br></pre></td></tr></tbody></table></figure><p>4、不同标签下的文字</p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> lxml.html</span><br><span class="line"></span><br><span class="line">html = <span class="string">'''</span></span><br><span class="line"><span class="string">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="string">&lt;html&gt;</span></span><br><span class="line"><span class="string">&lt;head lang="en"&gt;</span></span><br><span class="line"><span class="string">    &lt;meta charset="UTF-8"&gt;</span></span><br><span class="line"><span class="string">    &lt;title&gt;&lt;/title&gt;</span></span><br><span class="line"><span class="string">&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">&lt;div id="test3"&gt;</span></span><br><span class="line"><span class="string">        我左青龙，</span></span><br><span class="line"><span class="string">        &lt;span id="tiger"&gt;</span></span><br><span class="line"><span class="string">        右白虎，</span></span><br><span class="line"><span class="string">            &lt;ul&gt;上朱雀，</span></span><br><span class="line"><span class="string">                &lt;li&gt;下玄武。&lt;/li&gt;</span></span><br><span class="line"><span class="string">            &lt;/ul&gt;</span></span><br><span class="line"><span class="string">        老牛在当中，</span></span><br><span class="line"><span class="string">        &lt;/span&gt;</span></span><br><span class="line"><span class="string">        龙头在胸口。</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="comment">#如果直接提取id="test3"</span></span><br><span class="line">selector = lxml.html.fromstring(html)</span><br><span class="line">content_1 = selector.xpath(<span class="string">'//div[@id="test3"]/text()'</span>)</span><br><span class="line">print(content_1)   <span class="comment">#['\n        我左青龙，\n        ', '\n        龙头在胸口。\n    ']</span></span><br><span class="line"><span class="comment">#只会提取到div标签中的文字信息，而不会自动提取子标签中的信息</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#这时就需要用string(.)关键字了</span></span><br><span class="line">selector = lxml.html.fromstring(html)</span><br><span class="line">data = selector.xpath(<span class="string">'//div[@id="test3"]'</span>)[<span class="number">0</span>]</span><br><span class="line">info = data.xpath(<span class="string">'string(.)'</span>)</span><br><span class="line">print(info)     <span class="comment">#就可以提取出所有的文本信息了</span></span><br></pre></td></tr></tbody></table></figure><h2 id="5-2-XPath-通过-chrome-辅助构造"><a href="#5-2-XPath-通过-chrome-辅助构造" class="headerlink" title="5.2 XPath 通过 chrome 辅助构造"></a>5.2 XPath 通过 chrome 辅助构造</h2><p>在一行源码单击右键，选择“Copy”→“Copy XPath”命令<br>把结果粘贴下来，可以看到如下的 XPath 语句：<br><code>//*[@id="thread_list"]/li[2]/div/div[2]/div[1]/div[1]/a</code><br><em>其中方括号中的数字，表示这是第几个该标签，但需要注意，这里的数字是从 1 开始</em></p><h1 id="6-Beautiful-Soup4-库-BS4"><a href="#6-Beautiful-Soup4-库-BS4" class="headerlink" title="6. Beautiful Soup4 库(BS4)"></a>6. Beautiful Soup4 库(BS4)</h1><p><em>BS4 在某些方面比 XPath 易懂，但是不如 XPath 简洁，而且由于它是使用 Python 开发的，因此速度比 XPath 慢。</em><br>使用 Beautiful Soup4 提取 HTML 内容，一般要经过以下两步。</p><h2 id="6-1-bs4-处理步骤"><a href="#6-1-bs4-处理步骤" class="headerlink" title="6.1 bs4 处理步骤"></a>6.1 bs4 处理步骤</h2><ul><li>1)处理源代码生成 BeautifulSoup 对象。<br>解析源代码生成 BeautifulSoup 对象，使用以下代码：<br><code>soup = BeautifulSoup(网页源代码, '解析器')</code><br>解析器：<br>这里的“解析器”，可以使用 html.parser：<br><code>soup = BeautifulSoup(source, 'html.parser')</code><br>如果安装了 lxml，还可以使用 lxml：<br><code>soup = BeautifulSoup(source, 'lxml')</code></li><li>2)使用 find<em>all()或者 find()来查找内容。<br>`soup.find(class</em>=’属性值’)`<br><em>由于 HTML 中的 class 属性与 Python 的 class 关键字相同，因此为了不产生冲突，BS4 规定，如果遇到要查询 class 的情况，使用“class_”来代替</em></li></ul><h2 id="6-2-example"><a href="#6-2-example" class="headerlink" title="6.2 example"></a>6.2 <a href="http://exercise.kingname.info/exercise_bs_1.html" target="_blank" rel="noopener">example</a></h2><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line">html = requests.get(<span class="string">'http://exercise.kingname.info/exercise_bs_1.html'</span>).content.decode()</span><br><span class="line"><span class="comment"># 1、解析源代码</span></span><br><span class="line">soup = BeautifulSoup(html,<span class="string">'lxml'</span>)</span><br><span class="line"><span class="comment"># 2、查找内容</span></span><br><span class="line">info = soup.find(class_= <span class="string">'test'</span>)</span><br><span class="line">print(info.string)      <span class="comment">#我需要的信息2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 先抓大，再抓小</span></span><br><span class="line">useful = soup.find(class_=<span class="string">'useful'</span>)</span><br><span class="line">all_content = useful.find_all(<span class="string">'li'</span>)</span><br><span class="line"><span class="keyword">for</span> li <span class="keyword">in</span> all_content:</span><br><span class="line">    print(li.string)        <span class="comment">#我需要的信息1</span></span><br><span class="line">                            <span class="comment">#我需要的信息2</span></span><br><span class="line">                            <span class="comment">#我需要的信息3</span></span><br><span class="line">    print(li)               <span class="comment">#&lt;li class="info"&gt;我需要的信息1&lt;/li&gt;</span></span><br><span class="line">                            <span class="comment">#&lt;li class="test"&gt;我需要的信息2&lt;/li&gt;</span></span><br><span class="line">                            <span class="comment">#&lt;li class="iamstrange"&gt;我需要的信息3&lt;/li&gt;</span></span><br><span class="line">    print(li[<span class="string">'class'</span>])      <span class="comment">#['info']</span></span><br><span class="line">                            <span class="comment">#['test']</span></span><br><span class="line">                            <span class="comment">#['iamstrange']</span></span><br></pre></td></tr></tbody></table></figure><ul><li>其他查找方法<br><strong>以‘我需要’为开头的信息</strong><br><code>content = soup.find_all(text = re.compile('我需要'))</code><br><strong>对属性值搜素使用正则,即对 iamstrang 属性值搜索</strong></li></ul><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">content = soup.find_all(class_=re.compile(<span class="string">'iam'</span>))[<span class="number">0</span>]</span><br><span class="line">print(content.string)       <span class="comment">#我需要的信息3</span></span><br></pre></td></tr></tbody></table></figure><h1 id="7-异步加载与请求头"><a href="#7-异步加载与请求头" class="headerlink" title="7. 异步加载与请求头"></a>7. 异步加载与请求头</h1><h2 id="7-1-异步加载"><a href="#7-1-异步加载" class="headerlink" title="7.1 异步加载"></a>7.1 异步加载</h2><p><em>异步加载：一个页面，点击后网址不变，页面改变</em></p><h3 id="7-1-1-AJAX-技术"><a href="#7-1-1-AJAX-技术" class="headerlink" title="7.1.1 AJAX 技术"></a>7.1.1 AJAX 技术</h3><ul><li>AJAX 是 Asynchronous JavaScript And XML 的首字母缩写，意为异步 JavaScript 与 XML</li><li>使用 AJAX 技术，可以在不刷新网页的情况下更新网页数据。使用 AJAX 技术的网页，一般会使用 HTML 编写网页的框架。</li><li>在打开网页的时候，首先加载的是这个框架。剩下的部分将会在框架加载完成以后再通过 JavaScript 从后台加载。</li></ul><h3 id="7-1-2-JSON"><a href="#7-1-2-JSON" class="headerlink" title="7.1.2 JSON"></a>7.1.2 JSON</h3><ul><li>JSON 的全称是 JavaScript Object Notation，是一种轻量级的数据交换格式。网络之间使用 HTTP 方式传递数据的时候，绝大多数情况下传递的都是字符串。</li><li>因此，当需要把 Python 里面的数据发送给网页或者其他编程语言的时候，可以先将 Python 的数据转化为 JSON 格式的字符串，然后将字符串传递给其他语言，其他语言再将 JSON 格式的字符串转换为它自己的数据格式</li><li><strong>列表\字典与字符串相互转化</strong></li><li><em>python 中字典 or 列表 与 json 格式字符串的相互转化</em></li></ul><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">data = {</span><br><span class="line">    <span class="string">'name'</span> : <span class="string">'Connor'</span>,</span><br><span class="line">    <span class="string">'sex'</span> : <span class="string">'boy'</span>,</span><br><span class="line">    <span class="string">'age'</span> : <span class="number">26</span></span><br><span class="line">}</span><br><span class="line">print(data)     <span class="comment">#dict   #{'name': 'Connor', 'sex': 'boy', 'age': 26}</span></span><br><span class="line">data1=json.dumps(data)</span><br><span class="line">print(data1)    <span class="comment">#str    #{"name": "Connor", "sex": "boy", "age": 26}</span></span><br><span class="line">data2=json.loads(data1)</span><br><span class="line">print(data2)    <span class="comment">#dict   #{'name': 'Connor', 'sex': 'boy', 'age': 26}</span></span><br><span class="line"><span class="comment"># 如果加上indent=4参数</span></span><br><span class="line">data3 = json.dumps(data,indent=<span class="number">4</span>)</span><br><span class="line">print(data3)    <span class="comment">#str</span></span><br><span class="line"><span class="comment">#结果更加的美观易读</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">{</span></span><br><span class="line"><span class="string">    "name": "Connor",</span></span><br><span class="line"><span class="string">    "sex": "boy",</span></span><br><span class="line"><span class="string">    "age": 26</span></span><br><span class="line"><span class="string">}</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></tbody></table></figure><ul><li><strong>str=json.dumps(dict)</strong></li><li><strong>dict=json.loads(str)</strong></li></ul><h3 id="7-1-3-异步-GET-与-POST-请求"><a href="#7-1-3-异步-GET-与-POST-请求" class="headerlink" title="7.1.3 异步 GET 与 POST 请求"></a>7.1.3 异步 GET 与 POST 请求</h3><ul><li>使用异步加载技术的网站，被加载的内容是不能在源代码中找到的。</li><li>为了解决这个问题，就需要使用 Google Chrome 浏览器的开发者模式。在网页上单击右键，选择“检查”命令，然后定位到“Network”选项卡</li><li>接下来需要刷新网页。在 Windows 下，按 F5 键或者单击地址栏左边的“刷新”按钮</li><li>单击“Network”选项卡下面出现的“ajax_1_backend”和“ajax_1_postbackend”，并定位到“Response”选项卡，可以看到这里出现了网页上面的内容</li><li>再选择“Headers”选项卡，可以看到这个请求使用 GET 方式，发送到<a href="http://exercise.kingname.info/ajax_1_backend" target="_blank" rel="noopener">http://exercise.kingname.info/ajax_1_backend</a></li><li>对于网页中的第 2 条内容，查看“Headers”选项卡，可以看到，这是使用 POST 方式向<a href="http://exercise.kingname.info/ajax_1_postbackend" target="_blank" rel="noopener">http://exercise.kingname.info/ajax_1_postbackend</a> 发送请求，并以 JSON 格式提交数据<blockquote><p>具体代码实现看<em>request</em>&nbsp;&nbsp;的<strong><a href="#进阶用法">进阶用法</a></strong></p></blockquote></li></ul><h3 id="7-1-4-特殊的异步加载"><a href="#7-1-4-特殊的异步加载" class="headerlink" title="7.1.4 特殊的异步加载"></a>7.1.4 特殊的异步加载</h3><ul><li><strong><a href="http://exercise.kingname.info/exercise_ajax_2.html" target="_blank" rel="noopener">练习页面</a></strong></li></ul><ul><li>伪装成异步加载的后端渲染,数据就在源代码里，但却不直接显示出来</li><li>源代码最下面的 JavaScript 代码，其中有一段：<br><code>{"code": "\u884c\u52a8\u4ee3\u53f7\uff1a\u5929\u738b\u76d6\u5730\u864e"}</code></li><li>使用 Python 去解析，发现可以得到网页上面的内容</li></ul><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">html_json = <span class="string">'{"code": "\u884c\u52a8\u4ee3\u53f7\uff1a\u5929\u738b\u76d6\u5730\u864e"}'</span></span><br><span class="line">html_dic = json.loads(html_json)</span><br><span class="line">print(html_dic)      <span class="comment">#{'code': '行动代号：天王盖地虎'}</span></span><br></pre></td></tr></tbody></table></figure><ul><li><strong>这种假的异步加载页面，其处理思路一般是使用正则表达式从页面中把数据提取出来，然后直接解析</strong></li></ul><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://exercise.kingname.info/exercise_ajax_2.html'</span></span><br><span class="line">html = requests.get(url).content.decode()</span><br><span class="line">code_json = re.search(<span class="string">"secret = '(.*?)'"</span>, html, re.S).group(<span class="number">1</span>)</span><br><span class="line">code_dict = json.loads(code_json)</span><br><span class="line">print(code_dict[<span class="string">'code'</span>])</span><br><span class="line"><span class="comment">#行动代号：天王盖地虎</span></span><br></pre></td></tr></tbody></table></figure><h3 id="7-1-5-多次请求的异步加载"><a href="#7-1-5-多次请求的异步加载" class="headerlink" title="7.1.5 多次请求的异步加载"></a>7.1.5 多次请求的异步加载</h3><ul><li><strong><a href="http://exercise.kingname.info/exercise_ajax_3.html" target="_blank" rel="noopener">练习页面</a></strong></li></ul><ul><li>还有一些网页，显示在页面上的内容要经过多次异步请求才能得到。</li><li>第 1 个 AJAX 请求返回的是第 2 个请求的参数，第 2 个请求的返回内容又是第 3 个请求的参数，只有得到了上一个请求里面的有用信息，才能发起下一个请求</li><li>在“Headers”选项卡查看这个 POST 请求的具体参数，在 body 里面发现两个奇怪的参数 secret1 和 secret2</li><li>尝试修改 secret1 和 secret2，发现 POST 请求无法得到想要的结果<br><strong>奇怪的参数</strong></li></ul><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">name: "xx"</span><br><span class="line">age: 24</span><br><span class="line">secret1: "kingname is genius."</span><br><span class="line">secret2: "kingname"</span><br></pre></td></tr></tbody></table></figure><p><strong>如果修改这两个参数</strong></p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://exercise.kingname.info/ajax_3_postbackend'</span></span><br><span class="line">return_json_1 = requests.post(url,json={<span class="string">"name"</span>:<span class="string">"xx"</span>,</span><br><span class="line"><span class="string">"age"</span>:<span class="string">"24"</span>,<span class="string">"secret1"</span>:<span class="string">"123"</span>,<span class="string">"secret2"</span>:<span class="string">"456"</span>})</span><br><span class="line">return_json_2 = requests.post(url,json={<span class="string">"name"</span> :<span class="string">"xx"</span>,<span class="string">"age"</span>:<span class="number">23</span></span><br><span class="line">})</span><br><span class="line">print(json.loads(return_json_1.content.decode()))   <span class="comment">#{'success': False, 'reason': '参数错误'}</span></span><br><span class="line">print(json.loads(return_json_2.content.decode()))   <span class="comment">#{'success': False, 'reason': '参数不全'}</span></span><br></pre></td></tr></tbody></table></figure><ul><li>打开这个练习页的源代码，在源代码中可以找到 secret_2</li></ul><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>exercise ajax load<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">var</span> secret_2 = <span class="string">"kingname"</span>;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"static/js/jquery-3.2.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"static/js/loaddata_3.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><ul><li>虽然在 POST 参数中，名字是 secret2，而源代码中的名字是 secret_2，不过从值可以看出这就是同一个参数</li><li>源代码里面没有 secret1，因此就要考虑这个参数是不是来自于另一个异步请求</li><li>继续在开发者工具中查看其他请求，可以成功找到 secret1,注意，它的名字变为了“code”，但是从值可以看出这就是 secret1</li></ul><ul><li><strong>不少网站也会使用这种改名字的方式来迷惑爬虫开发者</strong></li></ul><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">{<span class="attr">code</span>: <span class="string">"kingname is genius."</span>, <span class="attr">success</span>: <span class="literal">true</span>}</span><br><span class="line">code: <span class="string">"kingname is genius."</span></span><br><span class="line">success: <span class="literal">true</span></span><br></pre></td></tr></tbody></table></figure><ul><li>这一条请求就是一个不带任何参数的 GET 请求</li><li><em>对于这种多次请求才能得到数据的情况，解决办法就是逐一请求，得到返回结果以后再发起下一个请求。具体到这个例子中，那就是先从源代码里面获得 secret2，再通过 GET 请求得到 secret1，最后使用 secret1 和 secret2 来获取页面上显示的内容</em></li></ul><ul><li><strong>[爬取网站]<a href="http://exercise.kingname.info/exercise_ajax_3.html" target="_blank" rel="noopener">http://exercise.kingname.info/exercise_ajax_3.html</a>)</strong></li></ul><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://exercise.kingname.info/exercise_ajax_3.html'</span></span><br><span class="line">first_ajax_url = <span class="string">'http://exercise.kingname.info/ajax_3_backend'</span></span><br><span class="line">second_ajax_url = <span class="string">'http://exercise.kingname.info/ajax_3_postbackend'</span></span><br><span class="line"></span><br><span class="line">page_html = requests.get(url).content.decode()</span><br><span class="line">secret_2 = re.search(<span class="string">"secret_2 = '(.*?)';"</span>,page_html,re.S).group(<span class="number">1</span>)</span><br><span class="line">print(secret_2)           <span class="comment">#kingname</span></span><br><span class="line"></span><br><span class="line">ajax_1_json = requests.get(first_ajax_url).content.decode()</span><br><span class="line">print(ajax_1_json)        <span class="comment">#{"code": "kingname is genius.", "success": true}</span></span><br><span class="line">ajax_1_dict = json.loads(ajax_1_json)</span><br><span class="line">secret_1 = ajax_1_dict[<span class="string">'code'</span>]</span><br><span class="line">print(secret_1)           <span class="comment">#kingname is genius.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取了secret_1和secret_2后post请求second_ajax_url</span></span><br><span class="line"></span><br><span class="line">ajax_2_json = requests.post(second_ajax_url,json={</span><br><span class="line">    <span class="string">'name'</span>:<span class="string">'yq'</span>,<span class="string">'age'</span>:<span class="number">24</span>,<span class="string">'secret1'</span>:secret_1,<span class="string">'secret2'</span>:secret_2</span><br><span class="line">}).content.decode()</span><br><span class="line">print(ajax_2_json)          <span class="comment">#{"code": "\u884c\u52a8\u4ee3\u53f7\uff1a\u54ce\u54df\u4e0d\u9519\u54e6", "success": true}</span></span><br><span class="line"></span><br><span class="line">ajax_2_dict = json.loads(ajax_2_json)</span><br><span class="line">print(ajax_2_dict)          <span class="comment">#{'code': '行动代号：哎哟不错哦', 'success': True}</span></span><br><span class="line"></span><br><span class="line">code = ajax_2_dict[<span class="string">'code'</span>]</span><br><span class="line">print(code)                 <span class="comment">#行动代号：哎哟不错哦</span></span><br></pre></td></tr></tbody></table></figure><h3 id="7-1-6-基于异步加载的简单登录"><a href="#7-1-6-基于异步加载的简单登录" class="headerlink" title="7.1.6 基于异步加载的简单登录"></a>7.1.6 基于异步加载的简单登录</h3><ul><li><strong><a href="http://exercise.kingname.info/exercise_ajax_4.html" target="_blank" rel="noopener">练习页面</a></strong></li></ul><ul><li>网站的登录方式有很多种，其中有一种比较简单的方式，就是使用 AJAX 发送请求来进行登录</li><li>在<a href="http://exercise.kingname.info/exercise_ajax_4.html" target="_blank" rel="noopener">练习页面</a>中根据输入框中的提示，使用用户名“kingname”和密码“genius”进行登录,登录成功以后弹出提示框</li><li><strong>对于这种简单的登录功能，可以使用抓取异步加载网页的方式来进行处理</strong></li><li>在 Chrome 开发者工具中可以发现，当单击“登录”按钮时，网页向后台发送了一条请求<br><strong><code>{"code": "kingname is genius", "success": true}</code></strong></li></ul><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://exercise.kingname.info/ajax_4_backend'</span></span><br><span class="line">code_json = requests.post(url,json={</span><br><span class="line">    <span class="string">'username'</span>:<span class="string">'kingname'</span>,<span class="string">'password'</span>:<span class="string">'genius'</span>}).content.decode()</span><br><span class="line">code__dict = json.loads(code_json)</span><br><span class="line">print(code__dict[<span class="string">'code'</span>])</span><br><span class="line"><span class="comment"># kingname is genius</span></span><br></pre></td></tr></tbody></table></figure><ul><li>这就是使用 POST 方式的最简单的 AJAX 请求。使用获取 POST 方式的 AJAX 请求的代码，就能成功获取到登录以后返回的内容</li></ul><h2 id="7-2-请求头"><a href="#7-2-请求头" class="headerlink" title="7.2 请求头"></a>7.2 请求头</h2><h3 id="7-2-1-请求头的作用"><a href="#7-2-1-请求头的作用" class="headerlink" title="7.2.1 请求头的作用"></a>7.2.1 请求头的作用</h3><ul><li>使用计算机网页版外卖网站的读者应该会发现这样一个现象：第一次登录外卖网页的时候会让你选择当前所在的商业圈，一旦选定好之后关闭浏览器再打开，网页就会自动定位到先前选择的商业圈</li><li>又比如，例如携程的网站，使用计算机浏览器打开的时候，页面看起来非常复杂多样</li><li>同一个网址，使用手机浏览器打开时，网址会自动发生改变，而且得到的页面竟然完全不同<br><strong>同一个网址，PC 端和手机端页面不同</strong></li></ul><ul><li>Headers 称为请求头，浏览器可以将一些信息通过 Headers 传递给服务器，服务器也可以将一些信息通过 Headers 传递给浏览器，电商网站常常应用的 Cookies 就是 Headers 里面的一个部分</li></ul><h3 id="7-2-2-伪造请求头"><a href="#7-2-2-伪造请求头" class="headerlink" title="7.2.2 伪造请求头"></a>7.2.2 伪造请求头</h3><ul><li>打开<a href="http://exercise.kingname.info/exercise_headers.html" target="_blank" rel="noopener">练习页</a>，使用 Chrome 的开发者工具监控这个页面的网页请求</li><li>页面看起来像是发起了一个普通的 GET 方式的异步请求给<a href="http://exercise.kingname.info/exercise_headers_backend" target="_blank" rel="noopener">http://exercise.kingname.info/exercise_headers_backend</a></li><li>使用 requests 尝试获取这个网址的返回信息,结果发现失败</li><li>使用浏览器访问网站的时候，网站可以看到一个名称为 Headers（请求头）的东西</li></ul><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">headers = {</span><br><span class="line">            Accept: *<span class="comment">/*</span></span><br><span class="line"><span class="comment">            Accept-Encoding: gzip, deflate</span></span><br><span class="line"><span class="comment">            Accept-Language: zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7</span></span><br><span class="line"><span class="comment">            anhao: kingname</span></span><br><span class="line"><span class="comment">            Content-Type: application/json; charset=utf-8</span></span><br><span class="line"><span class="comment">            Cookie: __cfduid=d513aff6c34f63c4c2971cdf1e19780051581303763</span></span><br><span class="line"><span class="comment">            Host: exercise.kingname.info</span></span><br><span class="line"><span class="comment">            Proxy-Connection: keep-alive</span></span><br><span class="line"><span class="comment">            Referer: http://exercise.kingname.info/exercise_headers.html</span></span><br><span class="line"><span class="comment">            User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.79 Safari/537.36</span></span><br><span class="line"><span class="comment">            X-Requested-With: XMLHttpRequest</span></span><br><span class="line"><span class="comment">            }</span></span><br></pre></td></tr></tbody></table></figure><ul><li>为了解决这个问题，就需要给爬虫“换头”。把浏览器的头安装到爬虫的身上，这样网站就不知道谁是谁了</li><li>要换头，首先就需要知道浏览器的头是什么样的。因此需要在 Chrome 浏览器开发者工具的“Network”选项卡的 Request Headers 里面观察这一次请求的请求头</li><li>在 requests 里面，设置请求头的参数名称为“headers”，它的值是一个字典<br><strong>带有请求头的请求，使用 requests 的发送格式为：</strong></li></ul><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">html = requests.get(url, headers=字典).content.decode()</span><br><span class="line">html = requests.post(url, json=xxx, headers=字典).content.decode()</span><br></pre></td></tr></tbody></table></figure><ul><li>代码中的字典就对应了浏览器中的请求头</li><li>在爬虫里面创建一个字典，将 Chrome 的请求头的内容复制进去，并调整好格式，发起一个带有 Chrome 请求头的爬虫请求，可以发现请求获得成功</li><li>虽然对于某些网站，在请求头里面只需要设置 User-Agent 就可以正常访问了，但是为了保险起见，还是建议把所有项目都带上，这样可以让爬虫更“像”浏览器</li></ul><h2 id="7-3-模拟浏览器"><a href="#7-3-模拟浏览器" class="headerlink" title="7.3 模拟浏览器"></a>7.3 模拟浏览器</h2><ul><li><strong><a href="http://exercise.kingname.info/exercise_advanced_ajax.html" target="_blank" rel="noopener">练习页面</a></strong></li><li><em>问题：</em></li><li>有一些网站在发起 AJAX 请求的时候，会带上特殊的字符串用于身份验证。这种字符串称为 Token</li><li>打开练习页面，这个页面在发起 AJAX 请求的时候会在 Headers 中带上一个参数 ReqTime；在 POST 发送的数据中会有一个参数 sum</li><li>多次刷新页面，可以发现 ReqTime 和 sum 一直在变化</li><li>不难看出 ReqTime 是精确到毫秒的时间戳，即使使用 Python 生成了一个时间戳，也不能得到网页上面的内容</li></ul><h3 id="7-3-1-Selenium-介绍"><a href="#7-3-1-Selenium-介绍" class="headerlink" title="7.3.1 Selenium 介绍"></a>7.3.1 Selenium 介绍</h3><ul><li>虽然在网页的源代码中无法看到被异步加载的内容，但是在 Chrome 的开发者工具的“Elements”选项卡下却可以看到网页上的内容</li></ul><h3 id="7-3-2-selenium-安装"><a href="#7-3-2-selenium-安装" class="headerlink" title="7.3.2 selenium 安装"></a>7.3.2 selenium 安装</h3><ul><li>安装 selenium <code>pip install selenium</code></li><li>下载 ChromeDriver</li></ul><h3 id="7-3-3-selenium-的使用"><a href="#7-3-3-selenium-的使用" class="headerlink" title="7.3.3 selenium 的使用"></a>7.3.3 selenium 的使用</h3><h4 id="7-3-3-1-获取源代码"><a href="#7-3-3-1-获取源代码" class="headerlink" title="7.3.3.1 获取源代码"></a>7.3.3.1 获取源代码</h4><ul><li><strong>将 chromedriver 与代码放在同一个文件夹中以方便代码直接调用</strong></li></ul><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 初始化selenium</span></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line">driver = webdriver.Chrome(<span class="string">'./chromedriver'</span>)</span><br></pre></td></tr></tbody></table></figure><ul><li>指定了 Selenium 使用 ChromeDriver 来操作 Chrome 解析网页，括号里的参数就是 ChromeDriver 可执行文件的地址</li></ul><ul><li>如果要使用 PhantomJS，只需要修改第 3 行代码即可：driver = webdriver.PhantomJS(‘./phantomjs’)，需要将 PhantomJS 的可执行文件与代码放在一起</li><li>需要特别提醒的是，如果 chromedriver 与代码不在一起，可以通过绝对路径来指定，例如：driver = webdriver.Chrome(‘/usr/bin/chromedriver’)</li><li>使用 Windows 的读者可在路径字符串左引号的左边加一个“r”符号，将代码写为：driver = webdriver.Chrome(r’C:\server\chromedriver.exe’)</li><li>初始化完成以后，就可以使用 Selenium 打开网页了。要打开一个网页只需要一行代码：<br><code>driver.get('http://exercise.kingname.info/exercise_advanced_ajax.html')</code></li><li>代码运行以后会自动打开一个 Chrome 窗口，并在窗口里面自动进入这个网址对应的页面。一旦被异步加载的内容已经出现在了这个自动打开的 Chrome 窗口中，那么此时使用下列代码：<br><code>html = driver.page_source</code></li><li>就能得到在 Chrome 开发者工具中出现的 HTML 代码<br><strong>综合：</strong></li></ul><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">driver = webdriver.Chrome(<span class="string">r'C:\Program Files (x86)\Google\Chrome\Application\chromedriver'</span>)</span><br><span class="line">driver.get(<span class="string">'http://exercise.kingname.info/exercise_advanced_ajax.html'</span>)</span><br><span class="line">time.sleep(<span class="number">5</span>)</span><br><span class="line">html = driver.page_source</span><br><span class="line">print(html)</span><br><span class="line">input(<span class="string">'按任意键结束：'</span>)</span><br></pre></td></tr></tbody></table></figure><p><strong>运行程序会出现以下界面</strong><br><img src="https://raw.githubusercontent.com/yq010105/Blog_images/master/img/selenium.png" alt="selenium" title="selenium"></p><h4 id="7-3-3-2-等待信息出现"><a href="#7-3-3-2-等待信息出现" class="headerlink" title="7.3.3.2 等待信息出现"></a>7.3.3.2 等待信息出现</h4><ul><li>设置了一个 5s 的延迟，这是由于 Selenium 并不会等待网页加载完成再执行后面的代码。它只是向 ChromeDriver 发送了一个命令，让 ChromeDriver 打开某个网页</li><li>至于网页要开多久，Selenium 并不关心。由于被异步加载的内容会延迟出现，因此需要等待它出现以后再开始抓取</li></ul><h4 id="7-3-3-3-在网页中获取元素"><a href="#7-3-3-3-在网页中获取元素" class="headerlink" title="7.3.3.3 在网页中获取元素"></a>7.3.3.3 在网页中获取元素</h4><p><em>在网页中寻找需要的内容，可以使用类似于 Beautiful Soup4 的语法：</em></p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">element = driver.find_element_by_id(<span class="string">"passwd-id"</span>) <span class="comment">#如果有多个符合条件的，返回第1个</span></span><br><span class="line">element = driver.find_element_by_name(<span class="string">"passwd"</span>) <span class="comment">#如果有多个符合条件的，返回第1个</span></span><br><span class="line">element_list = driver.find_elements_by_id(<span class="string">"passwd-id"</span>) <span class="comment">#以列表形式返回所有的符合条件的element</span></span><br><span class="line">element_list = driver.find_elements_by_name(<span class="string">"passwd"</span>) <span class="comment">#以列表形式返回所有的符合条件的element</span></span><br></pre></td></tr></tbody></table></figure><p><strong>也可以使用 XPath</strong></p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">element = driver.find_element_by_xpath(<span class="string">"//input[@id='passwd-id']"</span>)</span><br><span class="line"><span class="comment">#如果有多个符合条件的，返回第1个</span></span><br><span class="line">element = driver.find_elements_by_xpath(<span class="string">"//div[@id='passwd-id']"</span>)</span><br><span class="line"><span class="comment">#以列表形式返回所有的符合条件的element</span></span><br></pre></td></tr></tbody></table></figure><p><a href="http://exercise.kingname.info/exercise_advanced_ajax.html" target="_blank" rel="noopener">练习网站</a></p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support.ui <span class="keyword">import</span> WebDriverWait</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support <span class="keyword">import</span> expected_conditions <span class="keyword">as</span> EC</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">driver = webdriver.Chrome(<span class="string">r'C:\Program Files (x86)\Google\Chrome\Application\chromedriver'</span>)</span><br><span class="line">driver.get(<span class="string">'http://exercise.kingname.info/exercise_advanced_ajax.html'</span>)</span><br><span class="line"></span><br><span class="line">time.sleep(<span class="number">5</span>)</span><br><span class="line"><span class="keyword">try</span> :</span><br><span class="line">    WebDriverWait(driver,<span class="number">30</span>).until(EC.text_to_be_present_in_element(By.CLASS_NAME,<span class="string">"content"</span>),<span class="string">'通关'</span>)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> _:</span><br><span class="line">    print(<span class="string">'网页加载太慢，爬'</span>)</span><br><span class="line"><span class="comment"># 但是也可能会爬，不知到原因</span></span><br><span class="line">element = driver.find_element_by_xpath(<span class="string">'//div[@class="content"]'</span>)</span><br><span class="line">print(<span class="string">f'异步加载的内容是：<span class="subst">{element.text}</span>'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 异步加载的内容是：通关成功，通关口令：这是最终数据。</span></span><br><span class="line"></span><br><span class="line">driver.quit()</span><br></pre></td></tr></tbody></table></figure><h2 id="7-4-实例：乐视爬取视频评论"><a href="#7-4-实例：乐视爬取视频评论" class="headerlink" title="7.4 实例：乐视爬取视频评论"></a>7.4 实例：<a href="http://www.le.com" target="_blank" rel="noopener">乐视</a>爬取视频评论</h2><ul><li><p><em>1&gt;分析网站的异步加载请求</em></p></li><li><p><em>2&gt;使用 requests 发送请求</em></p><hr><p></p></li><li><p>通过使用 Chrome 的开发者工具分析页面的异步加载请求，可以发现评论所在的请求</p></li><li><p>可以使用 Python 来模拟这个请求，从而获取视频的评论信息</p></li><li><p>在请求的 URL 里面有两个参数：vid 和 pid,这两个参数在网页的源代码里面都可以找到</p><hr></li><li><p>爬虫首先访问视频页面，通过正则表达式获取 vid 和 pid，并将结果保存到“necessary_info”这个类属性对应的字典中</p></li></ul><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 核心代码</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_necessary_id</span><span class="params">(self)</span>:</span></span><br><span class="line">  source = self.get_source(self.url, self.HEADERS)</span><br><span class="line">  vid = re.search(<span class="string">'vid: (\d+)'</span>, source).group(<span class="number">1</span>)</span><br><span class="line">  pid = re.search(<span class="string">'pid: (\d+)'</span>, source).group(<span class="number">1</span>)</span><br><span class="line">  self.necessary_info[<span class="string">'xid'</span>] = vid</span><br><span class="line">  self.necessary_info[<span class="string">'pid'</span>] = pid</span><br></pre></td></tr></tbody></table></figure><ul><li>访问评论的接口，用 Python 发起请求，获得评论数据</li></ul><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_comment</span><span class="params">(self)</span>:</span></span><br><span class="line">    url = self.COMMENT_URL.format(xid=self.necessary_info[<span class="string">'xid'</span>],</span><br><span class="line">                             pid=self.necessary_info[<span class="string">'pid'</span>])</span><br><span class="line">    source = self.get_source(url, self.HEADERS)</span><br><span class="line">    source_json = source[source.find(<span class="string">'{"'</span>): <span class="number">-1</span>]</span><br><span class="line">    comment_dict = json.loads(source_json)</span><br><span class="line">    comments = comment_dict[<span class="string">'data'</span>]</span><br><span class="line">    <span class="keyword">for</span> comment <span class="keyword">in</span> comments:</span><br><span class="line">        print(<span class="string">f'发帖人： <span class="subst">{comment[<span class="string">"user"</span>][<span class="string">"username"</span>]}</span>, 评论内容：<span class="subst">{comment[<span class="string">"content"</span>]}</span>'</span>)</span><br></pre></td></tr></tbody></table></figure><ul><li>代码中，提前定义的 self.COMMENT_URL 和 self.HEADERS</li></ul><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 综合</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LetvSpider</span><span class="params">(object)</span>:</span></span><br><span class="line"></span><br><span class="line">    COMMENT_URL = <span class="string">'http://api-my.le.com/vcm/api/list?jsonp=jQuery19100358 \</span></span><br><span class="line"><span class="string">    8935956887496_1581419682085&amp;type=video&amp;rows=20&amp;page=1&amp;sort=&amp;cid=2&amp;sourc\</span></span><br><span class="line"><span class="string">    e=1&amp;xid=27576461&amp;pid=10022394&amp;ctype=cmt%2Cimg%2Cvote&amp;listType=1&amp;_=1581419682087'</span></span><br><span class="line"></span><br><span class="line">    HEADERS = {<span class="string">'Accept'</span>: <span class="string">'*/*'</span>,</span><br><span class="line">            <span class="string">'Accept-Encoding'</span>: <span class="string">'gzip, deflate'</span>,</span><br><span class="line">            <span class="string">'Accept-Language'</span>: <span class="string">'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7'</span>,</span><br><span class="line">            <span class="string">'Cookie'</span>: <span class="string">'tj_lc=d551d3996ae75055e97c1f22ac9aa002; tj_uuid=-_15814196222976075472; tj_env=1; ssoCookieSynced=1; language=zh-cn; sso_curr_country=CN; vjuids=-75eba524.17033f49d1f.0.d645e0a5d3aa1; vjlast=1581419634.1581419634.30; tj_v2c=-27576461_2'</span>,</span><br><span class="line">            <span class="string">'Host'</span>: <span class="string">'api-my.le.com'</span>,</span><br><span class="line">            <span class="string">'Proxy-Connection'</span>: <span class="string">'keep-alive'</span>,</span><br><span class="line">            <span class="string">'Referer'</span>:<span class="string">'http://www.le.com/ptv/vplay/27576461.html'</span>,</span><br><span class="line">            <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.87 Safari/537.36'</span></span><br><span class="line">             }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,url)</span>:</span></span><br><span class="line">        self.necessary_info = {}</span><br><span class="line">        self.url = url</span><br><span class="line">        self.get_necessary_id()</span><br><span class="line">        self.get_comment()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 得到request返回的html--str</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_source</span><span class="params">(self,url,headers)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> requests.get(url,headers).content.decode()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_necessary_id</span><span class="params">(self)</span>:</span></span><br><span class="line">        source = self.get_source(self.url,self.HEADERS) <span class="comment"># 得到html</span></span><br><span class="line">        vid = re.search(<span class="string">'vid: (\d+)'</span>,source).group(<span class="number">1</span>)   <span class="comment">#re到vid、pid</span></span><br><span class="line">        pid = re.search(<span class="string">'pid: (\d+)'</span>,source).group(<span class="number">1</span>)</span><br><span class="line">        self.necessary_info[<span class="string">'xid'</span>] = vid        <span class="comment">#传入vid、pid到字典</span></span><br><span class="line">        self.necessary_info[<span class="string">'pid'</span>] = pid</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_comment</span><span class="params">(self)</span>:</span></span><br><span class="line">        url = self.COMMENT_URL.format(xid=self.necessary_info[<span class="string">'xid'</span>],</span><br><span class="line">        pid=self.necessary_info[<span class="string">'pid'</span>])     <span class="comment"># format格式化  url 评论list的request_url</span></span><br><span class="line">        source = self.get_source(url,self.HEADERS)  <span class="comment"># 调用get_source()</span></span><br><span class="line">        source_json = source[source.find(<span class="string">'{"'</span>): <span class="number">-1</span>] <span class="comment"># str切片</span></span><br><span class="line">        comment_dict = json.loads(source_json)  <span class="comment">#一个字典</span></span><br><span class="line">        comments = comment_dict[<span class="string">'data'</span>]</span><br><span class="line">        <span class="keyword">for</span> comment <span class="keyword">in</span> comments:</span><br><span class="line">            print(<span class="string">f'发帖人：<span class="subst">{comment[<span class="string">"user"</span>][<span class="string">"username"</span>]}</span>,评论内容:<span class="subst">{comment[<span class="string">"content"</span>]}</span>'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    spider = LetvSpider(<span class="string">'http://www.le.com/ptv/vplay/27576461.html'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">发帖人：福建乐迷,评论内容:好喜欢东华帝君</span></span><br><span class="line"><span class="string">发帖人：河北乐迷,评论内容:十</span></span><br><span class="line"><span class="string">发帖人：河北乐迷,评论内容:瑶光上神好漂亮。</span></span><br><span class="line"><span class="string">发帖人：河北乐迷,评论内容:太好看了。</span></span><br><span class="line"><span class="string">发帖人：河北乐迷,评论内容:真水无香。</span></span><br><span class="line"><span class="string">发帖人：河北乐迷,评论内容:喜欢白浅</span></span><br><span class="line"><span class="string">发帖人：天莫邪,评论内容:杨幂真不好看</span></span><br><span class="line"><span class="string">发帖人：呆萌小甜心,评论内容:爱幂幂</span></span><br><span class="line"><span class="string">发帖人：G_,评论内容:有谁是看了枕上书又来看十里桃花我浅浅的</span></span><br><span class="line"><span class="string">发帖人：黑名单,评论内容:我来啦</span></span><br><span class="line"><span class="string">发帖人：凉辰梦瑾空人心_702_210,评论内容:为啥只能隔乐视看了 好伤心�😭</span></span><br><span class="line"><span class="string">发帖人：上海乐迷,评论内容:产科医生</span></span><br><span class="line"><span class="string">发帖人：红_,评论内容:这个很好看</span></span><br><span class="line"><span class="string">发帖人：子璇,评论内容:墨渊霸气，白浅跟她在一起才不会受伤害</span></span><br><span class="line"><span class="string">发帖人：聂芳英,评论内容:为什么其他的APP上看不到</span></span><br><span class="line"><span class="string">发帖人：月色不错,评论内容:这个是玉帝还是王母</span></span><br><span class="line"><span class="string">发帖人：Myth橙子,评论内容:每个平台看一遍我是有多闲</span></span><br><span class="line"><span class="string">发帖人：上海乐迷,评论内容:怎么这么难找〈产科医生）的电视剧</span></span><br><span class="line"><span class="string">发帖人：上海乐迷,评论内容:我想看产科医生的电视剧</span></span><br><span class="line"><span class="string">发帖人：上海乐迷,评论内容:产科医生</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">"网站名：{name}, 地址 {url}"</span>.format(name=<span class="string">"菜鸟教程"</span>, url=<span class="string">"www.runoob.com"</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过字典设置参数</span></span><br><span class="line">site = {<span class="string">"name"</span>: <span class="string">"菜鸟教程"</span>, <span class="string">"url"</span>: <span class="string">"www.runoob.com"</span>}</span><br><span class="line">print(<span class="string">"网站名：{name}, 地址 {url}"</span>.format(**site))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过列表索引设置参数</span></span><br><span class="line">my_list = [<span class="string">'菜鸟教程'</span>, <span class="string">'www.runoob.com'</span>]</span><br><span class="line">print(<span class="string">"网站名：{0[0]}, 地址 {0[1]}"</span>.format(my_list))  <span class="comment"># "0" 是必须的</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 网站名：菜鸟教程, 地址 www.runoob.com</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AssignValue</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, value)</span>:</span></span><br><span class="line">        self.value = value</span><br><span class="line">my_value = AssignValue(<span class="number">6</span>)</span><br><span class="line">print(<span class="string">'value 为: {0.value}'</span>.format(my_value))  <span class="comment"># "0" 是可选的</span></span><br><span class="line"><span class="comment"># value 为: 6</span></span><br></pre></td></tr></tbody></table></figure><h1 id="8-模拟登录与验证码"><a href="#8-模拟登录与验证码" class="headerlink" title="8. 模拟登录与验证码"></a>8. 模拟登录与验证码</h1><ul><li>对于一个需要登录才能访问的网站，它的页面在登录前和登录后可能是不一样的</li><li>如果直接使用 requests 去获取源代码，只能得到登录以前的页面源代码</li></ul><h2 id="8-1-模拟登录"><a href="#8-1-模拟登录" class="headerlink" title="8.1 模拟登录"></a>8.1 模拟登录</h2><ul><li>1.使用 Selenium 操作浏览器登录和使用 Cookies 登录虽然简单粗暴，但是有效</li><li>2.使用模拟提交表单登录虽然较为麻烦，但可以实现自动化</li></ul><h3 id="8-1-1-使用-Selenium-模拟登录"><a href="#8-1-1-使用-Selenium-模拟登录" class="headerlink" title="8.1.1 使用 Selenium 模拟登录"></a>8.1.1 使用 Selenium 模拟登录</h3><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">     使用Selenium来进行模拟登录，整个过程非常简单。流程如下。</span><br><span class="line">（1）初始化ChromeDriver。</span><br><span class="line">（2）打开知乎登录页面。</span><br><span class="line">（3）找到用户名的输入框，输入用户名。</span><br><span class="line">（4）找到密码输入框，输入用户名。</span><br><span class="line">（5）手动单击验证码。</span><br><span class="line">（6）按下Enter键。</span><br></pre></td></tr></tbody></table></figure><ul><li>程序首先打开知乎的登录页面，然后使用“find<em>element_by</em> name”分别找到输入账号和密码的两个输入框</li><li>这两个输入框的 name 属性值分别为“account”(我的是 username)和“password”</li><li>在 Selenium 中可以使用 send_keys()方法往输入框中输入字符串</li><li>在输入了密码以后，验证码框就会弹出来。知乎使用的验证码为点击倒立的文字，这种验证码不容易自动化处理，因此在这个地方让爬虫先暂停，手动点击倒立文字</li><li>爬虫中的 input()语句会阻塞程序，直到在控制台按下 Enter 键，爬虫才会继续运行</li></ul><h3 id="8-1-2-使用-Cookies-登录"><a href="#8-1-2-使用-Cookies-登录" class="headerlink" title="8.1.2 使用 Cookies 登录"></a>8.1.2 使用 Cookies 登录</h3><ul><li><em>Cookie 是用户使用浏览器访问网站的时候网站存放在浏览器中的一小段数据</em></li><li>Cookie 的复数形式 Cookies 用来表示各种各样的 Cookie。它们有些用来记录用户的状态信息；有些用来记录用户的操作行为；还有一些，具有现代网络最重要的功能：记录授权信息——用户是否登录以及用户登录哪个账号</li><li>为了不让用户每次访问网站都进行登录操作，浏览器会在用户第一次登录成功以后放一段加密的信息在 Cookies 中。下次用户访问，网站先检查 Cookies 有没有这个加密信息，如果有并且合法，那么就跳过登录操作，直接进入登录后的页面</li><li>通过已经登录的 Cookies，可以让爬虫绕过登录过程，直接进入登录以后的页面</li><li>在已经登录知乎的情况下，打开 Chrome 的开发者工具，定位到“Network”选项卡，然后刷新网页，在加载的内容中随便选择一项，然后看右侧的数据，从 Request Headers 中可以找到 Cookie</li></ul><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cookie: _zap=56180d87-245a-4b79-83e2-711f4629644e; d_c0="AMAY69ZKzRCPTh5KJj9edoIQ4_BiQS3iqwM=|1581434842"; _xsrf=jzLzeCfZignAw6qDdNqO85UOdCrRcB3C; Hm_lvt_98beee57fd2ef70ccdd5ca52b9740c49=1581485103,1581492629,1581492650,1581494278; capsion_ticket="2|1:0|10:1581494284|14:capsion_ticket|44:ZjQyY2FjMmZkZTJmNDJkNGI5NmYxMDNkMzc3MTVlNGI=|e2f4eb7e3652b2f1f3e439d7ff4275e4e15bdfbfbed8ce423dceded2da4235cf"; z_c0="2|1:0|10:1581494646|4:z_c0|92:Mi4xY2R0cUJRQUFBQUFBd0JqcjFrck5FQ1lBQUFCZ0FsVk5kdjh3WHdBMEczY0dBVm5MNUFmV1V4cmtja0p1Rm1kMGtn|560b73b3b5f052f6151d4a02e62f1f645f01ad7826d8c183d7152fb2fcf8456d"; Hm_lpvt_98beee57fd2ef70ccdd5ca52b9740c49=1581494647; tst=r; KLBRSID=81978cf28cf03c58e07f705c156aa833|1581494650|1581494278</span><br></pre></td></tr></tbody></table></figure><ul><li><strong>请注意这里一定是“Request Headers”，不要选成了“Response Headers”</strong></li></ul><ul><li>只要把这个 Request Headers 的内容通过 requests 提交，就能直接进入登录以后的知乎页面了</li><li>可以看到，使用 Cookie 来登录网页，不仅可以绕过登录步骤，还可以绕过网站的验证码</li><li>Session，是指一段会话。网站会把每一个会话的 ID（Session ID）保存在浏览器的 Cookies 中用来标识用户的身份</li><li>requests 的 Session 模块可以自动保存网站返回的一些信息</li><li>其实在前面章节中使用的 requests.get()，在底层还是会先创建一个 Session，然后用 Session 去访问</li><li>对于 HTTPS 的网站，在 requests 发送请求的时候需要带上 verify=False 这个参数，否则爬虫会报错</li><li>带上这个参数以后，爬虫依然会报一个警告，这是因为没有 HTTPS 的证书</li><li>不过这个警告不会影响爬虫的运行结果。对于有强迫症的读者，可以参考相关内容为 requests 设置证书，从而解除这个警告</li></ul><h3 id="8-1-3-模拟表单登录"><a href="#8-1-3-模拟表单登录" class="headerlink" title="8.1.3 模拟表单登录"></a>8.1.3 模拟表单登录</h3><p><strong><a href="http://exercise.kingname.info/exercise_login?next=%2Fexercise_login_success" target="_blank" rel="noopener">练习页面</a></strong></p><ul><li>这个登录页面多了一个“自动登录”复选框输入用户名 kingname，密码 genius，勾选“自动登录”复选框并单击“登录”按钮，可以看到登录成功后的页面</li><li>打开 Chrome 的开发者工具并监控登录过程</li><li>然而，仔细观察会发现登录请求的那个网址只会在“Network”选项卡中存在 1s，然后就消失了</li><li>Network”选项卡下面只剩下登录成功后的页面所发起的各种网络请求</li><li>这是因为表单登录成功以后会进行页面跳转，相当于开了一个新的网页，于是新的请求就会直接把旧的请求覆盖。为了避免这种情况，需要在 Chrome 的开发者工具的“Network”选项卡中勾选“Preserve log”复选框，再一次登录就可以看到登录过程</li><li>此时可以看到 Status Code 是 302，说明这里有一个网页跳转，也就证明了之前为什么登录以后看不到登录的请求</li><li><strong>使用 requests 的 Session 模块来模拟这个登录</strong></li></ul><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">login_url = <span class="string">'http://exercise.kingname.info/exercise_login'</span></span><br><span class="line">login_sucess_url = <span class="string">'http://exercise.kingname.info/exercise_login_success'</span></span><br><span class="line"></span><br><span class="line">data = {</span><br><span class="line">    <span class="string">'username'</span>:<span class="string">'kingname'</span>,</span><br><span class="line">    <span class="string">'password'</span>:<span class="string">'genius'</span>,</span><br><span class="line">    <span class="string">'remember'</span>:<span class="string">'Yes'</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">session = requests.Session()</span><br><span class="line">before_login = session.get(login_sucess_url).text</span><br><span class="line">print(before_login)</span><br><span class="line">print(<span class="string">'============开始登陆=============='</span>)</span><br><span class="line">session.post(login_url,data=data).text</span><br><span class="line">after_login = session.get(login_sucess_url).text</span><br><span class="line">print(after_login)</span><br></pre></td></tr></tbody></table></figure><p><strong>结果</strong></p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>exercise login<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">      label {</span><br><span class="line">        display: block;</span><br><span class="line">        width: 100px;</span><br><span class="line">        margin-left: auto;</span><br><span class="line">        margin-right: auto;</span><br><span class="line">      }</span><br><span class="line">      body {</span><br><span class="line">        text-align: center;</span><br><span class="line">      }</span><br><span class="line"><span class="css">      <span class="selector-class">.content</span> {</span></span><br><span class="line">        margin-right: auto;</span><br><span class="line">        margin-left: auto;</span><br><span class="line">        height: 200px;</span><br><span class="line">      }</span><br><span class="line"><span class="css">      <span class="selector-class">.login</span> {</span></span><br><span class="line">        display: block;</span><br><span class="line">        margin-right: auto;</span><br><span class="line">        margin-left: auto;</span><br><span class="line">        margin-top: 5px;</span><br><span class="line">      }</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/exercise_login"</span> <span class="attr">method</span>=<span class="string">"POST"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span>&gt;</span>用户名:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">              <span class="attr">name</span>=<span class="string">"username"</span></span></span><br><span class="line"><span class="tag">              <span class="attr">type</span>=<span class="string">"text"</span></span></span><br><span class="line"><span class="tag">              <span class="attr">class</span>=<span class="string">"form-control"</span></span></span><br><span class="line"><span class="tag">              <span class="attr">placeholder</span>=<span class="string">"请输入:kingname"</span></span></span><br><span class="line"><span class="tag">              <span class="attr">value</span>=<span class="string">""</span></span></span><br><span class="line"><span class="tag">            /&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span>&gt;</span>密 码 :<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">              <span class="attr">name</span>=<span class="string">"password"</span></span></span><br><span class="line"><span class="tag">              <span class="attr">type</span>=<span class="string">"password"</span></span></span><br><span class="line"><span class="tag">              <span class="attr">class</span>=<span class="string">"form-control"</span></span></span><br><span class="line"><span class="tag">              <span class="attr">placeholder</span>=<span class="string">"请输入:genius"</span></span></span><br><span class="line"><span class="tag">              <span class="attr">value</span>=<span class="string">""</span></span></span><br><span class="line"><span class="tag">            /&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"checkbox pull-right"</span></span></span><br><span class="line"><span class="tag">            &gt;</span>自动登录</span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">              <span class="attr">type</span>=<span class="string">"checkbox"</span></span></span><br><span class="line"><span class="tag">              <span class="attr">name</span>=<span class="string">"rememberme"</span></span></span><br><span class="line"><span class="tag">              <span class="attr">value</span>=<span class="string">"Yes"</span></span></span><br><span class="line"><span class="tag">              <span class="attr">data-toggle</span>=<span class="string">"checkbox"</span></span></span><br><span class="line"><span class="tag">            /&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"login"</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"static/js/jquery-3.2.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line">============开始登陆==============</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Login Success<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">      如果你看到这一行内容，说明你已经登录成功。<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/exercise_logout"</span></span></span><br><span class="line"><span class="tag">        &gt;</span>退出登录<span class="tag">&lt;/<span class="name">a</span></span></span><br><span class="line"><span class="tag">      &gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="8-2-验证码"><a href="#8-2-验证码" class="headerlink" title="8.2 验证码"></a>8.2 验证码</h2><h3 id="8-2-1-肉眼打码"><a href="#8-2-1-肉眼打码" class="headerlink" title="8.2.1 肉眼打码"></a>8.2.1 肉眼打码</h3><ul><li><p>对于一次登录就可以长时间使用的情况，只需要识别一次验证码即可</p></li><li><p>这种情况下，与其花时间开发一个自动识别验证码的程序，不如直接肉眼识别</p></li><li><p><strong>肉眼识别验证码有两种情况，借助浏览器与不借助浏览器</strong></p></li><li><p>1、借助浏览器<br>在模拟登录中讲到过 Cookies，通过 Cookies 能实现绕过登录，从而直接访问需要登录的网站。因此，对于需要输入验证码才能进行登录的网站，可以手动在浏览器登录网站，并通过 Chrome 获取 Cookies，然后使用 Cookies 来访问网站<br>这样就可以实现人工输入一次验证码，然后很长时间不再登录。</p></li><li><p>2、不借助浏览器<br>对于仅仅需要识别图片的验证码，可以使用这种方式——先把验证码下载到本地，然后肉眼去识别并手动输入给爬虫</p></li></ul><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">手动输入验证码的一般流程如下:</span><br><span class="line">（1）爬虫访问登录页面</span><br><span class="line">（2）分析网页源代码，获取验证码地址</span><br><span class="line">（3）下载验证码到本地</span><br><span class="line">（4）打开验证码，人眼读取内容</span><br><span class="line">（5）构造POST的数据，填入验证码</span><br><span class="line">（6）POST提交</span><br></pre></td></tr></tbody></table></figure><ul><li><em>需要注意的是，其中的（2）、（3）、（4）、（5）、（6）步是一气呵成的，是在爬虫运行的时候做的。绝对不能先把爬虫程序关闭，肉眼识别验证码以后再重新运行</em></li></ul><p><strong><a href="http://exercise.kingname.info/exercise_captcha.html" target="_blank" rel="noopener">练习页面</a></strong></p><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> lxml.html</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://exercise.kingname.info/exercise_captcha.html'</span></span><br><span class="line">url_check = <span class="string">'http://exercise.kingname.info/exercise_captcha_check'</span></span><br><span class="line"></span><br><span class="line">session = requests.session()</span><br><span class="line">html = session.get(url).content</span><br><span class="line">selector = lxml.html.fromstring(html)</span><br><span class="line">captcha_url = selector.xpath(<span class="string">'//img/@src'</span>)[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">image = requests.get(<span class="string">'http://exercise.kingname.info/'</span>+captcha_url).content</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'captcha.png'</span>,<span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(image)</span><br><span class="line"></span><br><span class="line">captcha = input(<span class="string">'请查看图片，然后输入在这里：'</span>)</span><br><span class="line">after_check = session.post(url_check,data={<span class="string">'captcha'</span>:captcha})</span><br><span class="line"></span><br><span class="line">print(<span class="string">f'请输入验证码后，网站返回：<span class="subst">{after_check.content.decode()}</span>'</span>)</span><br></pre></td></tr></tbody></table></figure><p><strong>结果</strong></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">请查看图片，然后输入在这里：1595</span><br><span class="line">请输入验证码后，网站返回：看到这个页面，说明你的验证码输入正确</span><br></pre></td></tr></tbody></table></figure><p><img src="https://raw.githubusercontent.com/yq010105/Blog_images/master/img/captcha.png" alt="验证码"></p><h3 id="8-2-2-自动打码"><a href="#8-2-2-自动打码" class="headerlink" title="8.2.2 自动打码"></a>8.2.2 自动打码</h3><p>1、Python 图像识别</p><ul><li>对于验证码识别，Python 也有现成的库来使用</li><li>开源的 OCR 库 pytesseract 配合图像识别引擎 tesseract，可以用来将图片中的文字转换为文本</li><li>这种方式在爬虫中的应用并不多见。因为现在大部分的验证码都加上了干扰的纹理，已经很少能用单机版的图片识别方式来识别了。所以如果使用这种方式，只有两种情况：网站的验证码极其简单工整，使用大量的验证码来训练 tesseract<br><em>安装 tesseract</em><br>打开网页下载安装包：<a href="https://github.com/tesseract-ocr/tesseract/wiki/Downloads" target="_blank" rel="noopener">https://github.com/tesseract-ocr/tesseract/wiki/Downloads</a> ,在“3rd party Windows exe’s/ installer”下面可以找到.exe 安装包<br><em>安装 Python 库</em><br>pip install Pillow<br>pip install pytesseract<br>其中，Pillow 是 Python 中专门用来处理图像的第三方库，pytesseract 是专门用来操作 tesseract 的第三方库<br><em>tesseract 的使用</em></li></ul><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">          tesseract的使用非常简单。</span><br><span class="line">① 导入pytesseract和Pillow。</span><br><span class="line">② 打开图片。</span><br><span class="line">③ 识别。</span><br></pre></td></tr></tbody></table></figure><figure class="highlight py"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 通过以下代码来实现最简单的图片识别：</span></span><br><span class="line"><span class="keyword">import</span> pytesseract</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">image = Image.open(<span class="string">'验证码.png'</span>)</span><br><span class="line">code = pytesseract.image_to_string(image)</span><br><span class="line">print(code)</span><br></pre></td></tr></tbody></table></figure><p>2、打码网站<br>在线验证码识别的网站，简称打码网站。这些网站有一些是使用深度学习技术识别验证码，有一些是雇佣了很多人来人肉识别验证码<br>网站提供了接口来实现验证码识别服务。使用打码网站理论上可以识别任何使用输入方式来验证的验证码</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">这种打码网站的流程一般是这样的。</span><br><span class="line">① 将验证码上传到网站服务器。</span><br><span class="line">② 网站服务器将验证码分发给打码工人。</span><br><span class="line">③ 打码工人肉眼识别验证码并上传结果。</span><br><span class="line">④ 网站将结果返回。</span><br></pre></td></tr></tbody></table></figure><p><em>使用在线打码</em><br>在百度或者谷歌上面搜索“验证码在线识别”，就可以找到很多提供在线打码的网站。但是由于一般这种打码网站是需要交费才能使用的，所以要注意财产安全</p><h2 id="8-3-案例-自动登录果壳网"><a href="#8-3-案例-自动登录果壳网" class="headerlink" title="8.3 案例-自动登录果壳网"></a>8.3 案例-自动登录果壳网</h2><p><a href="https://www.guokr.com" target="_blank" rel="noopener">目标网站</a><br>使用模拟登录与验证码识别的技术实现自动登录果壳网。 果壳网的登录界面有验证码，请使用人工或者在线打码的方式识别验证码，并让爬虫登录。登录以后可以正确显示“个人资料设置”界面的源代码</p><ul><li>涉及的知识点：</li><li>（1）爬虫识别验证码。</li><li>（2）爬虫模拟登录。<blockquote><p>来自<a href="https://github.com/kingname/SourceCodeOfBook/tree/master/%E7%AC%AC8%E7%AB%A0/program" target="_blank" rel="noopener">第八章</a>，需要使用再来深度学习</p></blockquote></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 学习力 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Spider </tag>
            
            <tag> Note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python学习中遇到的问题</title>
      <link href="/2020/02/04/q-python/"/>
      <url>/2020/02/04/q-python/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><h1 id="1-新版-pycharm-问题"><a href="#1-新版-pycharm-问题" class="headerlink" title="1. 新版 pycharm 问题"></a>1. 新版 pycharm 问题</h1><p><strong>使用 Pycharm 遇到的问题</strong><br><em>VS code 天下第一</em></p><h2 id="问题-1：pycharm-双击打不开"><a href="#问题-1：pycharm-双击打不开" class="headerlink" title="问题 1：pycharm 双击打不开"></a>问题 1：pycharm 双击打不开</h2><p>已解决：可能时进程中已经有了 pycharm，在任务管理器里结束进程，然后重新打开</p><h2 id="问题-2：pycharm-打开后回有两个窗口，而且不能再窗口上操作"><a href="#问题-2：pycharm-打开后回有两个窗口，而且不能再窗口上操作" class="headerlink" title="问题 2：pycharm 打开后回有两个窗口，而且不能再窗口上操作"></a>问题 2：pycharm 打开后回有两个窗口，而且不能再窗口上操作</h2><p>重装可以解决，但不知道什么原因，猜测可能是打开文件太多，加载不了</p><h1 id="2-Python的一些BUG"><a href="#2-Python的一些BUG" class="headerlink" title="2. Python的一些BUG"></a>2. Python的一些BUG</h1><p>写程序用一分钟，找BUG需要一天</p><h2 id="2-1-class传参的一些问题"><a href="#2-1-class传参的一些问题" class="headerlink" title="2.1 class传参的一些问题"></a>2.1 class传参的一些问题</h2><p><em>takes 2 positional arguments but 30 were given</em><br>大概就是只需要两个位置参数，但是我给了30个，<code>黑人问号？？？</code></p><p>就是这个程序， 主要就是用多线程来爬取图片，然后到第二部，获得子页面的图片url资源地址时出错，无法解决</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> lxml.html</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Pool</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建 Thread 的子类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyThread</span><span class="params">(threading.Thread)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, func, args)</span>:</span></span><br><span class="line">        threading.Thread.__init__(self)</span><br><span class="line">        self.func = func</span><br><span class="line">        self.args = args</span><br><span class="line">        self.result = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.result = self.func(*self.args)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getresult</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.result</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建爬取图片的类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WallGet</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, headers, pages)</span>:</span></span><br><span class="line">        self.headers = headers</span><br><span class="line">        self.pages = pages</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 很快就完了</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_url</span><span class="params">(self)</span>:</span></span><br><span class="line">        pages = self.pages</span><br><span class="line">        url_pics = []</span><br><span class="line">        page = <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> page &lt;= int(pages):</span><br><span class="line">            url = <span class="string">'https://wallhaven.cc/search?categories=010&amp;purity=100&amp;resolutions=1280x800&amp;sorting=relevance&amp;order=desc&amp;page='</span> + \</span><br><span class="line">                str(page)</span><br><span class="line">            html = requests.get(url, headers=self.headers).content.decode()</span><br><span class="line">            selector = lxml.html.fromstring(html)</span><br><span class="line"></span><br><span class="line">            url_pic = selector.xpath(</span><br><span class="line">                <span class="string">'//*[@id="thumbs"]/section/ul/li/figure/a/@href'</span>)</span><br><span class="line">            url_pics.append(url_pic)</span><br><span class="line">            page += <span class="number">1</span></span><br><span class="line">        urls = []</span><br><span class="line">        <span class="keyword">for</span> url_pic <span class="keyword">in</span> url_pics:</span><br><span class="line">            <span class="keyword">for</span> url <span class="keyword">in</span> url_pic:</span><br><span class="line">                urls.append(url)</span><br><span class="line">        <span class="keyword">return</span> urls</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 单个图片url的获取</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_picurl</span><span class="params">(self, url)</span>:</span></span><br><span class="line">        html2 = requests.get(url, headers=self.headers).content.decode()</span><br><span class="line">        img_url = re.findall(<span class="string">r'"wallpaper" src="(.*?)"'</span>, html2, re.S)[<span class="number">0</span>]</span><br><span class="line">        print(img_url)</span><br><span class="line">        <span class="keyword">return</span> img_url</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">down_img</span><span class="params">(self, imgurls)</span>:</span></span><br><span class="line">        i = <span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> imgurl <span class="keyword">in</span> imgurls:</span><br><span class="line">            print(<span class="string">f'下载图片第<span class="subst">{i}</span>张'</span>)</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                pic = requests.get(imgurl, timeout=<span class="number">10</span>)</span><br><span class="line">            <span class="keyword">except</span> requests.exceptions.ConnectionError:</span><br><span class="line">                print(<span class="string">'图片无法下载'</span>)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">except</span> requests.exceptions.ReadTimeout:</span><br><span class="line">                print(<span class="string">'requests.exceptions.ReadTimeout'</span>)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">            main_path = <span class="string">r'E:\\wallhaven\\'</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(main_path):</span><br><span class="line">                os.makedirs(main_path)</span><br><span class="line"></span><br><span class="line">            dir = <span class="string">'E:\\wallhaven\\'</span> + str(i) + <span class="string">'.jpg'</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">with</span> open(dir, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">                f.write(pic.content)</span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行主程序</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    headers = {</span><br><span class="line">        <span class="string">"User-Agent"</span>: <span class="string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36"</span>}</span><br><span class="line">    pages = input(<span class="string">'输入要多少页： '</span>)</span><br><span class="line">    wallget = WallGet(headers, pages)</span><br><span class="line">    urls = wallget.get_url()</span><br><span class="line">    print(<span class="string">'每页图片链接获取完成'</span>)</span><br><span class="line">    print(urls)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 调试的时候这句话出现问题</span></span><br><span class="line">    <span class="comment"># th = MyThread(wallget.get_picurl,(urls[0]))</span></span><br><span class="line">    <span class="comment"># th.start()</span></span><br><span class="line">    <span class="comment"># 同样，直接用也会出现问题</span></span><br><span class="line">    th2 = threading.Thread(target= wallget.get_picurl,args=(urls[<span class="number">0</span>]))</span><br><span class="line">    th2.start()</span><br><span class="line">    <span class="comment"># print(th.getresult())</span></span><br><span class="line">    exit()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    l = []</span><br><span class="line">    <span class="keyword">for</span> url <span class="keyword">in</span> urls:</span><br><span class="line">        th = MyThread(wallget.get_picurl, (url))</span><br><span class="line">        th.start()</span><br><span class="line">        l.append(th)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> l:</span><br><span class="line">        i.join()</span><br><span class="line">    </span><br><span class="line">    print(<span class="string">'图片url资源地址获取完成'</span>)</span><br><span class="line">    print()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></tbody></table></figure><p><em>出错提示信息</em></p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Exception in thread Thread<span class="number">-1</span>:</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  <span class="built_in">File</span> <span class="string">"D:\py\lib\threading.py"</span>, <span class="built_in">line</span> <span class="number">917</span>, in _bootstrap_inner</span><br><span class="line">    self.<span class="built_in">run</span>()</span><br><span class="line">  <span class="built_in">File</span> <span class="string">"D:\py\lib\threading.py"</span>, <span class="built_in">line</span> <span class="number">865</span>, in <span class="built_in">run</span></span><br><span class="line">    self._target(*self._args, **self._kwargs)</span><br><span class="line">TypeError: get_picurl() takes <span class="number">2</span> positional arguments but <span class="number">30</span> were given</span><br></pre></td></tr></tbody></table></figure><h2 id="2-2-改用了Pool线程操作后"><a href="#2-2-改用了Pool线程操作后" class="headerlink" title="2.2 改用了Pool线程操作后"></a>2.2 改用了Pool线程操作后</h2><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 无力 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Questions </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo搭建博客的基本知识</title>
      <link href="/2020/02/04/learn-hexo/"/>
      <url>/2020/02/04/learn-hexo/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><blockquote><p><strong>建立 hexo_blog，参考 b 站 up:<a href="https://space.bilibili.com/384068749" target="_blank" rel="noopener">CodeSheep</a>的<a href="https://www.bilibili.com/video/av44544186" target="_blank" rel="noopener">视频</a></strong></p></blockquote><iframe src="//player.bilibili.com/player.html?aid=44544186&amp;bvid=BV1Yb411a7ty&amp;cid=158772893&amp;page=1" width="730px" height="500px" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><blockquote><blockquote><p><strong>所用主题 :<a href="https://github.com/litten/hexo-theme-yilia" target="_blank" rel="noopener">yilia</a>，主要按照<a href="http://yansheng836.coding.me/" target="_blank" rel="noopener">大佬博客</a>中的<a href="http://yansheng836.coding.me/tags/hexo/" target="_blank" rel="noopener">这一分类</a>进行修改</strong></p></blockquote></blockquote><!-- more --><h2 id="1-hexo-基操"><a href="#1-hexo-基操" class="headerlink" title="1. hexo 基操"></a>1. hexo 基操</h2><h3 id="1-1-master-分支"><a href="#1-1-master-分支" class="headerlink" title="1.1 master 分支"></a>1.1 master 分支</h3><table><thead><tr><th align="center">描述</th><th align="center">代码</th></tr></thead><tbody><tr><td align="center">新建页面 type:’tags’</td><td align="center"><code>hexo new page 'title'</code></td></tr><tr><td align="center">新建 md</td><td align="center"><code>hexo n "title"</code></td></tr><tr><td align="center">清理</td><td align="center"><code>hexo clean</code></td></tr><tr><td align="center">生成</td><td align="center"><code>hexo g</code></td></tr><tr><td align="center">部署到远端；推到 github</td><td align="center"><code>hexo d</code></td></tr><tr><td align="center">启动预览,blog</td><td align="center"><code>hexo s</code></td></tr></tbody></table><h3 id="1-2-blog-分支"><a href="#1-2-blog-分支" class="headerlink" title="1.2 blog 分支"></a>1.2 blog 分支</h3><ul><li><p>6、将当前目录下修改的所有代码从工作区添加到暂存区 . 代表当前目录</p><p><code>git add .</code></p></li><li><p>7、将缓存区内容添加到本地仓库</p><p><code>git commit -m "提交信息"</code></p></li><li><p>8、将本地版本库推送到远程服务器,将本地库如果设置了 blog 为默认分支，可以直接 git push</p><p><code>git push origin blog</code></p></li><li><p>9、先将远程仓库 master 中的信息同步到本地仓库 master 中</p><p><code>git pull origin master</code></p></li><li><p>10、查看工作区代码相对于暂存区的差别</p><p><code>git status</code></p></li></ul><blockquote><p>参考<a href="https://www.jianshu.com/p/2e1d551b8261" target="_blank" rel="noopener" title="简书">简书网站</a></p></blockquote><h2 id="2-source-md-blog-目录下"><a href="#2-source-md-blog-目录下" class="headerlink" title="2. source/md-(blog 目录下)"></a>2. source/md-(blog 目录下)</h2><ul><li>没有跳过的会转化为 HTML，在 blog 中体现</li></ul><h2 id="3-添加背景图片和左侧图片"><a href="#3-添加背景图片和左侧图片" class="headerlink" title="3. 添加背景图片和左侧图片"></a>3. 添加背景图片和左侧图片</h2><p>主要在<code>source/main.0cf68a.css</code> 文件中修改</p><blockquote><p>具体修改参考<a href="http://yansheng836.coding.me/" target="_blank" rel="noopener">大佬博客</a>中的<a href="http://yansheng836.coding.me/article/72a91df5.html" target="_blank" rel="noopener">这一篇</a></p></blockquote><h3 id="3-1-左侧背景"><a href="#3-1-左侧背景" class="headerlink" title="3.1 左侧背景"></a>3.1 左侧背景</h3><p><code>themes/yilia/layout/_partial/left-col.ejs</code>文件中注释掉原来代码，添加新的无属性代码</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"overlay"</span> <span class="attr">style</span>=<span class="string">"background: &lt;%= theme.style &amp;&amp; theme.style.header ? theme.style.header : defaultBg %&gt;"</span>&gt;</span> --&gt;</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- 左侧边栏（上半部分）不设置背景颜色 --&gt;</span></span></span><br><span class="line">&lt;div class="overlay" &gt;</span><br></pre></td></tr></tbody></table></figure><p><code>themes\yilia\source\main.0cf68a.css</code>中修改添加背景图片</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.left-col</span> {</span><br><span class="line">  <span class="comment">/* background:#fff; 注释掉原来的修改背景*/</span></span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(</span><br><span class="line">      rgba(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.5</span>),</span><br><span class="line">      <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.5</span>)</span><br><span class="line">    ),</span><br><span class="line">    <span class="built_in">url</span>(<span class="string">"http://bucket836.oss-cn-shenzhen.aliyuncs.com/wallpaper/381535373.jpeg"</span>)</span><br><span class="line">      no-repeat <span class="number">0%</span> <span class="number">20%</span> / cover;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">position</span>: fixed;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">transition</span>: all <span class="number">0.3s</span> ease-in;</span><br><span class="line">  <span class="attribute">-ms-transition</span>: all <span class="number">0.3s</span> ease-in;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">999</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>如果你的背景图片跟文字颜色不匹配(字看不清)，可以修改中文件</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.left-col</span> <span class="selector-id">#header</span> <span class="selector-tag">a</span> {</span><br><span class="line">   <span class="attribute">color</span>:<span class="number">#696969</span></span><br><span class="line">   color:<span class="number">#673ab7</span>^M</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.left-col</span> <span class="selector-id">#header</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> {</span><br><span class="line">   <span class="attribute">color</span>:<span class="number">#b0a0aa</span></span><br><span class="line">   color: <span class="number">#03A9F4</span>^M</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.left-col</span> <span class="selector-id">#header</span> <span class="selector-class">.header-subtitle</span> {</span><br><span class="line">    <span class="attribute">text-align</span>:center;</span><br><span class="line">   <span class="attribute">color</span>:<span class="number">#999</span>;</span><br><span class="line">   <span class="attribute">color</span>:<span class="number">#673ab7</span>;</span><br><span class="line">    <span class="attribute">font-size</span>:<span class="number">18px</span>;</span><br></pre></td></tr></tbody></table></figure><h3 id="3-2-文章背景"><a href="#3-2-文章背景" class="headerlink" title="3.2 文章背景"></a>3.2 文章背景</h3><p>先将文章背景调成透明色,搜索<code>.article {</code></p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.article</span> {</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">30px</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ddd</span>;</span><br><span class="line">  <span class="attribute">border-top</span>: <span class="number">1px</span> solid <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.4</span>); <span class="comment">/*调成透明色，才能看清背景图片*/</span></span><br><span class="line">  <span class="attribute">transition</span>: all <span class="number">0.2s</span> ease-in;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>然后再添加背景图片，搜索<code>body {</code></p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> {</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">  <span class="attribute">font-family</span>: Helvetica Neue, Helvetica, STHeiTi, Arial, sans-serif;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">1.5</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">  <span class="comment">/*background-color:rgb(85, 144, 161); */</span></span><br><span class="line">  <span class="attribute">min-height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(</span><br><span class="line">      rgba(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.5</span>),</span><br><span class="line">      <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.5</span>)</span><br><span class="line">    ), <span class="built_in">url</span>(./img/<span class="number">1</span>_.jpg) no-repeat <span class="number">0%</span> <span class="number">20%</span> / cover; <span class="comment">/*添加背景图片*/</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><strong>如果修改完代码，背景还没有变，可能你的 body 或者 article 定义了两次，前面有一个 body{},后面还有一个，只要删掉后面的就可以了</strong><br><em>需要自己好好的找一找</em></p><p><strong>如果你的 main.0cf68a.css,文件代码很乱，可以在<a href="https://github.com/yq010105/hexo_themes/blob/master/yilia/source/main.0cf68a.css" target="_blank" rel="noopener">我的 Github</a>中复制</strong> <em>别问我怎么知道的</em></p><h3 id="3-3-copy-代码块"><a href="#3-3-copy-代码块" class="headerlink" title="3.3 copy 代码块"></a>3.3 copy 代码块</h3><blockquote><p>按照<a href="http://yansheng836.coding.me/" target="_blank" rel="noopener">大佬博客</a>中的<a href="http://yansheng836.coding.me/article/e9d1b881.html" target="_blank" rel="noopener">这一篇</a></p></blockquote><h2 id="4-添加网站运行时间"><a href="#4-添加网站运行时间" class="headerlink" title="4. 添加网站运行时间"></a>4. 添加网站运行时间</h2><p><em>简单配置</em><br>修改<code>\themes\yilia\layout\_partial\footer.ejs</code>，在<code>&lt;/footer&gt;</code>上面添加如下内容</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--《添加网站运行时间 --&gt;</span><br><span class="line">&lt;!--<span class="xml"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span>--&gt;</span><br><span class="line">&lt;span id=<span class="string">"timeDate"</span>&gt;载入天数...&lt;<span class="regexp">/span&gt;&lt;span id="times"&gt;载入时分秒...&lt;/</span>span&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> now = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">createtime</span>(<span class="params"></span>) </span>{</span><br><span class="line">        <span class="keyword">var</span> grt = <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="string">"07/25/2019 12:00:00"</span>); <span class="comment">//此处修改你的建站时间或者网站上线时间</span></span><br><span class="line">        now.setTime(now.getTime() + <span class="number">250</span>);</span><br><span class="line">        days = (now - grt) / <span class="number">1000</span> / <span class="number">60</span> / <span class="number">60</span> / <span class="number">24</span>;</span><br><span class="line">        dnum = <span class="built_in">Math</span>.floor(days);</span><br><span class="line">        hours = (now - grt) / <span class="number">1000</span> / <span class="number">60</span> / <span class="number">60</span> - (<span class="number">24</span> * dnum);</span><br><span class="line">        hnum = <span class="built_in">Math</span>.floor(hours);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">String</span>(hnum).length == <span class="number">1</span>) {</span><br><span class="line">            hnum = <span class="string">"0"</span> + hnum;</span><br><span class="line">        }</span><br><span class="line">        minutes = (now - grt) / <span class="number">1000</span> / <span class="number">60</span> - (<span class="number">24</span> * <span class="number">60</span> * dnum) - (<span class="number">60</span> * hnum);</span><br><span class="line">        mnum = <span class="built_in">Math</span>.floor(minutes);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">String</span>(mnum).length == <span class="number">1</span>) {</span><br><span class="line">            mnum = <span class="string">"0"</span> + mnum;</span><br><span class="line">        }</span><br><span class="line">        seconds = (now - grt) / <span class="number">1000</span> - (<span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span> * dnum) - (<span class="number">60</span> * <span class="number">60</span> * hnum) - (<span class="number">60</span> * mnum);</span><br><span class="line">        snum = <span class="built_in">Math</span>.round(seconds);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">String</span>(snum).length == <span class="number">1</span>) {</span><br><span class="line">            snum = <span class="string">"0"</span> + snum;</span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">"timeDate"</span>).innerHTML = <span class="string">" | 本站已安全运行 "</span> + dnum + <span class="string">" 天 "</span>;</span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">"times"</span>).innerHTML = hnum + <span class="string">" 小时 "</span> + mnum + <span class="string">" 分 "</span> + snum + <span class="string">" 秒"</span>;</span><br><span class="line">    }</span><br><span class="line">    setInterval(<span class="string">"createtime()"</span>, <span class="number">250</span>);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;!-- 添加网站运行时间》 --&gt;</span></span><br></pre></td></tr></tbody></table></figure><blockquote><p>参考<a href="http://yansheng836.coding.me/article/50902a4.html" target="_blank" rel="noopener">这一篇</a></p></blockquote><h2 id="5-看板娘-かんばんむすめ"><a href="#5-看板娘-かんばんむすめ" class="headerlink" title="5. 看板娘(かんばんむすめ)"></a>5. 看板娘(かんばんむすめ)</h2><ul><li><strong>安装插件:</strong> <code>npm install --save hexo-helper-live2d</code> <strong><a href="https://github.com/EYHN/hexo-helper-live2d" target="_blank" rel="noopener">github 项目</a></strong></li><li><strong>安装模型:</strong> <code>npm install live2d-widget-model-模型名</code> <strong><a href="https://huaji8.top/post/live2d-plugin-2.0/" target="_blank" rel="noopener">模型名参考</a></strong></li><li><strong>在 blog/_config.yml 中添加</strong></li><li><em>我在 yilia 中配置没有效果，但在 blog 中有效果</em></li></ul><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Live2D</span></span><br><span class="line"><span class="comment">## https://github.com/EYHN/hexo-helper-live2d</span></span><br><span class="line"><span class="attr">live2d:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">scriptFrom:</span> <span class="string">local</span></span><br><span class="line">  <span class="attr">pluginRootPath:</span> <span class="string">live2dw/</span></span><br><span class="line">  <span class="attr">pluginJsPath:</span> <span class="string">lib/</span></span><br><span class="line">  <span class="attr">pluginModelPath:</span> <span class="string">assets/</span></span><br><span class="line">  <span class="attr">tagMode:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">debug:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">model:</span></span><br><span class="line">    <span class="attr">use:</span> <span class="string">live2d-widget-model-模型名</span> <span class="comment"># 模型：https://huaji8.top/post/live2d-plugin-2.0/</span></span><br><span class="line">  <span class="attr">display:</span></span><br><span class="line">    <span class="attr">position:</span> <span class="string">right</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">150</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">300</span></span><br><span class="line">  <span class="attr">mobile:</span></span><br><span class="line">    <span class="attr">show:</span> <span class="literal">true</span></span><br></pre></td></tr></tbody></table></figure><ul><li><strong>关闭 live2D:</strong> <code>enable:false</code></li><li><strong>卸载模型:</strong> <code>npm uninstall live2d-widget-model-模型名</code></li><li><strong>卸载插件:</strong> <code>npm uninstall hexo-helper-live2d</code></li><li><strong>删掉 yilia/_config.yml 中配置</strong></li><li><del><em>过于占内存，已卸载</em></del>、<em>33 真是太可爱了</em><blockquote><p><a href="https://github.com/52cik/bilibili-haruna" target="_blank" rel="noopener">2233 娘的 model</a><br>参考<a href="http://yansheng836.coding.me/article/e239dc63.html" target="_blank" rel="noopener">这一篇</a></p></blockquote></li></ul><h2 id="6-网易云音乐插件"><a href="#6-网易云音乐插件" class="headerlink" title="6. 网易云音乐插件"></a>6. 网易云音乐插件</h2><ul><li>在<code>/yilia/layout/_partial/post/left-col.ejs</code>中最后的<code>&lt;/nav&gt;</code>标签上方添加</li></ul><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;% <span class="keyword">if</span> (theme.music &amp;&amp; theme.music.enable){ %&gt;</span><br><span class="line">&lt;%# "网易云音乐插件" %&gt;</span><br><span class="line">&lt;%# "bottom:120px; left:auto;position:absolute;  width:85%" %&gt;</span><br><span class="line">&lt;% <span class="keyword">var</span> defaultHeight = theme.music.type == <span class="number">1</span> ? <span class="string">'32'</span> : <span class="string">'66'</span>; %&gt;</span><br><span class="line">&lt;% <span class="keyword">var</span> defaultIframeHeight = theme.music.type == <span class="number">1</span> ? <span class="string">'52'</span> : <span class="string">'86'</span>; %&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">&lt;iframe frameborder=<span class="string">"no"</span> border=<span class="string">"0"</span> marginwidth=<span class="string">"0"</span> marginheight=<span class="string">"0"</span> width=<span class="string">"240"</span> height=<span class="string">"&lt;%=defaultIframeHeight%&gt;"</span> src=<span class="string">"//music.163.com/outchain/player?type=2&amp;id=&lt;%=theme.music.id||1400594005%&gt;&amp;auto=&lt;%=theme.music.autoPlay?1:0%&gt;&amp;height=&lt;%=defaultHeight%&gt;"</span>&gt;&lt;<span class="regexp">/iframe&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br><span class="line">&lt;% <span class="keyword">if</span> (theme.music.text || theme.music.text == <span class="literal">null</span>){ %&gt;</span><br><span class="line">&lt;% <span class="keyword">var</span> musicText = ( theme.music.text == <span class="literal">null</span> || theme.music.text == <span class="literal">true</span> ) ? <span class="string">"这似乎是首纯音乐，请尽情的欣赏它吧！"</span> : theme.music.text; %&gt;</span><br><span class="line">&lt;p style=<span class="string">"font-size: 24px;font-family: 'Times New Roman', Times, serif;"</span>&gt;&lt;%-musicText%&gt;<span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span> } %&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span> } %&gt;</span></span></span><br></pre></td></tr></tbody></table></figure><ul><li>然后在 yilia 配置文件<code>_config.yml</code>中添加</li></ul><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 网易云音乐插件</span></span><br><span class="line"><span class="attr">music:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 播放器尺寸类型(1：长尺寸、2：短尺寸)</span></span><br><span class="line">  <span class="attr">type:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment">#id: 1334445174  # 网易云分享的音乐ID(更换音乐请更改此配置项)</span></span><br><span class="line">  <span class="attr">autoPlay:</span> <span class="literal">false</span> <span class="comment"># 是否开启自动播放</span></span><br><span class="line">  <span class="comment"># 提示文本(关闭请设置为false)</span></span><br><span class="line">  <span class="attr">text:</span> <span class="string">"底部文字"</span></span><br></pre></td></tr></tbody></table></figure><blockquote><p>参考大佬做的<a href="https://github.com/JoeyBling/hexo-theme-yilia-plus" target="_blank" rel="noopener">yilia-plus</a>中的配置</p></blockquote><h2 id="7-添加背景特效"><a href="#7-添加背景特效" class="headerlink" title="7. 添加背景特效"></a>7. 添加背景特效</h2><h3 id="7-1-点击爱心"><a href="#7-1-点击爱心" class="headerlink" title="7.1 点击爱心"></a>7.1 点击爱心</h3><ul><li>在<code>/yilia/source/js/</code>下添加<code>love.js</code>文件,书写代码</li></ul><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params">window, document, undefined</span>) </span>{</span><br><span class="line">  <span class="keyword">var</span> hearts = [];</span><br><span class="line">  <span class="built_in">window</span>.requestAnimationFrame = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="built_in">window</span>.requestAnimationFrame ||</span><br><span class="line">      <span class="built_in">window</span>.webkitRequestAnimationFrame ||</span><br><span class="line">      <span class="built_in">window</span>.mozRequestAnimationFrame ||</span><br><span class="line">      <span class="built_in">window</span>.oRequestAnimationFrame ||</span><br><span class="line">      <span class="built_in">window</span>.msRequestAnimationFrame ||</span><br><span class="line">      <span class="function"><span class="keyword">function</span>(<span class="params">callback</span>) </span>{</span><br><span class="line">        setTimeout(callback, <span class="number">1000</span> / <span class="number">60</span>);</span><br><span class="line">      }</span><br><span class="line">    );</span><br><span class="line">  })();</span><br><span class="line">  init();</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">init</span>(<span class="params"></span>) </span>{</span><br><span class="line">    css(</span><br><span class="line">      <span class="string">".heart{width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);}.heart:after,.heart:before{content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: absolute;}.heart:after{top: -5px;}.heart:before{left: -5px;}"</span></span><br><span class="line">    );</span><br><span class="line">    attachEvent();</span><br><span class="line">    gameloop();</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">gameloop</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; hearts.length; i++) {</span><br><span class="line">      <span class="keyword">if</span> (hearts[i].alpha &lt;= <span class="number">0</span>) {</span><br><span class="line">        <span class="built_in">document</span>.body.removeChild(hearts[i].el);</span><br><span class="line">        hearts.splice(i, <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">      }</span><br><span class="line">      hearts[i].y--;</span><br><span class="line">      hearts[i].scale += <span class="number">0.004</span>;</span><br><span class="line">      hearts[i].alpha -= <span class="number">0.013</span>;</span><br><span class="line">      hearts[i].el.style.cssText =</span><br><span class="line">        <span class="string">"left:"</span> +</span><br><span class="line">        hearts[i].x +</span><br><span class="line">        <span class="string">"px;top:"</span> +</span><br><span class="line">        hearts[i].y +</span><br><span class="line">        <span class="string">"px;opacity:"</span> +</span><br><span class="line">        hearts[i].alpha +</span><br><span class="line">        <span class="string">";transform:scale("</span> +</span><br><span class="line">        hearts[i].scale +</span><br><span class="line">        <span class="string">","</span> +</span><br><span class="line">        hearts[i].scale +</span><br><span class="line">        <span class="string">") rotate(45deg);background:"</span> +</span><br><span class="line">        hearts[i].color;</span><br><span class="line">    }</span><br><span class="line">    requestAnimationFrame(gameloop);</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">attachEvent</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">var</span> old = <span class="keyword">typeof</span> <span class="built_in">window</span>.onclick === <span class="string">"function"</span> &amp;&amp; <span class="built_in">window</span>.onclick;</span><br><span class="line">    <span class="built_in">window</span>.onclick = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>{</span><br><span class="line">      old &amp;&amp; old();</span><br><span class="line">      createHeart(event);</span><br><span class="line">    };</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">createHeart</span>(<span class="params">event</span>) </span>{</span><br><span class="line">    <span class="keyword">var</span> d = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</span><br><span class="line">    d.className = <span class="string">"heart"</span>;</span><br><span class="line">    hearts.push({</span><br><span class="line">      el: d,</span><br><span class="line">      x: event.clientX - <span class="number">5</span>,</span><br><span class="line">      y: event.clientY - <span class="number">5</span>,</span><br><span class="line">      scale: <span class="number">1</span>,</span><br><span class="line">      alpha: <span class="number">1</span>,</span><br><span class="line">      color: randomColor()</span><br><span class="line">    });</span><br><span class="line">    <span class="built_in">document</span>.body.appendChild(d);</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">css</span>(<span class="params">css</span>) </span>{</span><br><span class="line">    <span class="keyword">var</span> style = <span class="built_in">document</span>.createElement(<span class="string">"style"</span>);</span><br><span class="line">    style.type = <span class="string">"text/css"</span>;</span><br><span class="line">    <span class="keyword">try</span> {</span><br><span class="line">      style.appendChild(<span class="built_in">document</span>.createTextNode(css));</span><br><span class="line">    } <span class="keyword">catch</span> (ex) {</span><br><span class="line">      style.styleSheet.cssText = css;</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">document</span>.getElementsByTagName(<span class="string">"head"</span>)[<span class="number">0</span>].appendChild(style);</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">randomColor</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="string">"rgb("</span> +</span><br><span class="line">      ~~(<span class="built_in">Math</span>.random() * <span class="number">255</span>) +</span><br><span class="line">      <span class="string">","</span> +</span><br><span class="line">      ~~(<span class="built_in">Math</span>.random() * <span class="number">255</span>) +</span><br><span class="line">      <span class="string">","</span> +</span><br><span class="line">      ~~(<span class="built_in">Math</span>.random() * <span class="number">255</span>) +</span><br><span class="line">      <span class="string">")"</span></span><br><span class="line">    );</span><br><span class="line">  }</span><br><span class="line">})(<span class="built_in">window</span>, <span class="built_in">document</span>);</span><br></pre></td></tr></tbody></table></figure><ul><li>在<code>yilia/layout/layout.ejs</code>中添加代码(切记在标签前添加)</li></ul><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 《页面点击小红心 --&gt;</span><br><span class="line">&lt;% <span class="keyword">if</span> (theme.love){ %&gt;</span><br><span class="line">  &lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"/js/love.js"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;% } %&gt;</span></span><br><span class="line"><span class="regexp">&lt;!-- 页面点击小红心》 --&gt;</span></span><br></pre></td></tr></tbody></table></figure><ul><li>在<code>yilia/_config.yml</code>中添加配置</li></ul><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#点击小红心</span></span><br><span class="line"><span class="attr">love:</span> <span class="literal">true</span></span><br></pre></td></tr></tbody></table></figure><h3 id="7-2-背景线条"><a href="#7-2-背景线条" class="headerlink" title="7.2 背景线条"></a>7.2 背景线条</h3><ul><li>在<code>yilia/layout/layout.ejs</code>中添加代码</li></ul><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--动态线条背景--&gt;</span><br><span class="line">&lt;% <span class="keyword">if</span> (theme.canvas_nest.enable){ %&gt;</span><br><span class="line">  &lt;script type=<span class="string">"text/javascript"</span> color=<span class="string">"&lt;%=theme.canvas_nest.color %&gt;"</span> opacity=<span class="string">"&lt;%=theme.canvas_nest.opacity %&gt;"</span></span><br><span class="line">      zIndex=<span class="string">"&lt;%=theme.canvas_nest.zIndex %&gt;"</span> count=<span class="string">"&lt;%=theme.canvas_nest.count %&gt;"</span></span><br><span class="line">      src=<span class="string">"//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js"</span>&gt;</span><br><span class="line">  &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;% } %&gt;</span></span><br></pre></td></tr></tbody></table></figure><ul><li>在<code>yilia/_config.yml</code>中添加配置</li></ul><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 动态线条效果，会向鼠标集中</span></span><br><span class="line"><span class="attr">canvas_nest:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">color:</span> <span class="string">"255, 235, 59"</span> <span class="comment"># color of lines, default: '0,0,0'; RGB values: (R,G,B).(<span class="doctag">note:</span> use ',' to separate.)</span></span><br><span class="line">  <span class="attr">pointColor:</span> <span class="string">"156,39,176"</span> <span class="comment"># color of points, default: '0,0,0'; RGB values: (R,G,B).(<span class="doctag">note:</span> use ',' to separate.)</span></span><br><span class="line">  <span class="attr">opacity:</span> <span class="string">"0.8"</span> <span class="comment"># the opacity of line (0~1), default: 0.5.</span></span><br><span class="line">  <span class="attr">count:</span> <span class="string">"99"</span> <span class="comment"># the number of lines, default: 99.</span></span><br><span class="line">  <span class="attr">zIndex:</span> <span class="string">"-1"</span> <span class="comment"># z-index property of the background, default: -1.</span></span><br></pre></td></tr></tbody></table></figure><h3 id="7-3-背景点击文字"><a href="#7-3-背景点击文字" class="headerlink" title="7.3 背景点击文字"></a>7.3 背景点击文字</h3><ul><li>在<code>yilia/source/js/</code>下添加<code>click_show_text.js</code>文件，添加代码</li></ul><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a_idx = <span class="number">0</span>;</span><br><span class="line">jQuery(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params">$</span>) </span>{</span><br><span class="line">  $(<span class="string">"body"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>{</span><br><span class="line">    <span class="keyword">var</span> a = <span class="keyword">new</span> <span class="built_in">Array</span>(</span><br><span class="line">      <span class="string">"富强"</span>,</span><br><span class="line">      <span class="string">"民主"</span>,</span><br><span class="line">      <span class="string">"文明"</span>,</span><br><span class="line">      <span class="string">"和谐"</span>,</span><br><span class="line">      <span class="string">"自由"</span>,</span><br><span class="line">      <span class="string">"平等"</span>,</span><br><span class="line">      <span class="string">"公正"</span>,</span><br><span class="line">      <span class="string">"法治"</span>,</span><br><span class="line">      <span class="string">"爱国"</span>,</span><br><span class="line">      <span class="string">"敬业"</span>,</span><br><span class="line">      <span class="string">"诚信"</span>,</span><br><span class="line">      <span class="string">"友善"</span></span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">var</span> $i = $(<span class="string">"&lt;span/&gt;"</span>).text(a[a_idx]);</span><br><span class="line">    a_idx = (a_idx + <span class="number">1</span>) % a.length;</span><br><span class="line">    <span class="keyword">var</span> x = e.pageX,</span><br><span class="line">      y = e.pageY;</span><br><span class="line">    $i.css({</span><br><span class="line">      <span class="string">"z-index"</span>: <span class="number">5</span>,</span><br><span class="line">      top: y - <span class="number">20</span>,</span><br><span class="line">      left: x,</span><br><span class="line">      position: <span class="string">"absolute"</span>,</span><br><span class="line">      <span class="string">"font-weight"</span>: <span class="string">"bold"</span>,</span><br><span class="line">      color: <span class="string">"#FF0000"</span></span><br><span class="line">    });</span><br><span class="line">    $(<span class="string">"body"</span>).append($i);</span><br><span class="line">    $i.animate(</span><br><span class="line">      {</span><br><span class="line">        top: y - <span class="number">180</span>,</span><br><span class="line">        opacity: <span class="number">0</span></span><br><span class="line">      },</span><br><span class="line">      <span class="number">3000</span>,</span><br><span class="line">      <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">        $i.remove();</span><br><span class="line">      }</span><br><span class="line">    );</span><br><span class="line">  });</span><br><span class="line">  setTimeout(<span class="string">"delay()"</span>, <span class="number">2000</span>);</span><br><span class="line">});</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">delay</span>(<span class="params"></span>) </span>{</span><br><span class="line">  $(<span class="string">".buryit"</span>).removeAttr(<span class="string">"onclick"</span>);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li>在<code>yilia/layout/layout.ejs</code>中添加代码</li></ul><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--单击显示文字--&gt;</span><br><span class="line">&lt;% <span class="keyword">if</span> (theme.click_show_text){ %&gt;</span><br><span class="line">  &lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"/js/click_show_text.js"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;% } %&gt;</span></span><br></pre></td></tr></tbody></table></figure><ul><li>在<code>yilia/_config.yml</code>中添加配置</li></ul><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 鼠标点击显示文字</span></span><br><span class="line"><span class="attr">click_show_text:</span> <span class="literal">false</span></span><br></pre></td></tr></tbody></table></figure><blockquote><p><a href="http://yansheng836.coding.me/article/cf9c6a5e.html" target="_blank" rel="noopener">参考博客</a></p></blockquote><h2 id="8-修改手机端的页面背景颜色，文章的背景颜色以及头像上方颜色"><a href="#8-修改手机端的页面背景颜色，文章的背景颜色以及头像上方颜色" class="headerlink" title="8. 修改手机端的页面背景颜色，文章的背景颜色以及头像上方颜色"></a>8. 修改手机端的页面背景颜色，文章的背景颜色以及头像上方颜色</h2><p><em>在<code>main.0cf68a.css</code>中修改@media 下的模块</em></p><h3 id="8-1-页面背景颜色-图片"><a href="#8-1-页面背景颜色-图片" class="headerlink" title="8.1 页面背景颜色(图片)"></a>8.1 页面背景颜色(图片)</h3><p>添加下列代码，即为修改页面的背景托 i 按</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width:</span> <span class="number">800px</span>) {</span><br><span class="line">  <span class="selector-tag">body</span> {</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(</span><br><span class="line">        rgba(<span class="number">255</span>, <span class="number">127</span>, <span class="number">127</span>, <span class="number">0.212</span>),</span><br><span class="line">        <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.2</span>)</span><br><span class="line">      ), <span class="built_in">url</span>(./img/phone2.jpg) no-repeat <span class="number">0%</span> <span class="number">20%</span> / cover;</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="8-2-文章背景颜色"><a href="#8-2-文章背景颜色" class="headerlink" title="8.2 文章背景颜色"></a>8.2 文章背景颜色</h3><p>找到<code>@media</code>下的 article</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.article</span> {</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">30px</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ddd</span>;</span><br><span class="line">  <span class="attribute">border-top</span>: <span class="number">1px</span> solid <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">85</span>, <span class="number">185</span>, <span class="number">185</span>, <span class="number">0.425</span>);</span><br><span class="line">  <span class="attribute">transition</span>: all <span class="number">0.2s</span> ease-in;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>根据自己喜好改变<code>background</code>属性值</p><h3 id="8-3-头像图片"><a href="#8-3-头像图片" class="headerlink" title="8.3 头像图片"></a>8.3 头像图片</h3><p>直接在<code>_config.yml</code>中修改，我改成了透明即<code>header: 'rgba(255, 127, 127, 0)'</code></p><h2 id="9-给你的网页添加动态标题"><a href="#9-给你的网页添加动态标题" class="headerlink" title="9. 给你的网页添加动态标题"></a>9. 给你的网页添加动态标题</h2><p>在网站的开头或者结尾添加代码，我是在<code>layout.ejs</code>上添加的</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="keyword">var</span> OriginTitile=<span class="built_in">document</span>.title;</span><br><span class="line">  <span class="keyword">var</span> st;</span><br><span class="line">  <span class="built_in">document</span>.addEventListener(<span class="string">'visibilitychange'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span><br><span class="line">  <span class="keyword">if</span>(<span class="built_in">document</span>.hidden){</span><br><span class="line">      <span class="built_in">document</span>.title=<span class="string">"(つェ⊂)看不惹~"</span>+OriginTitile;</span><br><span class="line">      clearTimeout(st);</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'hide'</span>);</span><br><span class="line">  }</span><br><span class="line">  <span class="keyword">else</span>{</span><br><span class="line">      <span class="built_in">document</span>.title=<span class="string">'(*´∇｀*)被你发现了~ '</span>+OriginTitile;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'show'</span>);</span><br><span class="line">      st=setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span><br><span class="line">      <span class="built_in">document</span>.title=OriginTitile;</span><br><span class="line">      },<span class="number">6000</span>);</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'endChange='</span>);</span><br><span class="line">  }</span><br><span class="line">  });</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 技术力 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
